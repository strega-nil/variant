#include <type_traits>
#include <cstdint>
#include <functional>
template<class... Ts> struct make_void{typedef void type;};
template<class... Ts> using void_t = typename make_void<Ts...>::type;
#define VARIANT_NARG__(...) VARIANT_NARG_I_(__VA_ARGS__, VARIANT_RSEQ_N())
#define VARIANT_NARG_I_(...) VARIANT_ARG_N(__VA_ARGS__)
#define VARIANT_ARG_N(NAME,_1,_2,_3,_4,_5,_6,_7,_8,_9,_a,_b,_c,_d,_e,_f,_10,_11,_12,_13,_14,_15,_16,_17,_18,_19,_1a,_1b,_1c,_1d,_1e,_1f,_20,_21,_22,_23,_24,_25,_26,_27,_28,_29,_2a,_2b,_2c,_2d,_2e,_2f,_30,_31,_32,_33,_34,_35,_36,_37,_38,_39,_3a,_3b,_3c,_3d,_3e,_3f,_40,_41,_42,_43,_44,_45,_46,_47,_48,_49,_4a,_4b,_4c,_4d,_4e,_4f,_50,_51,_52,_53,_54,_55,_56,_57,_58,_59,_5a,_5b,_5c,_5d,_5e,_5f,_60,_61,_62,_63,_64,_65,_66,_67,_68,_69,_6a,_6b,_6c,_6d,_6e,_6f,_70,_71,_72,_73,_74,_75,_76,_77,_78,_79,_7a,_7b,_7c,_7d,_7e,_7f,_80,_81,_82,_83,_84,_85,_86,_87,_88,_89,_8a,_8b,_8c,_8d,_8e,_8f,_90,_91,_92,_93,_94,_95,_96,_97,_98,_99,_9a,_9b,_9c,_9d,_9e,_9f,_a0,_a1,_a2,_a3,_a4,_a5,_a6,_a7,_a8,_a9,_aa,_ab,_ac,_ad,_ae,_af,_b0,_b1,_b2,_b3,_b4,_b5,_b6,_b7,_b8,_b9,_ba,_bb,_bc,_bd,_be,_bf,_c0,_c1,_c2,_c3,_c4,_c5,_c6,_c7,_c8,_c9,_ca,_cb,_cc,_cd,_ce,_cf,_d0,_d1,_d2,_d3,_d4,_d5,_d6,_d7,_d8,_d9,_da,_db,_dc,_dd,_de,_df,_e0,_e1,_e2,_e3,_e4,_e5,_e6,_e7,_e8,_e9,_ea,_eb,_ec,_ed,_ee,_ef,_f0,_f1,_f2,_f3,_f4,_f5,_f6,_f7,_f8,_f9,_fa,_fb,_fc,_fd,_fe,_ff,_100,N, ...) N
#define VARIANT_RSEQ_N() 80,r,7f,r,7e,r,7d,r,7c,r,7b,r,7a,r,79,r,78,r,77,r,76,r,75,r,74,r,73,r,72,r,71,r,70,r,6f,r,6e,r,6d,r,6c,r,6b,r,6a,r,69,r,68,r,67,r,66,r,65,r,64,r,63,r,62,r,61,r,60,r,5f,r,5e,r,5d,r,5c,r,5b,r,5a,r,59,r,58,r,57,r,56,r,55,r,54,r,53,r,52,r,51,r,50,r,4f,r,4e,r,4d,r,4c,r,4b,r,4a,r,49,r,48,r,47,r,46,r,45,r,44,r,43,r,42,r,41,r,40,r,3f,r,3e,r,3d,r,3c,r,3b,r,3a,r,39,r,38,r,37,r,36,r,35,r,34,r,33,r,32,r,31,r,30,r,2f,r,2e,r,2d,r,2c,r,2b,r,2a,r,29,r,28,r,27,r,26,r,25,r,24,r,23,r,22,r,21,r,20,r,1f,r,1e,r,1d,r,1c,r,1b,r,1a,r,19,r,18,r,17,r,16,r,15,r,14,r,13,r,12,r,11,r,10,r,f,r,e,r,d,r,c,r,b,r,a,r,9,r,8,r,7,r,6,r,5,r,4,r,3,r,2,r,1,r
#define _VFUNC_(NAME, N) NAME##N
#define _VFUNC(NAME, N)  _VFUNC_(NAME, N)
#define VFUNC(FUNC, ...) _VFUNC(FUNC, VARIANT_NARG__(__VA_ARGS__)) (__VA_ARGS__)
#define end_adt() };
#define adt(NAME, ...) VFUNC(adt, NAME, __VA_ARGS__)
#define adtr(NAME, ...) enum error_incorrect_number_of_arguments_to_adt_for_##NAME;
#define _impl_adt_real(T) std::conditional_t<std::is_void<T>::value, std::uint8_t, T>

#define _impl_adt_K1(NAME,V1,T1) V1,
#define _impl_adt_D1(NAME,V1,T1)data(){std::memset(reinterpret_cast<void*>(this),0,sizeof(*this));}~data(){}data(data const& d){std::memcpy(reinterpret_cast<void*>(this),reinterpret_cast<void const*>(&d), sizeof(*this));}data(data&& d){std::memcpy(reinterpret_cast<void*>(this),reinterpret_cast<void const*>(&d), sizeof(*this));}data& operator=(data const& d){new(this) data(d);return *this;}data& operator=(data&& d){new(this) data(d);return *this;}_impl_adt_real(T1)V1;
#define _impl_adt_MF1(NAME,V1,T1) static void _no_op(){}std::function<void()>default_=_no_op;std::function<void(T1)>V1##_;
#define _impl_adt_MM1(NAME,V1,T1) private:template<class t,class...args>static void _call_func(std::function<void(args...)>,t);template<class t>static void _call_func(std::function<void()>f,t){f();}template<class t>static void _call_func(std::function<void(t)>f,t g){f(g);}public:matcher(){}matcher const& _(std::function<void()>f){default_=f;return *this;}template<class T=T1>void call_##V1(_impl_adt_real(T1)a)const{_call_func(V1##_, a);}matcher& V1(std::function<void(T1)>f){V1##_=f;return *this;}
#define _impl_adt_M1(NAME,V1,T1) private:NAME(kind k):kind_(k){}public:template<class T=T1,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1(_impl_adt_real(T1)const& t){NAME ret(kind::V1);try{new(&ret.data_.V1)T(t);}catch(...){std::terminate();}return ret;}template<class T=T1,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1(_impl_adt_real(T1)&& t){NAME ret(kind::V1);try{new(&ret.data_.V1)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T1,class=std::enable_if_t<std::is_void<T>::value>>static NAME V1(){NAME ret(kind::V1);return ret;}
#define _impl_adt_MS1(NAME,V1,T1) case kind::V1:m.call_##V1(data_.V1);break;
#define _impl_adt_Ds1(NAME,V1,T1) case kind::V1:data_.V1.~decltype(data_.V1)();break;
#define _impl_adt_Cc1(NAME,V1,T1) case kind::V1:new(&data_.V1)decltype(data_.V1)(a.data_.V1);break;
#define _impl_adt_Mc1(NAME,V1,T1) case kind::V1:new(&data_.V1)decltype(data_.V1)(std::move(a.data_.V1));break;
#define adt1(NAME,V1,T1) class NAME {public:enum class kind{_impl_adt_K1(NAME,V1,T1)};private:kind kind_;union data{_impl_adt_D1(NAME,V1,T1)}data_;public:class matcher{_impl_adt_MF1(NAME,V1,T1)public:_impl_adt_MM1(NAME,V1,T1)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc1(NAME,V1,T1)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc1(NAME,V1,T1)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds1(NAME,V1,T1)}}_impl_adt_M1(NAME,V1,T1)void match(matcher const& m){switch(kind_){_impl_adt_MS1(NAME,V1,T1)}}private:
#define _impl_adt_K2(NAME,V1,T1,V2,T2) _impl_adt_K1(NAME,V1,T1)V2,
#define _impl_adt_D2(NAME,V1,T1,V2,T2)_impl_adt_D1(NAME,V1,T1)_impl_adt_real(T2)V2;
#define _impl_adt_MF2(NAME,V1,T1,V2,T2) _impl_adt_MF1(NAME,V1,T1)std::function<void(T2)>V2##_;
#define _impl_adt_MM2(NAME,V1,T1,V2,T2) _impl_adt_MM1(NAME,V1,T1)template<class T=T2>void call_##V2(_impl_adt_real(T2)a)const{_call_func(V2##_, a);}matcher& V2(std::function<void(T2)>f){V2##_=f;return *this;}
#define _impl_adt_M2(NAME,V1,T1,V2,T2) _impl_adt_M1(NAME,V1,T1)template<class T=T2,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2(_impl_adt_real(T2)const& t){NAME ret(kind::V2);try{new(&ret.data_.V2)T(t);}catch(...){std::terminate();}return ret;}template<class T=T2,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2(_impl_adt_real(T2)&& t){NAME ret(kind::V2);try{new(&ret.data_.V2)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T2,class=std::enable_if_t<std::is_void<T>::value>>static NAME V2(){NAME ret(kind::V2);return ret;}
#define _impl_adt_MS2(NAME,V1,T1,V2,T2) _impl_adt_MS1(NAME,V1,T1)case kind::V2:m.call_##V2(data_.V2);break;
#define _impl_adt_Ds2(NAME,V1,T1,V2,T2) _impl_adt_Ds1(NAME,V1,T1)case kind::V2:data_.V2.~decltype(data_.V2)();break;
#define _impl_adt_Cc2(NAME,V1,T1,V2,T2) _impl_adt_Cc1(NAME,V1,T1)case kind::V2:new(&data_.V2)decltype(data_.V2)(a.data_.V2);break;
#define _impl_adt_Mc2(NAME,V1,T1,V2,T2) _impl_adt_Mc1(NAME,V1,T1)case kind::V2:new(&data_.V2)decltype(data_.V2)(std::move(a.data_.V2));break;
#define adt2(NAME,V1,T1,V2,T2) class NAME {public:enum class kind{_impl_adt_K2(NAME,V1,T1,V2,T2)};private:kind kind_;union data{_impl_adt_D2(NAME,V1,T1,V2,T2)}data_;public:class matcher{_impl_adt_MF2(NAME,V1,T1,V2,T2)public:_impl_adt_MM2(NAME,V1,T1,V2,T2)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc2(NAME,V1,T1,V2,T2)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc2(NAME,V1,T1,V2,T2)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds2(NAME,V1,T1,V2,T2)}}_impl_adt_M2(NAME,V1,T1,V2,T2)void match(matcher const& m){switch(kind_){_impl_adt_MS2(NAME,V1,T1,V2,T2)}}private:
#define _impl_adt_K3(NAME,V1,T1,V2,T2,V3,T3) _impl_adt_K2(NAME,V1,T1,V2,T2)V3,
#define _impl_adt_D3(NAME,V1,T1,V2,T2,V3,T3)_impl_adt_D2(NAME,V1,T1,V2,T2)_impl_adt_real(T3)V3;
#define _impl_adt_MF3(NAME,V1,T1,V2,T2,V3,T3) _impl_adt_MF2(NAME,V1,T1,V2,T2)std::function<void(T3)>V3##_;
#define _impl_adt_MM3(NAME,V1,T1,V2,T2,V3,T3) _impl_adt_MM2(NAME,V1,T1,V2,T2)template<class T=T3>void call_##V3(_impl_adt_real(T3)a)const{_call_func(V3##_, a);}matcher& V3(std::function<void(T3)>f){V3##_=f;return *this;}
#define _impl_adt_M3(NAME,V1,T1,V2,T2,V3,T3) _impl_adt_M2(NAME,V1,T1,V2,T2)template<class T=T3,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3(_impl_adt_real(T3)const& t){NAME ret(kind::V3);try{new(&ret.data_.V3)T(t);}catch(...){std::terminate();}return ret;}template<class T=T3,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3(_impl_adt_real(T3)&& t){NAME ret(kind::V3);try{new(&ret.data_.V3)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T3,class=std::enable_if_t<std::is_void<T>::value>>static NAME V3(){NAME ret(kind::V3);return ret;}
#define _impl_adt_MS3(NAME,V1,T1,V2,T2,V3,T3) _impl_adt_MS2(NAME,V1,T1,V2,T2)case kind::V3:m.call_##V3(data_.V3);break;
#define _impl_adt_Ds3(NAME,V1,T1,V2,T2,V3,T3) _impl_adt_Ds2(NAME,V1,T1,V2,T2)case kind::V3:data_.V3.~decltype(data_.V3)();break;
#define _impl_adt_Cc3(NAME,V1,T1,V2,T2,V3,T3) _impl_adt_Cc2(NAME,V1,T1,V2,T2)case kind::V3:new(&data_.V3)decltype(data_.V3)(a.data_.V3);break;
#define _impl_adt_Mc3(NAME,V1,T1,V2,T2,V3,T3) _impl_adt_Mc2(NAME,V1,T1,V2,T2)case kind::V3:new(&data_.V3)decltype(data_.V3)(std::move(a.data_.V3));break;
#define adt3(NAME,V1,T1,V2,T2,V3,T3) class NAME {public:enum class kind{_impl_adt_K3(NAME,V1,T1,V2,T2,V3,T3)};private:kind kind_;union data{_impl_adt_D3(NAME,V1,T1,V2,T2,V3,T3)}data_;public:class matcher{_impl_adt_MF3(NAME,V1,T1,V2,T2,V3,T3)public:_impl_adt_MM3(NAME,V1,T1,V2,T2,V3,T3)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc3(NAME,V1,T1,V2,T2,V3,T3)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc3(NAME,V1,T1,V2,T2,V3,T3)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds3(NAME,V1,T1,V2,T2,V3,T3)}}_impl_adt_M3(NAME,V1,T1,V2,T2,V3,T3)void match(matcher const& m){switch(kind_){_impl_adt_MS3(NAME,V1,T1,V2,T2,V3,T3)}}private:
#define _impl_adt_K4(NAME,V1,T1,V2,T2,V3,T3,V4,T4) _impl_adt_K3(NAME,V1,T1,V2,T2,V3,T3)V4,
#define _impl_adt_D4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)_impl_adt_D3(NAME,V1,T1,V2,T2,V3,T3)_impl_adt_real(T4)V4;
#define _impl_adt_MF4(NAME,V1,T1,V2,T2,V3,T3,V4,T4) _impl_adt_MF3(NAME,V1,T1,V2,T2,V3,T3)std::function<void(T4)>V4##_;
#define _impl_adt_MM4(NAME,V1,T1,V2,T2,V3,T3,V4,T4) _impl_adt_MM3(NAME,V1,T1,V2,T2,V3,T3)template<class T=T4>void call_##V4(_impl_adt_real(T4)a)const{_call_func(V4##_, a);}matcher& V4(std::function<void(T4)>f){V4##_=f;return *this;}
#define _impl_adt_M4(NAME,V1,T1,V2,T2,V3,T3,V4,T4) _impl_adt_M3(NAME,V1,T1,V2,T2,V3,T3)template<class T=T4,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4(_impl_adt_real(T4)const& t){NAME ret(kind::V4);try{new(&ret.data_.V4)T(t);}catch(...){std::terminate();}return ret;}template<class T=T4,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4(_impl_adt_real(T4)&& t){NAME ret(kind::V4);try{new(&ret.data_.V4)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T4,class=std::enable_if_t<std::is_void<T>::value>>static NAME V4(){NAME ret(kind::V4);return ret;}
#define _impl_adt_MS4(NAME,V1,T1,V2,T2,V3,T3,V4,T4) _impl_adt_MS3(NAME,V1,T1,V2,T2,V3,T3)case kind::V4:m.call_##V4(data_.V4);break;
#define _impl_adt_Ds4(NAME,V1,T1,V2,T2,V3,T3,V4,T4) _impl_adt_Ds3(NAME,V1,T1,V2,T2,V3,T3)case kind::V4:data_.V4.~decltype(data_.V4)();break;
#define _impl_adt_Cc4(NAME,V1,T1,V2,T2,V3,T3,V4,T4) _impl_adt_Cc3(NAME,V1,T1,V2,T2,V3,T3)case kind::V4:new(&data_.V4)decltype(data_.V4)(a.data_.V4);break;
#define _impl_adt_Mc4(NAME,V1,T1,V2,T2,V3,T3,V4,T4) _impl_adt_Mc3(NAME,V1,T1,V2,T2,V3,T3)case kind::V4:new(&data_.V4)decltype(data_.V4)(std::move(a.data_.V4));break;
#define adt4(NAME,V1,T1,V2,T2,V3,T3,V4,T4) class NAME {public:enum class kind{_impl_adt_K4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)};private:kind kind_;union data{_impl_adt_D4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)}data_;public:class matcher{_impl_adt_MF4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)public:_impl_adt_MM4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)}}_impl_adt_M4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)void match(matcher const& m){switch(kind_){_impl_adt_MS4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)}}private:
#define _impl_adt_K5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5) _impl_adt_K4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)V5,
#define _impl_adt_D5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)_impl_adt_D4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)_impl_adt_real(T5)V5;
#define _impl_adt_MF5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5) _impl_adt_MF4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)std::function<void(T5)>V5##_;
#define _impl_adt_MM5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5) _impl_adt_MM4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)template<class T=T5>void call_##V5(_impl_adt_real(T5)a)const{_call_func(V5##_, a);}matcher& V5(std::function<void(T5)>f){V5##_=f;return *this;}
#define _impl_adt_M5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5) _impl_adt_M4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)template<class T=T5,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5(_impl_adt_real(T5)const& t){NAME ret(kind::V5);try{new(&ret.data_.V5)T(t);}catch(...){std::terminate();}return ret;}template<class T=T5,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5(_impl_adt_real(T5)&& t){NAME ret(kind::V5);try{new(&ret.data_.V5)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T5,class=std::enable_if_t<std::is_void<T>::value>>static NAME V5(){NAME ret(kind::V5);return ret;}
#define _impl_adt_MS5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5) _impl_adt_MS4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)case kind::V5:m.call_##V5(data_.V5);break;
#define _impl_adt_Ds5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5) _impl_adt_Ds4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)case kind::V5:data_.V5.~decltype(data_.V5)();break;
#define _impl_adt_Cc5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5) _impl_adt_Cc4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)case kind::V5:new(&data_.V5)decltype(data_.V5)(a.data_.V5);break;
#define _impl_adt_Mc5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5) _impl_adt_Mc4(NAME,V1,T1,V2,T2,V3,T3,V4,T4)case kind::V5:new(&data_.V5)decltype(data_.V5)(std::move(a.data_.V5));break;
#define adt5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5) class NAME {public:enum class kind{_impl_adt_K5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)};private:kind kind_;union data{_impl_adt_D5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)}data_;public:class matcher{_impl_adt_MF5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)public:_impl_adt_MM5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)}}_impl_adt_M5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)void match(matcher const& m){switch(kind_){_impl_adt_MS5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)}}private:
#define _impl_adt_K6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6) _impl_adt_K5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)V6,
#define _impl_adt_D6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)_impl_adt_D5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)_impl_adt_real(T6)V6;
#define _impl_adt_MF6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6) _impl_adt_MF5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)std::function<void(T6)>V6##_;
#define _impl_adt_MM6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6) _impl_adt_MM5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)template<class T=T6>void call_##V6(_impl_adt_real(T6)a)const{_call_func(V6##_, a);}matcher& V6(std::function<void(T6)>f){V6##_=f;return *this;}
#define _impl_adt_M6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6) _impl_adt_M5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)template<class T=T6,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6(_impl_adt_real(T6)const& t){NAME ret(kind::V6);try{new(&ret.data_.V6)T(t);}catch(...){std::terminate();}return ret;}template<class T=T6,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6(_impl_adt_real(T6)&& t){NAME ret(kind::V6);try{new(&ret.data_.V6)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T6,class=std::enable_if_t<std::is_void<T>::value>>static NAME V6(){NAME ret(kind::V6);return ret;}
#define _impl_adt_MS6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6) _impl_adt_MS5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)case kind::V6:m.call_##V6(data_.V6);break;
#define _impl_adt_Ds6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6) _impl_adt_Ds5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)case kind::V6:data_.V6.~decltype(data_.V6)();break;
#define _impl_adt_Cc6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6) _impl_adt_Cc5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)case kind::V6:new(&data_.V6)decltype(data_.V6)(a.data_.V6);break;
#define _impl_adt_Mc6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6) _impl_adt_Mc5(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5)case kind::V6:new(&data_.V6)decltype(data_.V6)(std::move(a.data_.V6));break;
#define adt6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6) class NAME {public:enum class kind{_impl_adt_K6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)};private:kind kind_;union data{_impl_adt_D6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)}data_;public:class matcher{_impl_adt_MF6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)public:_impl_adt_MM6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)}}_impl_adt_M6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)void match(matcher const& m){switch(kind_){_impl_adt_MS6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)}}private:
#define _impl_adt_K7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7) _impl_adt_K6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)V7,
#define _impl_adt_D7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)_impl_adt_D6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)_impl_adt_real(T7)V7;
#define _impl_adt_MF7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7) _impl_adt_MF6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)std::function<void(T7)>V7##_;
#define _impl_adt_MM7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7) _impl_adt_MM6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)template<class T=T7>void call_##V7(_impl_adt_real(T7)a)const{_call_func(V7##_, a);}matcher& V7(std::function<void(T7)>f){V7##_=f;return *this;}
#define _impl_adt_M7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7) _impl_adt_M6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)template<class T=T7,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7(_impl_adt_real(T7)const& t){NAME ret(kind::V7);try{new(&ret.data_.V7)T(t);}catch(...){std::terminate();}return ret;}template<class T=T7,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7(_impl_adt_real(T7)&& t){NAME ret(kind::V7);try{new(&ret.data_.V7)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T7,class=std::enable_if_t<std::is_void<T>::value>>static NAME V7(){NAME ret(kind::V7);return ret;}
#define _impl_adt_MS7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7) _impl_adt_MS6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)case kind::V7:m.call_##V7(data_.V7);break;
#define _impl_adt_Ds7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7) _impl_adt_Ds6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)case kind::V7:data_.V7.~decltype(data_.V7)();break;
#define _impl_adt_Cc7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7) _impl_adt_Cc6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)case kind::V7:new(&data_.V7)decltype(data_.V7)(a.data_.V7);break;
#define _impl_adt_Mc7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7) _impl_adt_Mc6(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6)case kind::V7:new(&data_.V7)decltype(data_.V7)(std::move(a.data_.V7));break;
#define adt7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7) class NAME {public:enum class kind{_impl_adt_K7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)};private:kind kind_;union data{_impl_adt_D7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)}data_;public:class matcher{_impl_adt_MF7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)public:_impl_adt_MM7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)}}_impl_adt_M7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)void match(matcher const& m){switch(kind_){_impl_adt_MS7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)}}private:
#define _impl_adt_K8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8) _impl_adt_K7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)V8,
#define _impl_adt_D8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)_impl_adt_D7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)_impl_adt_real(T8)V8;
#define _impl_adt_MF8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8) _impl_adt_MF7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)std::function<void(T8)>V8##_;
#define _impl_adt_MM8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8) _impl_adt_MM7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)template<class T=T8>void call_##V8(_impl_adt_real(T8)a)const{_call_func(V8##_, a);}matcher& V8(std::function<void(T8)>f){V8##_=f;return *this;}
#define _impl_adt_M8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8) _impl_adt_M7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)template<class T=T8,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V8(_impl_adt_real(T8)const& t){NAME ret(kind::V8);try{new(&ret.data_.V8)T(t);}catch(...){std::terminate();}return ret;}template<class T=T8,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V8(_impl_adt_real(T8)&& t){NAME ret(kind::V8);try{new(&ret.data_.V8)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T8,class=std::enable_if_t<std::is_void<T>::value>>static NAME V8(){NAME ret(kind::V8);return ret;}
#define _impl_adt_MS8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8) _impl_adt_MS7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)case kind::V8:m.call_##V8(data_.V8);break;
#define _impl_adt_Ds8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8) _impl_adt_Ds7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)case kind::V8:data_.V8.~decltype(data_.V8)();break;
#define _impl_adt_Cc8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8) _impl_adt_Cc7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)case kind::V8:new(&data_.V8)decltype(data_.V8)(a.data_.V8);break;
#define _impl_adt_Mc8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8) _impl_adt_Mc7(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7)case kind::V8:new(&data_.V8)decltype(data_.V8)(std::move(a.data_.V8));break;
#define adt8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8) class NAME {public:enum class kind{_impl_adt_K8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)};private:kind kind_;union data{_impl_adt_D8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)}data_;public:class matcher{_impl_adt_MF8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)public:_impl_adt_MM8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)}}_impl_adt_M8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)void match(matcher const& m){switch(kind_){_impl_adt_MS8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)}}private:
#define _impl_adt_K9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9) _impl_adt_K8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)V9,
#define _impl_adt_D9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)_impl_adt_D8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)_impl_adt_real(T9)V9;
#define _impl_adt_MF9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9) _impl_adt_MF8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)std::function<void(T9)>V9##_;
#define _impl_adt_MM9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9) _impl_adt_MM8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)template<class T=T9>void call_##V9(_impl_adt_real(T9)a)const{_call_func(V9##_, a);}matcher& V9(std::function<void(T9)>f){V9##_=f;return *this;}
#define _impl_adt_M9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9) _impl_adt_M8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)template<class T=T9,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V9(_impl_adt_real(T9)const& t){NAME ret(kind::V9);try{new(&ret.data_.V9)T(t);}catch(...){std::terminate();}return ret;}template<class T=T9,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V9(_impl_adt_real(T9)&& t){NAME ret(kind::V9);try{new(&ret.data_.V9)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T9,class=std::enable_if_t<std::is_void<T>::value>>static NAME V9(){NAME ret(kind::V9);return ret;}
#define _impl_adt_MS9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9) _impl_adt_MS8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)case kind::V9:m.call_##V9(data_.V9);break;
#define _impl_adt_Ds9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9) _impl_adt_Ds8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)case kind::V9:data_.V9.~decltype(data_.V9)();break;
#define _impl_adt_Cc9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9) _impl_adt_Cc8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)case kind::V9:new(&data_.V9)decltype(data_.V9)(a.data_.V9);break;
#define _impl_adt_Mc9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9) _impl_adt_Mc8(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8)case kind::V9:new(&data_.V9)decltype(data_.V9)(std::move(a.data_.V9));break;
#define adt9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9) class NAME {public:enum class kind{_impl_adt_K9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)};private:kind kind_;union data{_impl_adt_D9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)}data_;public:class matcher{_impl_adt_MF9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)public:_impl_adt_MM9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)}}_impl_adt_M9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)void match(matcher const& m){switch(kind_){_impl_adt_MS9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)}}private:
#define _impl_adt_Ka(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta) _impl_adt_K9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)Va,
#define _impl_adt_Da(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)_impl_adt_D9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)_impl_adt_real(Ta)Va;
#define _impl_adt_MFa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta) _impl_adt_MF9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)std::function<void(Ta)>Va##_;
#define _impl_adt_MMa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta) _impl_adt_MM9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)template<class T=Ta>void call_##Va(_impl_adt_real(Ta)a)const{_call_func(Va##_, a);}matcher& Va(std::function<void(Ta)>f){Va##_=f;return *this;}
#define _impl_adt_Ma(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta) _impl_adt_M9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)template<class T=Ta,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Va(_impl_adt_real(Ta)const& t){NAME ret(kind::Va);try{new(&ret.data_.Va)T(t);}catch(...){std::terminate();}return ret;}template<class T=Ta,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Va(_impl_adt_real(Ta)&& t){NAME ret(kind::Va);try{new(&ret.data_.Va)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=Ta,class=std::enable_if_t<std::is_void<T>::value>>static NAME Va(){NAME ret(kind::Va);return ret;}
#define _impl_adt_MSa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta) _impl_adt_MS9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)case kind::Va:m.call_##Va(data_.Va);break;
#define _impl_adt_Dsa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta) _impl_adt_Ds9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)case kind::Va:data_.Va.~decltype(data_.Va)();break;
#define _impl_adt_Cca(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta) _impl_adt_Cc9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)case kind::Va:new(&data_.Va)decltype(data_.Va)(a.data_.Va);break;
#define _impl_adt_Mca(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta) _impl_adt_Mc9(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9)case kind::Va:new(&data_.Va)decltype(data_.Va)(std::move(a.data_.Va));break;
#define adta(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta) class NAME {public:enum class kind{_impl_adt_Ka(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)};private:kind kind_;union data{_impl_adt_Da(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)}data_;public:class matcher{_impl_adt_MFa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)public:_impl_adt_MMa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cca(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mca(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Dsa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)}}_impl_adt_Ma(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)void match(matcher const& m){switch(kind_){_impl_adt_MSa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)}}private:
#define _impl_adt_Kb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb) _impl_adt_Ka(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)Vb,
#define _impl_adt_Db(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)_impl_adt_Da(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)_impl_adt_real(Tb)Vb;
#define _impl_adt_MFb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb) _impl_adt_MFa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)std::function<void(Tb)>Vb##_;
#define _impl_adt_MMb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb) _impl_adt_MMa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)template<class T=Tb>void call_##Vb(_impl_adt_real(Tb)a)const{_call_func(Vb##_, a);}matcher& Vb(std::function<void(Tb)>f){Vb##_=f;return *this;}
#define _impl_adt_Mb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb) _impl_adt_Ma(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)template<class T=Tb,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Vb(_impl_adt_real(Tb)const& t){NAME ret(kind::Vb);try{new(&ret.data_.Vb)T(t);}catch(...){std::terminate();}return ret;}template<class T=Tb,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Vb(_impl_adt_real(Tb)&& t){NAME ret(kind::Vb);try{new(&ret.data_.Vb)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=Tb,class=std::enable_if_t<std::is_void<T>::value>>static NAME Vb(){NAME ret(kind::Vb);return ret;}
#define _impl_adt_MSb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb) _impl_adt_MSa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)case kind::Vb:m.call_##Vb(data_.Vb);break;
#define _impl_adt_Dsb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb) _impl_adt_Dsa(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)case kind::Vb:data_.Vb.~decltype(data_.Vb)();break;
#define _impl_adt_Ccb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb) _impl_adt_Cca(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)case kind::Vb:new(&data_.Vb)decltype(data_.Vb)(a.data_.Vb);break;
#define _impl_adt_Mcb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb) _impl_adt_Mca(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta)case kind::Vb:new(&data_.Vb)decltype(data_.Vb)(std::move(a.data_.Vb));break;
#define adtb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb) class NAME {public:enum class kind{_impl_adt_Kb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)};private:kind kind_;union data{_impl_adt_Db(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)}data_;public:class matcher{_impl_adt_MFb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)public:_impl_adt_MMb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Ccb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mcb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Dsb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)}}_impl_adt_Mb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)void match(matcher const& m){switch(kind_){_impl_adt_MSb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)}}private:
#define _impl_adt_Kc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc) _impl_adt_Kb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)Vc,
#define _impl_adt_Dc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)_impl_adt_Db(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)_impl_adt_real(Tc)Vc;
#define _impl_adt_MFc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc) _impl_adt_MFb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)std::function<void(Tc)>Vc##_;
#define _impl_adt_MMc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc) _impl_adt_MMb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)template<class T=Tc>void call_##Vc(_impl_adt_real(Tc)a)const{_call_func(Vc##_, a);}matcher& Vc(std::function<void(Tc)>f){Vc##_=f;return *this;}
#define _impl_adt_Mc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc) _impl_adt_Mb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)template<class T=Tc,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Vc(_impl_adt_real(Tc)const& t){NAME ret(kind::Vc);try{new(&ret.data_.Vc)T(t);}catch(...){std::terminate();}return ret;}template<class T=Tc,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Vc(_impl_adt_real(Tc)&& t){NAME ret(kind::Vc);try{new(&ret.data_.Vc)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=Tc,class=std::enable_if_t<std::is_void<T>::value>>static NAME Vc(){NAME ret(kind::Vc);return ret;}
#define _impl_adt_MSc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc) _impl_adt_MSb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)case kind::Vc:m.call_##Vc(data_.Vc);break;
#define _impl_adt_Dsc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc) _impl_adt_Dsb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)case kind::Vc:data_.Vc.~decltype(data_.Vc)();break;
#define _impl_adt_Ccc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc) _impl_adt_Ccb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)case kind::Vc:new(&data_.Vc)decltype(data_.Vc)(a.data_.Vc);break;
#define _impl_adt_Mcc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc) _impl_adt_Mcb(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb)case kind::Vc:new(&data_.Vc)decltype(data_.Vc)(std::move(a.data_.Vc));break;
#define adtc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc) class NAME {public:enum class kind{_impl_adt_Kc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)};private:kind kind_;union data{_impl_adt_Dc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)}data_;public:class matcher{_impl_adt_MFc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)public:_impl_adt_MMc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Ccc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mcc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Dsc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)}}_impl_adt_Mc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)void match(matcher const& m){switch(kind_){_impl_adt_MSc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)}}private:
#define _impl_adt_Kd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td) _impl_adt_Kc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)Vd,
#define _impl_adt_Dd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)_impl_adt_Dc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)_impl_adt_real(Td)Vd;
#define _impl_adt_MFd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td) _impl_adt_MFc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)std::function<void(Td)>Vd##_;
#define _impl_adt_MMd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td) _impl_adt_MMc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)template<class T=Td>void call_##Vd(_impl_adt_real(Td)a)const{_call_func(Vd##_, a);}matcher& Vd(std::function<void(Td)>f){Vd##_=f;return *this;}
#define _impl_adt_Md(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td) _impl_adt_Mc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)template<class T=Td,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Vd(_impl_adt_real(Td)const& t){NAME ret(kind::Vd);try{new(&ret.data_.Vd)T(t);}catch(...){std::terminate();}return ret;}template<class T=Td,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Vd(_impl_adt_real(Td)&& t){NAME ret(kind::Vd);try{new(&ret.data_.Vd)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=Td,class=std::enable_if_t<std::is_void<T>::value>>static NAME Vd(){NAME ret(kind::Vd);return ret;}
#define _impl_adt_MSd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td) _impl_adt_MSc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)case kind::Vd:m.call_##Vd(data_.Vd);break;
#define _impl_adt_Dsd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td) _impl_adt_Dsc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)case kind::Vd:data_.Vd.~decltype(data_.Vd)();break;
#define _impl_adt_Ccd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td) _impl_adt_Ccc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)case kind::Vd:new(&data_.Vd)decltype(data_.Vd)(a.data_.Vd);break;
#define _impl_adt_Mcd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td) _impl_adt_Mcc(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc)case kind::Vd:new(&data_.Vd)decltype(data_.Vd)(std::move(a.data_.Vd));break;
#define adtd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td) class NAME {public:enum class kind{_impl_adt_Kd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)};private:kind kind_;union data{_impl_adt_Dd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)}data_;public:class matcher{_impl_adt_MFd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)public:_impl_adt_MMd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Ccd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mcd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Dsd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)}}_impl_adt_Md(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)void match(matcher const& m){switch(kind_){_impl_adt_MSd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)}}private:
#define _impl_adt_Ke(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te) _impl_adt_Kd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)Ve,
#define _impl_adt_De(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)_impl_adt_Dd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)_impl_adt_real(Te)Ve;
#define _impl_adt_MFe(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te) _impl_adt_MFd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)std::function<void(Te)>Ve##_;
#define _impl_adt_MMe(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te) _impl_adt_MMd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)template<class T=Te>void call_##Ve(_impl_adt_real(Te)a)const{_call_func(Ve##_, a);}matcher& Ve(std::function<void(Te)>f){Ve##_=f;return *this;}
#define _impl_adt_Me(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te) _impl_adt_Md(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)template<class T=Te,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Ve(_impl_adt_real(Te)const& t){NAME ret(kind::Ve);try{new(&ret.data_.Ve)T(t);}catch(...){std::terminate();}return ret;}template<class T=Te,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Ve(_impl_adt_real(Te)&& t){NAME ret(kind::Ve);try{new(&ret.data_.Ve)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=Te,class=std::enable_if_t<std::is_void<T>::value>>static NAME Ve(){NAME ret(kind::Ve);return ret;}
#define _impl_adt_MSe(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te) _impl_adt_MSd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)case kind::Ve:m.call_##Ve(data_.Ve);break;
#define _impl_adt_Dse(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te) _impl_adt_Dsd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)case kind::Ve:data_.Ve.~decltype(data_.Ve)();break;
#define _impl_adt_Cce(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te) _impl_adt_Ccd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)case kind::Ve:new(&data_.Ve)decltype(data_.Ve)(a.data_.Ve);break;
#define _impl_adt_Mce(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te) _impl_adt_Mcd(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td)case kind::Ve:new(&data_.Ve)decltype(data_.Ve)(std::move(a.data_.Ve));break;
#define adte(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te) class NAME {public:enum class kind{_impl_adt_Ke(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)};private:kind kind_;union data{_impl_adt_De(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)}data_;public:class matcher{_impl_adt_MFe(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)public:_impl_adt_MMe(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cce(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mce(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Dse(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)}}_impl_adt_Me(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)void match(matcher const& m){switch(kind_){_impl_adt_MSe(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)}}private:
#define _impl_adt_Kf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf) _impl_adt_Ke(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)Vf,
#define _impl_adt_Df(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)_impl_adt_De(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)_impl_adt_real(Tf)Vf;
#define _impl_adt_MFf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf) _impl_adt_MFe(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)std::function<void(Tf)>Vf##_;
#define _impl_adt_MMf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf) _impl_adt_MMe(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)template<class T=Tf>void call_##Vf(_impl_adt_real(Tf)a)const{_call_func(Vf##_, a);}matcher& Vf(std::function<void(Tf)>f){Vf##_=f;return *this;}
#define _impl_adt_Mf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf) _impl_adt_Me(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)template<class T=Tf,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Vf(_impl_adt_real(Tf)const& t){NAME ret(kind::Vf);try{new(&ret.data_.Vf)T(t);}catch(...){std::terminate();}return ret;}template<class T=Tf,class=std::enable_if_t<!std::is_void<T>::value>>static NAME Vf(_impl_adt_real(Tf)&& t){NAME ret(kind::Vf);try{new(&ret.data_.Vf)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=Tf,class=std::enable_if_t<std::is_void<T>::value>>static NAME Vf(){NAME ret(kind::Vf);return ret;}
#define _impl_adt_MSf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf) _impl_adt_MSe(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)case kind::Vf:m.call_##Vf(data_.Vf);break;
#define _impl_adt_Dsf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf) _impl_adt_Dse(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)case kind::Vf:data_.Vf.~decltype(data_.Vf)();break;
#define _impl_adt_Ccf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf) _impl_adt_Cce(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)case kind::Vf:new(&data_.Vf)decltype(data_.Vf)(a.data_.Vf);break;
#define _impl_adt_Mcf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf) _impl_adt_Mce(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te)case kind::Vf:new(&data_.Vf)decltype(data_.Vf)(std::move(a.data_.Vf));break;
#define adtf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf) class NAME {public:enum class kind{_impl_adt_Kf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)};private:kind kind_;union data{_impl_adt_Df(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)}data_;public:class matcher{_impl_adt_MFf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)public:_impl_adt_MMf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Ccf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mcf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Dsf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)}}_impl_adt_Mf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)void match(matcher const& m){switch(kind_){_impl_adt_MSf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)}}private:
#define _impl_adt_K10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10) _impl_adt_Kf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)V10,
#define _impl_adt_D10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)_impl_adt_Df(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)_impl_adt_real(T10)V10;
#define _impl_adt_MF10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10) _impl_adt_MFf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)std::function<void(T10)>V10##_;
#define _impl_adt_MM10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10) _impl_adt_MMf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)template<class T=T10>void call_##V10(_impl_adt_real(T10)a)const{_call_func(V10##_, a);}matcher& V10(std::function<void(T10)>f){V10##_=f;return *this;}
#define _impl_adt_M10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10) _impl_adt_Mf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)template<class T=T10,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V10(_impl_adt_real(T10)const& t){NAME ret(kind::V10);try{new(&ret.data_.V10)T(t);}catch(...){std::terminate();}return ret;}template<class T=T10,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V10(_impl_adt_real(T10)&& t){NAME ret(kind::V10);try{new(&ret.data_.V10)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T10,class=std::enable_if_t<std::is_void<T>::value>>static NAME V10(){NAME ret(kind::V10);return ret;}
#define _impl_adt_MS10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10) _impl_adt_MSf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)case kind::V10:m.call_##V10(data_.V10);break;
#define _impl_adt_Ds10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10) _impl_adt_Dsf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)case kind::V10:data_.V10.~decltype(data_.V10)();break;
#define _impl_adt_Cc10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10) _impl_adt_Ccf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)case kind::V10:new(&data_.V10)decltype(data_.V10)(a.data_.V10);break;
#define _impl_adt_Mc10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10) _impl_adt_Mcf(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf)case kind::V10:new(&data_.V10)decltype(data_.V10)(std::move(a.data_.V10));break;
#define adt10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10) class NAME {public:enum class kind{_impl_adt_K10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)};private:kind kind_;union data{_impl_adt_D10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)}data_;public:class matcher{_impl_adt_MF10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)public:_impl_adt_MM10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)}}_impl_adt_M10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)void match(matcher const& m){switch(kind_){_impl_adt_MS10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)}}private:
#define _impl_adt_K11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11) _impl_adt_K10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)V11,
#define _impl_adt_D11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)_impl_adt_D10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)_impl_adt_real(T11)V11;
#define _impl_adt_MF11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11) _impl_adt_MF10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)std::function<void(T11)>V11##_;
#define _impl_adt_MM11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11) _impl_adt_MM10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)template<class T=T11>void call_##V11(_impl_adt_real(T11)a)const{_call_func(V11##_, a);}matcher& V11(std::function<void(T11)>f){V11##_=f;return *this;}
#define _impl_adt_M11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11) _impl_adt_M10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)template<class T=T11,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V11(_impl_adt_real(T11)const& t){NAME ret(kind::V11);try{new(&ret.data_.V11)T(t);}catch(...){std::terminate();}return ret;}template<class T=T11,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V11(_impl_adt_real(T11)&& t){NAME ret(kind::V11);try{new(&ret.data_.V11)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T11,class=std::enable_if_t<std::is_void<T>::value>>static NAME V11(){NAME ret(kind::V11);return ret;}
#define _impl_adt_MS11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11) _impl_adt_MS10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)case kind::V11:m.call_##V11(data_.V11);break;
#define _impl_adt_Ds11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11) _impl_adt_Ds10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)case kind::V11:data_.V11.~decltype(data_.V11)();break;
#define _impl_adt_Cc11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11) _impl_adt_Cc10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)case kind::V11:new(&data_.V11)decltype(data_.V11)(a.data_.V11);break;
#define _impl_adt_Mc11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11) _impl_adt_Mc10(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10)case kind::V11:new(&data_.V11)decltype(data_.V11)(std::move(a.data_.V11));break;
#define adt11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11) class NAME {public:enum class kind{_impl_adt_K11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)};private:kind kind_;union data{_impl_adt_D11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)}data_;public:class matcher{_impl_adt_MF11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)public:_impl_adt_MM11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)}}_impl_adt_M11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)void match(matcher const& m){switch(kind_){_impl_adt_MS11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)}}private:
#define _impl_adt_K12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12) _impl_adt_K11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)V12,
#define _impl_adt_D12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)_impl_adt_D11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)_impl_adt_real(T12)V12;
#define _impl_adt_MF12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12) _impl_adt_MF11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)std::function<void(T12)>V12##_;
#define _impl_adt_MM12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12) _impl_adt_MM11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)template<class T=T12>void call_##V12(_impl_adt_real(T12)a)const{_call_func(V12##_, a);}matcher& V12(std::function<void(T12)>f){V12##_=f;return *this;}
#define _impl_adt_M12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12) _impl_adt_M11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)template<class T=T12,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V12(_impl_adt_real(T12)const& t){NAME ret(kind::V12);try{new(&ret.data_.V12)T(t);}catch(...){std::terminate();}return ret;}template<class T=T12,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V12(_impl_adt_real(T12)&& t){NAME ret(kind::V12);try{new(&ret.data_.V12)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T12,class=std::enable_if_t<std::is_void<T>::value>>static NAME V12(){NAME ret(kind::V12);return ret;}
#define _impl_adt_MS12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12) _impl_adt_MS11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)case kind::V12:m.call_##V12(data_.V12);break;
#define _impl_adt_Ds12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12) _impl_adt_Ds11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)case kind::V12:data_.V12.~decltype(data_.V12)();break;
#define _impl_adt_Cc12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12) _impl_adt_Cc11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)case kind::V12:new(&data_.V12)decltype(data_.V12)(a.data_.V12);break;
#define _impl_adt_Mc12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12) _impl_adt_Mc11(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11)case kind::V12:new(&data_.V12)decltype(data_.V12)(std::move(a.data_.V12));break;
#define adt12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12) class NAME {public:enum class kind{_impl_adt_K12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)};private:kind kind_;union data{_impl_adt_D12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)}data_;public:class matcher{_impl_adt_MF12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)public:_impl_adt_MM12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)}}_impl_adt_M12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)void match(matcher const& m){switch(kind_){_impl_adt_MS12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)}}private:
#define _impl_adt_K13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13) _impl_adt_K12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)V13,
#define _impl_adt_D13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)_impl_adt_D12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)_impl_adt_real(T13)V13;
#define _impl_adt_MF13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13) _impl_adt_MF12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)std::function<void(T13)>V13##_;
#define _impl_adt_MM13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13) _impl_adt_MM12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)template<class T=T13>void call_##V13(_impl_adt_real(T13)a)const{_call_func(V13##_, a);}matcher& V13(std::function<void(T13)>f){V13##_=f;return *this;}
#define _impl_adt_M13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13) _impl_adt_M12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)template<class T=T13,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V13(_impl_adt_real(T13)const& t){NAME ret(kind::V13);try{new(&ret.data_.V13)T(t);}catch(...){std::terminate();}return ret;}template<class T=T13,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V13(_impl_adt_real(T13)&& t){NAME ret(kind::V13);try{new(&ret.data_.V13)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T13,class=std::enable_if_t<std::is_void<T>::value>>static NAME V13(){NAME ret(kind::V13);return ret;}
#define _impl_adt_MS13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13) _impl_adt_MS12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)case kind::V13:m.call_##V13(data_.V13);break;
#define _impl_adt_Ds13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13) _impl_adt_Ds12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)case kind::V13:data_.V13.~decltype(data_.V13)();break;
#define _impl_adt_Cc13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13) _impl_adt_Cc12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)case kind::V13:new(&data_.V13)decltype(data_.V13)(a.data_.V13);break;
#define _impl_adt_Mc13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13) _impl_adt_Mc12(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12)case kind::V13:new(&data_.V13)decltype(data_.V13)(std::move(a.data_.V13));break;
#define adt13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13) class NAME {public:enum class kind{_impl_adt_K13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)};private:kind kind_;union data{_impl_adt_D13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)}data_;public:class matcher{_impl_adt_MF13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)public:_impl_adt_MM13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)}}_impl_adt_M13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)void match(matcher const& m){switch(kind_){_impl_adt_MS13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)}}private:
#define _impl_adt_K14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14) _impl_adt_K13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)V14,
#define _impl_adt_D14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)_impl_adt_D13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)_impl_adt_real(T14)V14;
#define _impl_adt_MF14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14) _impl_adt_MF13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)std::function<void(T14)>V14##_;
#define _impl_adt_MM14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14) _impl_adt_MM13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)template<class T=T14>void call_##V14(_impl_adt_real(T14)a)const{_call_func(V14##_, a);}matcher& V14(std::function<void(T14)>f){V14##_=f;return *this;}
#define _impl_adt_M14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14) _impl_adt_M13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)template<class T=T14,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V14(_impl_adt_real(T14)const& t){NAME ret(kind::V14);try{new(&ret.data_.V14)T(t);}catch(...){std::terminate();}return ret;}template<class T=T14,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V14(_impl_adt_real(T14)&& t){NAME ret(kind::V14);try{new(&ret.data_.V14)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T14,class=std::enable_if_t<std::is_void<T>::value>>static NAME V14(){NAME ret(kind::V14);return ret;}
#define _impl_adt_MS14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14) _impl_adt_MS13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)case kind::V14:m.call_##V14(data_.V14);break;
#define _impl_adt_Ds14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14) _impl_adt_Ds13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)case kind::V14:data_.V14.~decltype(data_.V14)();break;
#define _impl_adt_Cc14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14) _impl_adt_Cc13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)case kind::V14:new(&data_.V14)decltype(data_.V14)(a.data_.V14);break;
#define _impl_adt_Mc14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14) _impl_adt_Mc13(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13)case kind::V14:new(&data_.V14)decltype(data_.V14)(std::move(a.data_.V14));break;
#define adt14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14) class NAME {public:enum class kind{_impl_adt_K14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)};private:kind kind_;union data{_impl_adt_D14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)}data_;public:class matcher{_impl_adt_MF14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)public:_impl_adt_MM14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)}}_impl_adt_M14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)void match(matcher const& m){switch(kind_){_impl_adt_MS14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)}}private:
#define _impl_adt_K15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15) _impl_adt_K14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)V15,
#define _impl_adt_D15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)_impl_adt_D14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)_impl_adt_real(T15)V15;
#define _impl_adt_MF15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15) _impl_adt_MF14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)std::function<void(T15)>V15##_;
#define _impl_adt_MM15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15) _impl_adt_MM14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)template<class T=T15>void call_##V15(_impl_adt_real(T15)a)const{_call_func(V15##_, a);}matcher& V15(std::function<void(T15)>f){V15##_=f;return *this;}
#define _impl_adt_M15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15) _impl_adt_M14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)template<class T=T15,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V15(_impl_adt_real(T15)const& t){NAME ret(kind::V15);try{new(&ret.data_.V15)T(t);}catch(...){std::terminate();}return ret;}template<class T=T15,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V15(_impl_adt_real(T15)&& t){NAME ret(kind::V15);try{new(&ret.data_.V15)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T15,class=std::enable_if_t<std::is_void<T>::value>>static NAME V15(){NAME ret(kind::V15);return ret;}
#define _impl_adt_MS15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15) _impl_adt_MS14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)case kind::V15:m.call_##V15(data_.V15);break;
#define _impl_adt_Ds15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15) _impl_adt_Ds14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)case kind::V15:data_.V15.~decltype(data_.V15)();break;
#define _impl_adt_Cc15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15) _impl_adt_Cc14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)case kind::V15:new(&data_.V15)decltype(data_.V15)(a.data_.V15);break;
#define _impl_adt_Mc15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15) _impl_adt_Mc14(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14)case kind::V15:new(&data_.V15)decltype(data_.V15)(std::move(a.data_.V15));break;
#define adt15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15) class NAME {public:enum class kind{_impl_adt_K15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)};private:kind kind_;union data{_impl_adt_D15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)}data_;public:class matcher{_impl_adt_MF15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)public:_impl_adt_MM15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)}}_impl_adt_M15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)void match(matcher const& m){switch(kind_){_impl_adt_MS15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)}}private:
#define _impl_adt_K16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16) _impl_adt_K15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)V16,
#define _impl_adt_D16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)_impl_adt_D15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)_impl_adt_real(T16)V16;
#define _impl_adt_MF16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16) _impl_adt_MF15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)std::function<void(T16)>V16##_;
#define _impl_adt_MM16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16) _impl_adt_MM15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)template<class T=T16>void call_##V16(_impl_adt_real(T16)a)const{_call_func(V16##_, a);}matcher& V16(std::function<void(T16)>f){V16##_=f;return *this;}
#define _impl_adt_M16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16) _impl_adt_M15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)template<class T=T16,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V16(_impl_adt_real(T16)const& t){NAME ret(kind::V16);try{new(&ret.data_.V16)T(t);}catch(...){std::terminate();}return ret;}template<class T=T16,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V16(_impl_adt_real(T16)&& t){NAME ret(kind::V16);try{new(&ret.data_.V16)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T16,class=std::enable_if_t<std::is_void<T>::value>>static NAME V16(){NAME ret(kind::V16);return ret;}
#define _impl_adt_MS16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16) _impl_adt_MS15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)case kind::V16:m.call_##V16(data_.V16);break;
#define _impl_adt_Ds16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16) _impl_adt_Ds15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)case kind::V16:data_.V16.~decltype(data_.V16)();break;
#define _impl_adt_Cc16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16) _impl_adt_Cc15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)case kind::V16:new(&data_.V16)decltype(data_.V16)(a.data_.V16);break;
#define _impl_adt_Mc16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16) _impl_adt_Mc15(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15)case kind::V16:new(&data_.V16)decltype(data_.V16)(std::move(a.data_.V16));break;
#define adt16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16) class NAME {public:enum class kind{_impl_adt_K16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)};private:kind kind_;union data{_impl_adt_D16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)}data_;public:class matcher{_impl_adt_MF16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)public:_impl_adt_MM16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)}}_impl_adt_M16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)void match(matcher const& m){switch(kind_){_impl_adt_MS16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)}}private:
#define _impl_adt_K17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17) _impl_adt_K16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)V17,
#define _impl_adt_D17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)_impl_adt_D16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)_impl_adt_real(T17)V17;
#define _impl_adt_MF17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17) _impl_adt_MF16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)std::function<void(T17)>V17##_;
#define _impl_adt_MM17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17) _impl_adt_MM16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)template<class T=T17>void call_##V17(_impl_adt_real(T17)a)const{_call_func(V17##_, a);}matcher& V17(std::function<void(T17)>f){V17##_=f;return *this;}
#define _impl_adt_M17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17) _impl_adt_M16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)template<class T=T17,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V17(_impl_adt_real(T17)const& t){NAME ret(kind::V17);try{new(&ret.data_.V17)T(t);}catch(...){std::terminate();}return ret;}template<class T=T17,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V17(_impl_adt_real(T17)&& t){NAME ret(kind::V17);try{new(&ret.data_.V17)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T17,class=std::enable_if_t<std::is_void<T>::value>>static NAME V17(){NAME ret(kind::V17);return ret;}
#define _impl_adt_MS17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17) _impl_adt_MS16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)case kind::V17:m.call_##V17(data_.V17);break;
#define _impl_adt_Ds17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17) _impl_adt_Ds16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)case kind::V17:data_.V17.~decltype(data_.V17)();break;
#define _impl_adt_Cc17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17) _impl_adt_Cc16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)case kind::V17:new(&data_.V17)decltype(data_.V17)(a.data_.V17);break;
#define _impl_adt_Mc17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17) _impl_adt_Mc16(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16)case kind::V17:new(&data_.V17)decltype(data_.V17)(std::move(a.data_.V17));break;
#define adt17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17) class NAME {public:enum class kind{_impl_adt_K17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)};private:kind kind_;union data{_impl_adt_D17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)}data_;public:class matcher{_impl_adt_MF17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)public:_impl_adt_MM17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)}}_impl_adt_M17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)void match(matcher const& m){switch(kind_){_impl_adt_MS17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)}}private:
#define _impl_adt_K18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18) _impl_adt_K17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)V18,
#define _impl_adt_D18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)_impl_adt_D17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)_impl_adt_real(T18)V18;
#define _impl_adt_MF18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18) _impl_adt_MF17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)std::function<void(T18)>V18##_;
#define _impl_adt_MM18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18) _impl_adt_MM17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)template<class T=T18>void call_##V18(_impl_adt_real(T18)a)const{_call_func(V18##_, a);}matcher& V18(std::function<void(T18)>f){V18##_=f;return *this;}
#define _impl_adt_M18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18) _impl_adt_M17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)template<class T=T18,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V18(_impl_adt_real(T18)const& t){NAME ret(kind::V18);try{new(&ret.data_.V18)T(t);}catch(...){std::terminate();}return ret;}template<class T=T18,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V18(_impl_adt_real(T18)&& t){NAME ret(kind::V18);try{new(&ret.data_.V18)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T18,class=std::enable_if_t<std::is_void<T>::value>>static NAME V18(){NAME ret(kind::V18);return ret;}
#define _impl_adt_MS18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18) _impl_adt_MS17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)case kind::V18:m.call_##V18(data_.V18);break;
#define _impl_adt_Ds18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18) _impl_adt_Ds17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)case kind::V18:data_.V18.~decltype(data_.V18)();break;
#define _impl_adt_Cc18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18) _impl_adt_Cc17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)case kind::V18:new(&data_.V18)decltype(data_.V18)(a.data_.V18);break;
#define _impl_adt_Mc18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18) _impl_adt_Mc17(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17)case kind::V18:new(&data_.V18)decltype(data_.V18)(std::move(a.data_.V18));break;
#define adt18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18) class NAME {public:enum class kind{_impl_adt_K18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)};private:kind kind_;union data{_impl_adt_D18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)}data_;public:class matcher{_impl_adt_MF18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)public:_impl_adt_MM18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)}}_impl_adt_M18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)void match(matcher const& m){switch(kind_){_impl_adt_MS18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)}}private:
#define _impl_adt_K19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19) _impl_adt_K18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)V19,
#define _impl_adt_D19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)_impl_adt_D18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)_impl_adt_real(T19)V19;
#define _impl_adt_MF19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19) _impl_adt_MF18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)std::function<void(T19)>V19##_;
#define _impl_adt_MM19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19) _impl_adt_MM18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)template<class T=T19>void call_##V19(_impl_adt_real(T19)a)const{_call_func(V19##_, a);}matcher& V19(std::function<void(T19)>f){V19##_=f;return *this;}
#define _impl_adt_M19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19) _impl_adt_M18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)template<class T=T19,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V19(_impl_adt_real(T19)const& t){NAME ret(kind::V19);try{new(&ret.data_.V19)T(t);}catch(...){std::terminate();}return ret;}template<class T=T19,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V19(_impl_adt_real(T19)&& t){NAME ret(kind::V19);try{new(&ret.data_.V19)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T19,class=std::enable_if_t<std::is_void<T>::value>>static NAME V19(){NAME ret(kind::V19);return ret;}
#define _impl_adt_MS19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19) _impl_adt_MS18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)case kind::V19:m.call_##V19(data_.V19);break;
#define _impl_adt_Ds19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19) _impl_adt_Ds18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)case kind::V19:data_.V19.~decltype(data_.V19)();break;
#define _impl_adt_Cc19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19) _impl_adt_Cc18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)case kind::V19:new(&data_.V19)decltype(data_.V19)(a.data_.V19);break;
#define _impl_adt_Mc19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19) _impl_adt_Mc18(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18)case kind::V19:new(&data_.V19)decltype(data_.V19)(std::move(a.data_.V19));break;
#define adt19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19) class NAME {public:enum class kind{_impl_adt_K19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)};private:kind kind_;union data{_impl_adt_D19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)}data_;public:class matcher{_impl_adt_MF19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)public:_impl_adt_MM19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)}}_impl_adt_M19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)void match(matcher const& m){switch(kind_){_impl_adt_MS19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)}}private:
#define _impl_adt_K1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a) _impl_adt_K19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)V1a,
#define _impl_adt_D1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)_impl_adt_D19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)_impl_adt_real(T1a)V1a;
#define _impl_adt_MF1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a) _impl_adt_MF19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)std::function<void(T1a)>V1a##_;
#define _impl_adt_MM1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a) _impl_adt_MM19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)template<class T=T1a>void call_##V1a(_impl_adt_real(T1a)a)const{_call_func(V1a##_, a);}matcher& V1a(std::function<void(T1a)>f){V1a##_=f;return *this;}
#define _impl_adt_M1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a) _impl_adt_M19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)template<class T=T1a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1a(_impl_adt_real(T1a)const& t){NAME ret(kind::V1a);try{new(&ret.data_.V1a)T(t);}catch(...){std::terminate();}return ret;}template<class T=T1a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1a(_impl_adt_real(T1a)&& t){NAME ret(kind::V1a);try{new(&ret.data_.V1a)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T1a,class=std::enable_if_t<std::is_void<T>::value>>static NAME V1a(){NAME ret(kind::V1a);return ret;}
#define _impl_adt_MS1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a) _impl_adt_MS19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)case kind::V1a:m.call_##V1a(data_.V1a);break;
#define _impl_adt_Ds1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a) _impl_adt_Ds19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)case kind::V1a:data_.V1a.~decltype(data_.V1a)();break;
#define _impl_adt_Cc1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a) _impl_adt_Cc19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)case kind::V1a:new(&data_.V1a)decltype(data_.V1a)(a.data_.V1a);break;
#define _impl_adt_Mc1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a) _impl_adt_Mc19(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19)case kind::V1a:new(&data_.V1a)decltype(data_.V1a)(std::move(a.data_.V1a));break;
#define adt1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a) class NAME {public:enum class kind{_impl_adt_K1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)};private:kind kind_;union data{_impl_adt_D1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)}data_;public:class matcher{_impl_adt_MF1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)public:_impl_adt_MM1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)}}_impl_adt_M1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)void match(matcher const& m){switch(kind_){_impl_adt_MS1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)}}private:
#define _impl_adt_K1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b) _impl_adt_K1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)V1b,
#define _impl_adt_D1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)_impl_adt_D1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)_impl_adt_real(T1b)V1b;
#define _impl_adt_MF1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b) _impl_adt_MF1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)std::function<void(T1b)>V1b##_;
#define _impl_adt_MM1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b) _impl_adt_MM1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)template<class T=T1b>void call_##V1b(_impl_adt_real(T1b)a)const{_call_func(V1b##_, a);}matcher& V1b(std::function<void(T1b)>f){V1b##_=f;return *this;}
#define _impl_adt_M1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b) _impl_adt_M1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)template<class T=T1b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1b(_impl_adt_real(T1b)const& t){NAME ret(kind::V1b);try{new(&ret.data_.V1b)T(t);}catch(...){std::terminate();}return ret;}template<class T=T1b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1b(_impl_adt_real(T1b)&& t){NAME ret(kind::V1b);try{new(&ret.data_.V1b)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T1b,class=std::enable_if_t<std::is_void<T>::value>>static NAME V1b(){NAME ret(kind::V1b);return ret;}
#define _impl_adt_MS1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b) _impl_adt_MS1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)case kind::V1b:m.call_##V1b(data_.V1b);break;
#define _impl_adt_Ds1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b) _impl_adt_Ds1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)case kind::V1b:data_.V1b.~decltype(data_.V1b)();break;
#define _impl_adt_Cc1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b) _impl_adt_Cc1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)case kind::V1b:new(&data_.V1b)decltype(data_.V1b)(a.data_.V1b);break;
#define _impl_adt_Mc1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b) _impl_adt_Mc1a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a)case kind::V1b:new(&data_.V1b)decltype(data_.V1b)(std::move(a.data_.V1b));break;
#define adt1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b) class NAME {public:enum class kind{_impl_adt_K1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)};private:kind kind_;union data{_impl_adt_D1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)}data_;public:class matcher{_impl_adt_MF1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)public:_impl_adt_MM1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)}}_impl_adt_M1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)void match(matcher const& m){switch(kind_){_impl_adt_MS1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)}}private:
#define _impl_adt_K1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c) _impl_adt_K1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)V1c,
#define _impl_adt_D1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)_impl_adt_D1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)_impl_adt_real(T1c)V1c;
#define _impl_adt_MF1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c) _impl_adt_MF1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)std::function<void(T1c)>V1c##_;
#define _impl_adt_MM1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c) _impl_adt_MM1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)template<class T=T1c>void call_##V1c(_impl_adt_real(T1c)a)const{_call_func(V1c##_, a);}matcher& V1c(std::function<void(T1c)>f){V1c##_=f;return *this;}
#define _impl_adt_M1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c) _impl_adt_M1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)template<class T=T1c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1c(_impl_adt_real(T1c)const& t){NAME ret(kind::V1c);try{new(&ret.data_.V1c)T(t);}catch(...){std::terminate();}return ret;}template<class T=T1c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1c(_impl_adt_real(T1c)&& t){NAME ret(kind::V1c);try{new(&ret.data_.V1c)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T1c,class=std::enable_if_t<std::is_void<T>::value>>static NAME V1c(){NAME ret(kind::V1c);return ret;}
#define _impl_adt_MS1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c) _impl_adt_MS1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)case kind::V1c:m.call_##V1c(data_.V1c);break;
#define _impl_adt_Ds1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c) _impl_adt_Ds1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)case kind::V1c:data_.V1c.~decltype(data_.V1c)();break;
#define _impl_adt_Cc1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c) _impl_adt_Cc1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)case kind::V1c:new(&data_.V1c)decltype(data_.V1c)(a.data_.V1c);break;
#define _impl_adt_Mc1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c) _impl_adt_Mc1b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b)case kind::V1c:new(&data_.V1c)decltype(data_.V1c)(std::move(a.data_.V1c));break;
#define adt1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c) class NAME {public:enum class kind{_impl_adt_K1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)};private:kind kind_;union data{_impl_adt_D1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)}data_;public:class matcher{_impl_adt_MF1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)public:_impl_adt_MM1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)}}_impl_adt_M1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)void match(matcher const& m){switch(kind_){_impl_adt_MS1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)}}private:
#define _impl_adt_K1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d) _impl_adt_K1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)V1d,
#define _impl_adt_D1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)_impl_adt_D1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)_impl_adt_real(T1d)V1d;
#define _impl_adt_MF1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d) _impl_adt_MF1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)std::function<void(T1d)>V1d##_;
#define _impl_adt_MM1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d) _impl_adt_MM1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)template<class T=T1d>void call_##V1d(_impl_adt_real(T1d)a)const{_call_func(V1d##_, a);}matcher& V1d(std::function<void(T1d)>f){V1d##_=f;return *this;}
#define _impl_adt_M1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d) _impl_adt_M1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)template<class T=T1d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1d(_impl_adt_real(T1d)const& t){NAME ret(kind::V1d);try{new(&ret.data_.V1d)T(t);}catch(...){std::terminate();}return ret;}template<class T=T1d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1d(_impl_adt_real(T1d)&& t){NAME ret(kind::V1d);try{new(&ret.data_.V1d)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T1d,class=std::enable_if_t<std::is_void<T>::value>>static NAME V1d(){NAME ret(kind::V1d);return ret;}
#define _impl_adt_MS1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d) _impl_adt_MS1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)case kind::V1d:m.call_##V1d(data_.V1d);break;
#define _impl_adt_Ds1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d) _impl_adt_Ds1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)case kind::V1d:data_.V1d.~decltype(data_.V1d)();break;
#define _impl_adt_Cc1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d) _impl_adt_Cc1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)case kind::V1d:new(&data_.V1d)decltype(data_.V1d)(a.data_.V1d);break;
#define _impl_adt_Mc1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d) _impl_adt_Mc1c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c)case kind::V1d:new(&data_.V1d)decltype(data_.V1d)(std::move(a.data_.V1d));break;
#define adt1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d) class NAME {public:enum class kind{_impl_adt_K1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)};private:kind kind_;union data{_impl_adt_D1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)}data_;public:class matcher{_impl_adt_MF1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)public:_impl_adt_MM1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)}}_impl_adt_M1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)void match(matcher const& m){switch(kind_){_impl_adt_MS1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)}}private:
#define _impl_adt_K1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e) _impl_adt_K1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)V1e,
#define _impl_adt_D1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)_impl_adt_D1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)_impl_adt_real(T1e)V1e;
#define _impl_adt_MF1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e) _impl_adt_MF1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)std::function<void(T1e)>V1e##_;
#define _impl_adt_MM1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e) _impl_adt_MM1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)template<class T=T1e>void call_##V1e(_impl_adt_real(T1e)a)const{_call_func(V1e##_, a);}matcher& V1e(std::function<void(T1e)>f){V1e##_=f;return *this;}
#define _impl_adt_M1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e) _impl_adt_M1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)template<class T=T1e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1e(_impl_adt_real(T1e)const& t){NAME ret(kind::V1e);try{new(&ret.data_.V1e)T(t);}catch(...){std::terminate();}return ret;}template<class T=T1e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1e(_impl_adt_real(T1e)&& t){NAME ret(kind::V1e);try{new(&ret.data_.V1e)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T1e,class=std::enable_if_t<std::is_void<T>::value>>static NAME V1e(){NAME ret(kind::V1e);return ret;}
#define _impl_adt_MS1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e) _impl_adt_MS1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)case kind::V1e:m.call_##V1e(data_.V1e);break;
#define _impl_adt_Ds1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e) _impl_adt_Ds1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)case kind::V1e:data_.V1e.~decltype(data_.V1e)();break;
#define _impl_adt_Cc1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e) _impl_adt_Cc1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)case kind::V1e:new(&data_.V1e)decltype(data_.V1e)(a.data_.V1e);break;
#define _impl_adt_Mc1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e) _impl_adt_Mc1d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d)case kind::V1e:new(&data_.V1e)decltype(data_.V1e)(std::move(a.data_.V1e));break;
#define adt1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e) class NAME {public:enum class kind{_impl_adt_K1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)};private:kind kind_;union data{_impl_adt_D1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)}data_;public:class matcher{_impl_adt_MF1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)public:_impl_adt_MM1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)}}_impl_adt_M1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)void match(matcher const& m){switch(kind_){_impl_adt_MS1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)}}private:
#define _impl_adt_K1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f) _impl_adt_K1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)V1f,
#define _impl_adt_D1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)_impl_adt_D1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)_impl_adt_real(T1f)V1f;
#define _impl_adt_MF1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f) _impl_adt_MF1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)std::function<void(T1f)>V1f##_;
#define _impl_adt_MM1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f) _impl_adt_MM1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)template<class T=T1f>void call_##V1f(_impl_adt_real(T1f)a)const{_call_func(V1f##_, a);}matcher& V1f(std::function<void(T1f)>f){V1f##_=f;return *this;}
#define _impl_adt_M1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f) _impl_adt_M1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)template<class T=T1f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1f(_impl_adt_real(T1f)const& t){NAME ret(kind::V1f);try{new(&ret.data_.V1f)T(t);}catch(...){std::terminate();}return ret;}template<class T=T1f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V1f(_impl_adt_real(T1f)&& t){NAME ret(kind::V1f);try{new(&ret.data_.V1f)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T1f,class=std::enable_if_t<std::is_void<T>::value>>static NAME V1f(){NAME ret(kind::V1f);return ret;}
#define _impl_adt_MS1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f) _impl_adt_MS1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)case kind::V1f:m.call_##V1f(data_.V1f);break;
#define _impl_adt_Ds1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f) _impl_adt_Ds1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)case kind::V1f:data_.V1f.~decltype(data_.V1f)();break;
#define _impl_adt_Cc1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f) _impl_adt_Cc1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)case kind::V1f:new(&data_.V1f)decltype(data_.V1f)(a.data_.V1f);break;
#define _impl_adt_Mc1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f) _impl_adt_Mc1e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e)case kind::V1f:new(&data_.V1f)decltype(data_.V1f)(std::move(a.data_.V1f));break;
#define adt1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f) class NAME {public:enum class kind{_impl_adt_K1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)};private:kind kind_;union data{_impl_adt_D1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)}data_;public:class matcher{_impl_adt_MF1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)public:_impl_adt_MM1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)}}_impl_adt_M1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)void match(matcher const& m){switch(kind_){_impl_adt_MS1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)}}private:
#define _impl_adt_K20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20) _impl_adt_K1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)V20,
#define _impl_adt_D20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)_impl_adt_D1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)_impl_adt_real(T20)V20;
#define _impl_adt_MF20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20) _impl_adt_MF1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)std::function<void(T20)>V20##_;
#define _impl_adt_MM20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20) _impl_adt_MM1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)template<class T=T20>void call_##V20(_impl_adt_real(T20)a)const{_call_func(V20##_, a);}matcher& V20(std::function<void(T20)>f){V20##_=f;return *this;}
#define _impl_adt_M20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20) _impl_adt_M1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)template<class T=T20,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V20(_impl_adt_real(T20)const& t){NAME ret(kind::V20);try{new(&ret.data_.V20)T(t);}catch(...){std::terminate();}return ret;}template<class T=T20,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V20(_impl_adt_real(T20)&& t){NAME ret(kind::V20);try{new(&ret.data_.V20)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T20,class=std::enable_if_t<std::is_void<T>::value>>static NAME V20(){NAME ret(kind::V20);return ret;}
#define _impl_adt_MS20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20) _impl_adt_MS1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)case kind::V20:m.call_##V20(data_.V20);break;
#define _impl_adt_Ds20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20) _impl_adt_Ds1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)case kind::V20:data_.V20.~decltype(data_.V20)();break;
#define _impl_adt_Cc20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20) _impl_adt_Cc1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)case kind::V20:new(&data_.V20)decltype(data_.V20)(a.data_.V20);break;
#define _impl_adt_Mc20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20) _impl_adt_Mc1f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f)case kind::V20:new(&data_.V20)decltype(data_.V20)(std::move(a.data_.V20));break;
#define adt20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20) class NAME {public:enum class kind{_impl_adt_K20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)};private:kind kind_;union data{_impl_adt_D20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)}data_;public:class matcher{_impl_adt_MF20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)public:_impl_adt_MM20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)}}_impl_adt_M20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)void match(matcher const& m){switch(kind_){_impl_adt_MS20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)}}private:
#define _impl_adt_K21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21) _impl_adt_K20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)V21,
#define _impl_adt_D21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)_impl_adt_D20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)_impl_adt_real(T21)V21;
#define _impl_adt_MF21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21) _impl_adt_MF20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)std::function<void(T21)>V21##_;
#define _impl_adt_MM21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21) _impl_adt_MM20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)template<class T=T21>void call_##V21(_impl_adt_real(T21)a)const{_call_func(V21##_, a);}matcher& V21(std::function<void(T21)>f){V21##_=f;return *this;}
#define _impl_adt_M21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21) _impl_adt_M20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)template<class T=T21,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V21(_impl_adt_real(T21)const& t){NAME ret(kind::V21);try{new(&ret.data_.V21)T(t);}catch(...){std::terminate();}return ret;}template<class T=T21,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V21(_impl_adt_real(T21)&& t){NAME ret(kind::V21);try{new(&ret.data_.V21)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T21,class=std::enable_if_t<std::is_void<T>::value>>static NAME V21(){NAME ret(kind::V21);return ret;}
#define _impl_adt_MS21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21) _impl_adt_MS20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)case kind::V21:m.call_##V21(data_.V21);break;
#define _impl_adt_Ds21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21) _impl_adt_Ds20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)case kind::V21:data_.V21.~decltype(data_.V21)();break;
#define _impl_adt_Cc21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21) _impl_adt_Cc20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)case kind::V21:new(&data_.V21)decltype(data_.V21)(a.data_.V21);break;
#define _impl_adt_Mc21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21) _impl_adt_Mc20(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20)case kind::V21:new(&data_.V21)decltype(data_.V21)(std::move(a.data_.V21));break;
#define adt21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21) class NAME {public:enum class kind{_impl_adt_K21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)};private:kind kind_;union data{_impl_adt_D21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)}data_;public:class matcher{_impl_adt_MF21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)public:_impl_adt_MM21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)}}_impl_adt_M21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)void match(matcher const& m){switch(kind_){_impl_adt_MS21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)}}private:
#define _impl_adt_K22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22) _impl_adt_K21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)V22,
#define _impl_adt_D22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)_impl_adt_D21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)_impl_adt_real(T22)V22;
#define _impl_adt_MF22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22) _impl_adt_MF21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)std::function<void(T22)>V22##_;
#define _impl_adt_MM22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22) _impl_adt_MM21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)template<class T=T22>void call_##V22(_impl_adt_real(T22)a)const{_call_func(V22##_, a);}matcher& V22(std::function<void(T22)>f){V22##_=f;return *this;}
#define _impl_adt_M22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22) _impl_adt_M21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)template<class T=T22,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V22(_impl_adt_real(T22)const& t){NAME ret(kind::V22);try{new(&ret.data_.V22)T(t);}catch(...){std::terminate();}return ret;}template<class T=T22,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V22(_impl_adt_real(T22)&& t){NAME ret(kind::V22);try{new(&ret.data_.V22)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T22,class=std::enable_if_t<std::is_void<T>::value>>static NAME V22(){NAME ret(kind::V22);return ret;}
#define _impl_adt_MS22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22) _impl_adt_MS21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)case kind::V22:m.call_##V22(data_.V22);break;
#define _impl_adt_Ds22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22) _impl_adt_Ds21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)case kind::V22:data_.V22.~decltype(data_.V22)();break;
#define _impl_adt_Cc22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22) _impl_adt_Cc21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)case kind::V22:new(&data_.V22)decltype(data_.V22)(a.data_.V22);break;
#define _impl_adt_Mc22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22) _impl_adt_Mc21(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21)case kind::V22:new(&data_.V22)decltype(data_.V22)(std::move(a.data_.V22));break;
#define adt22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22) class NAME {public:enum class kind{_impl_adt_K22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)};private:kind kind_;union data{_impl_adt_D22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)}data_;public:class matcher{_impl_adt_MF22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)public:_impl_adt_MM22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)}}_impl_adt_M22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)void match(matcher const& m){switch(kind_){_impl_adt_MS22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)}}private:
#define _impl_adt_K23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23) _impl_adt_K22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)V23,
#define _impl_adt_D23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)_impl_adt_D22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)_impl_adt_real(T23)V23;
#define _impl_adt_MF23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23) _impl_adt_MF22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)std::function<void(T23)>V23##_;
#define _impl_adt_MM23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23) _impl_adt_MM22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)template<class T=T23>void call_##V23(_impl_adt_real(T23)a)const{_call_func(V23##_, a);}matcher& V23(std::function<void(T23)>f){V23##_=f;return *this;}
#define _impl_adt_M23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23) _impl_adt_M22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)template<class T=T23,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V23(_impl_adt_real(T23)const& t){NAME ret(kind::V23);try{new(&ret.data_.V23)T(t);}catch(...){std::terminate();}return ret;}template<class T=T23,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V23(_impl_adt_real(T23)&& t){NAME ret(kind::V23);try{new(&ret.data_.V23)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T23,class=std::enable_if_t<std::is_void<T>::value>>static NAME V23(){NAME ret(kind::V23);return ret;}
#define _impl_adt_MS23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23) _impl_adt_MS22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)case kind::V23:m.call_##V23(data_.V23);break;
#define _impl_adt_Ds23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23) _impl_adt_Ds22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)case kind::V23:data_.V23.~decltype(data_.V23)();break;
#define _impl_adt_Cc23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23) _impl_adt_Cc22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)case kind::V23:new(&data_.V23)decltype(data_.V23)(a.data_.V23);break;
#define _impl_adt_Mc23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23) _impl_adt_Mc22(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22)case kind::V23:new(&data_.V23)decltype(data_.V23)(std::move(a.data_.V23));break;
#define adt23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23) class NAME {public:enum class kind{_impl_adt_K23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)};private:kind kind_;union data{_impl_adt_D23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)}data_;public:class matcher{_impl_adt_MF23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)public:_impl_adt_MM23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)}}_impl_adt_M23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)void match(matcher const& m){switch(kind_){_impl_adt_MS23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)}}private:
#define _impl_adt_K24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24) _impl_adt_K23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)V24,
#define _impl_adt_D24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)_impl_adt_D23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)_impl_adt_real(T24)V24;
#define _impl_adt_MF24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24) _impl_adt_MF23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)std::function<void(T24)>V24##_;
#define _impl_adt_MM24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24) _impl_adt_MM23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)template<class T=T24>void call_##V24(_impl_adt_real(T24)a)const{_call_func(V24##_, a);}matcher& V24(std::function<void(T24)>f){V24##_=f;return *this;}
#define _impl_adt_M24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24) _impl_adt_M23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)template<class T=T24,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V24(_impl_adt_real(T24)const& t){NAME ret(kind::V24);try{new(&ret.data_.V24)T(t);}catch(...){std::terminate();}return ret;}template<class T=T24,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V24(_impl_adt_real(T24)&& t){NAME ret(kind::V24);try{new(&ret.data_.V24)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T24,class=std::enable_if_t<std::is_void<T>::value>>static NAME V24(){NAME ret(kind::V24);return ret;}
#define _impl_adt_MS24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24) _impl_adt_MS23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)case kind::V24:m.call_##V24(data_.V24);break;
#define _impl_adt_Ds24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24) _impl_adt_Ds23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)case kind::V24:data_.V24.~decltype(data_.V24)();break;
#define _impl_adt_Cc24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24) _impl_adt_Cc23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)case kind::V24:new(&data_.V24)decltype(data_.V24)(a.data_.V24);break;
#define _impl_adt_Mc24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24) _impl_adt_Mc23(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23)case kind::V24:new(&data_.V24)decltype(data_.V24)(std::move(a.data_.V24));break;
#define adt24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24) class NAME {public:enum class kind{_impl_adt_K24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)};private:kind kind_;union data{_impl_adt_D24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)}data_;public:class matcher{_impl_adt_MF24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)public:_impl_adt_MM24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)}}_impl_adt_M24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)void match(matcher const& m){switch(kind_){_impl_adt_MS24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)}}private:
#define _impl_adt_K25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25) _impl_adt_K24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)V25,
#define _impl_adt_D25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)_impl_adt_D24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)_impl_adt_real(T25)V25;
#define _impl_adt_MF25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25) _impl_adt_MF24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)std::function<void(T25)>V25##_;
#define _impl_adt_MM25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25) _impl_adt_MM24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)template<class T=T25>void call_##V25(_impl_adt_real(T25)a)const{_call_func(V25##_, a);}matcher& V25(std::function<void(T25)>f){V25##_=f;return *this;}
#define _impl_adt_M25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25) _impl_adt_M24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)template<class T=T25,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V25(_impl_adt_real(T25)const& t){NAME ret(kind::V25);try{new(&ret.data_.V25)T(t);}catch(...){std::terminate();}return ret;}template<class T=T25,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V25(_impl_adt_real(T25)&& t){NAME ret(kind::V25);try{new(&ret.data_.V25)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T25,class=std::enable_if_t<std::is_void<T>::value>>static NAME V25(){NAME ret(kind::V25);return ret;}
#define _impl_adt_MS25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25) _impl_adt_MS24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)case kind::V25:m.call_##V25(data_.V25);break;
#define _impl_adt_Ds25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25) _impl_adt_Ds24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)case kind::V25:data_.V25.~decltype(data_.V25)();break;
#define _impl_adt_Cc25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25) _impl_adt_Cc24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)case kind::V25:new(&data_.V25)decltype(data_.V25)(a.data_.V25);break;
#define _impl_adt_Mc25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25) _impl_adt_Mc24(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24)case kind::V25:new(&data_.V25)decltype(data_.V25)(std::move(a.data_.V25));break;
#define adt25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25) class NAME {public:enum class kind{_impl_adt_K25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)};private:kind kind_;union data{_impl_adt_D25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)}data_;public:class matcher{_impl_adt_MF25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)public:_impl_adt_MM25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)}}_impl_adt_M25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)void match(matcher const& m){switch(kind_){_impl_adt_MS25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)}}private:
#define _impl_adt_K26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26) _impl_adt_K25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)V26,
#define _impl_adt_D26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)_impl_adt_D25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)_impl_adt_real(T26)V26;
#define _impl_adt_MF26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26) _impl_adt_MF25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)std::function<void(T26)>V26##_;
#define _impl_adt_MM26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26) _impl_adt_MM25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)template<class T=T26>void call_##V26(_impl_adt_real(T26)a)const{_call_func(V26##_, a);}matcher& V26(std::function<void(T26)>f){V26##_=f;return *this;}
#define _impl_adt_M26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26) _impl_adt_M25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)template<class T=T26,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V26(_impl_adt_real(T26)const& t){NAME ret(kind::V26);try{new(&ret.data_.V26)T(t);}catch(...){std::terminate();}return ret;}template<class T=T26,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V26(_impl_adt_real(T26)&& t){NAME ret(kind::V26);try{new(&ret.data_.V26)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T26,class=std::enable_if_t<std::is_void<T>::value>>static NAME V26(){NAME ret(kind::V26);return ret;}
#define _impl_adt_MS26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26) _impl_adt_MS25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)case kind::V26:m.call_##V26(data_.V26);break;
#define _impl_adt_Ds26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26) _impl_adt_Ds25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)case kind::V26:data_.V26.~decltype(data_.V26)();break;
#define _impl_adt_Cc26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26) _impl_adt_Cc25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)case kind::V26:new(&data_.V26)decltype(data_.V26)(a.data_.V26);break;
#define _impl_adt_Mc26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26) _impl_adt_Mc25(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25)case kind::V26:new(&data_.V26)decltype(data_.V26)(std::move(a.data_.V26));break;
#define adt26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26) class NAME {public:enum class kind{_impl_adt_K26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)};private:kind kind_;union data{_impl_adt_D26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)}data_;public:class matcher{_impl_adt_MF26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)public:_impl_adt_MM26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)}}_impl_adt_M26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)void match(matcher const& m){switch(kind_){_impl_adt_MS26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)}}private:
#define _impl_adt_K27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27) _impl_adt_K26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)V27,
#define _impl_adt_D27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)_impl_adt_D26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)_impl_adt_real(T27)V27;
#define _impl_adt_MF27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27) _impl_adt_MF26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)std::function<void(T27)>V27##_;
#define _impl_adt_MM27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27) _impl_adt_MM26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)template<class T=T27>void call_##V27(_impl_adt_real(T27)a)const{_call_func(V27##_, a);}matcher& V27(std::function<void(T27)>f){V27##_=f;return *this;}
#define _impl_adt_M27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27) _impl_adt_M26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)template<class T=T27,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V27(_impl_adt_real(T27)const& t){NAME ret(kind::V27);try{new(&ret.data_.V27)T(t);}catch(...){std::terminate();}return ret;}template<class T=T27,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V27(_impl_adt_real(T27)&& t){NAME ret(kind::V27);try{new(&ret.data_.V27)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T27,class=std::enable_if_t<std::is_void<T>::value>>static NAME V27(){NAME ret(kind::V27);return ret;}
#define _impl_adt_MS27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27) _impl_adt_MS26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)case kind::V27:m.call_##V27(data_.V27);break;
#define _impl_adt_Ds27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27) _impl_adt_Ds26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)case kind::V27:data_.V27.~decltype(data_.V27)();break;
#define _impl_adt_Cc27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27) _impl_adt_Cc26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)case kind::V27:new(&data_.V27)decltype(data_.V27)(a.data_.V27);break;
#define _impl_adt_Mc27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27) _impl_adt_Mc26(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26)case kind::V27:new(&data_.V27)decltype(data_.V27)(std::move(a.data_.V27));break;
#define adt27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27) class NAME {public:enum class kind{_impl_adt_K27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)};private:kind kind_;union data{_impl_adt_D27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)}data_;public:class matcher{_impl_adt_MF27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)public:_impl_adt_MM27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)}}_impl_adt_M27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)void match(matcher const& m){switch(kind_){_impl_adt_MS27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)}}private:
#define _impl_adt_K28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28) _impl_adt_K27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)V28,
#define _impl_adt_D28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)_impl_adt_D27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)_impl_adt_real(T28)V28;
#define _impl_adt_MF28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28) _impl_adt_MF27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)std::function<void(T28)>V28##_;
#define _impl_adt_MM28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28) _impl_adt_MM27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)template<class T=T28>void call_##V28(_impl_adt_real(T28)a)const{_call_func(V28##_, a);}matcher& V28(std::function<void(T28)>f){V28##_=f;return *this;}
#define _impl_adt_M28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28) _impl_adt_M27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)template<class T=T28,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V28(_impl_adt_real(T28)const& t){NAME ret(kind::V28);try{new(&ret.data_.V28)T(t);}catch(...){std::terminate();}return ret;}template<class T=T28,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V28(_impl_adt_real(T28)&& t){NAME ret(kind::V28);try{new(&ret.data_.V28)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T28,class=std::enable_if_t<std::is_void<T>::value>>static NAME V28(){NAME ret(kind::V28);return ret;}
#define _impl_adt_MS28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28) _impl_adt_MS27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)case kind::V28:m.call_##V28(data_.V28);break;
#define _impl_adt_Ds28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28) _impl_adt_Ds27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)case kind::V28:data_.V28.~decltype(data_.V28)();break;
#define _impl_adt_Cc28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28) _impl_adt_Cc27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)case kind::V28:new(&data_.V28)decltype(data_.V28)(a.data_.V28);break;
#define _impl_adt_Mc28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28) _impl_adt_Mc27(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27)case kind::V28:new(&data_.V28)decltype(data_.V28)(std::move(a.data_.V28));break;
#define adt28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28) class NAME {public:enum class kind{_impl_adt_K28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)};private:kind kind_;union data{_impl_adt_D28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)}data_;public:class matcher{_impl_adt_MF28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)public:_impl_adt_MM28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)}}_impl_adt_M28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)void match(matcher const& m){switch(kind_){_impl_adt_MS28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)}}private:
#define _impl_adt_K29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29) _impl_adt_K28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)V29,
#define _impl_adt_D29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)_impl_adt_D28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)_impl_adt_real(T29)V29;
#define _impl_adt_MF29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29) _impl_adt_MF28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)std::function<void(T29)>V29##_;
#define _impl_adt_MM29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29) _impl_adt_MM28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)template<class T=T29>void call_##V29(_impl_adt_real(T29)a)const{_call_func(V29##_, a);}matcher& V29(std::function<void(T29)>f){V29##_=f;return *this;}
#define _impl_adt_M29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29) _impl_adt_M28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)template<class T=T29,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V29(_impl_adt_real(T29)const& t){NAME ret(kind::V29);try{new(&ret.data_.V29)T(t);}catch(...){std::terminate();}return ret;}template<class T=T29,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V29(_impl_adt_real(T29)&& t){NAME ret(kind::V29);try{new(&ret.data_.V29)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T29,class=std::enable_if_t<std::is_void<T>::value>>static NAME V29(){NAME ret(kind::V29);return ret;}
#define _impl_adt_MS29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29) _impl_adt_MS28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)case kind::V29:m.call_##V29(data_.V29);break;
#define _impl_adt_Ds29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29) _impl_adt_Ds28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)case kind::V29:data_.V29.~decltype(data_.V29)();break;
#define _impl_adt_Cc29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29) _impl_adt_Cc28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)case kind::V29:new(&data_.V29)decltype(data_.V29)(a.data_.V29);break;
#define _impl_adt_Mc29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29) _impl_adt_Mc28(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28)case kind::V29:new(&data_.V29)decltype(data_.V29)(std::move(a.data_.V29));break;
#define adt29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29) class NAME {public:enum class kind{_impl_adt_K29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)};private:kind kind_;union data{_impl_adt_D29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)}data_;public:class matcher{_impl_adt_MF29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)public:_impl_adt_MM29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)}}_impl_adt_M29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)void match(matcher const& m){switch(kind_){_impl_adt_MS29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)}}private:
#define _impl_adt_K2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a) _impl_adt_K29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)V2a,
#define _impl_adt_D2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)_impl_adt_D29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)_impl_adt_real(T2a)V2a;
#define _impl_adt_MF2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a) _impl_adt_MF29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)std::function<void(T2a)>V2a##_;
#define _impl_adt_MM2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a) _impl_adt_MM29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)template<class T=T2a>void call_##V2a(_impl_adt_real(T2a)a)const{_call_func(V2a##_, a);}matcher& V2a(std::function<void(T2a)>f){V2a##_=f;return *this;}
#define _impl_adt_M2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a) _impl_adt_M29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)template<class T=T2a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2a(_impl_adt_real(T2a)const& t){NAME ret(kind::V2a);try{new(&ret.data_.V2a)T(t);}catch(...){std::terminate();}return ret;}template<class T=T2a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2a(_impl_adt_real(T2a)&& t){NAME ret(kind::V2a);try{new(&ret.data_.V2a)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T2a,class=std::enable_if_t<std::is_void<T>::value>>static NAME V2a(){NAME ret(kind::V2a);return ret;}
#define _impl_adt_MS2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a) _impl_adt_MS29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)case kind::V2a:m.call_##V2a(data_.V2a);break;
#define _impl_adt_Ds2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a) _impl_adt_Ds29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)case kind::V2a:data_.V2a.~decltype(data_.V2a)();break;
#define _impl_adt_Cc2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a) _impl_adt_Cc29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)case kind::V2a:new(&data_.V2a)decltype(data_.V2a)(a.data_.V2a);break;
#define _impl_adt_Mc2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a) _impl_adt_Mc29(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29)case kind::V2a:new(&data_.V2a)decltype(data_.V2a)(std::move(a.data_.V2a));break;
#define adt2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a) class NAME {public:enum class kind{_impl_adt_K2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)};private:kind kind_;union data{_impl_adt_D2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)}data_;public:class matcher{_impl_adt_MF2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)public:_impl_adt_MM2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)}}_impl_adt_M2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)void match(matcher const& m){switch(kind_){_impl_adt_MS2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)}}private:
#define _impl_adt_K2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b) _impl_adt_K2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)V2b,
#define _impl_adt_D2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)_impl_adt_D2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)_impl_adt_real(T2b)V2b;
#define _impl_adt_MF2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b) _impl_adt_MF2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)std::function<void(T2b)>V2b##_;
#define _impl_adt_MM2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b) _impl_adt_MM2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)template<class T=T2b>void call_##V2b(_impl_adt_real(T2b)a)const{_call_func(V2b##_, a);}matcher& V2b(std::function<void(T2b)>f){V2b##_=f;return *this;}
#define _impl_adt_M2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b) _impl_adt_M2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)template<class T=T2b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2b(_impl_adt_real(T2b)const& t){NAME ret(kind::V2b);try{new(&ret.data_.V2b)T(t);}catch(...){std::terminate();}return ret;}template<class T=T2b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2b(_impl_adt_real(T2b)&& t){NAME ret(kind::V2b);try{new(&ret.data_.V2b)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T2b,class=std::enable_if_t<std::is_void<T>::value>>static NAME V2b(){NAME ret(kind::V2b);return ret;}
#define _impl_adt_MS2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b) _impl_adt_MS2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)case kind::V2b:m.call_##V2b(data_.V2b);break;
#define _impl_adt_Ds2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b) _impl_adt_Ds2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)case kind::V2b:data_.V2b.~decltype(data_.V2b)();break;
#define _impl_adt_Cc2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b) _impl_adt_Cc2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)case kind::V2b:new(&data_.V2b)decltype(data_.V2b)(a.data_.V2b);break;
#define _impl_adt_Mc2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b) _impl_adt_Mc2a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a)case kind::V2b:new(&data_.V2b)decltype(data_.V2b)(std::move(a.data_.V2b));break;
#define adt2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b) class NAME {public:enum class kind{_impl_adt_K2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)};private:kind kind_;union data{_impl_adt_D2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)}data_;public:class matcher{_impl_adt_MF2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)public:_impl_adt_MM2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)}}_impl_adt_M2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)void match(matcher const& m){switch(kind_){_impl_adt_MS2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)}}private:
#define _impl_adt_K2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c) _impl_adt_K2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)V2c,
#define _impl_adt_D2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)_impl_adt_D2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)_impl_adt_real(T2c)V2c;
#define _impl_adt_MF2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c) _impl_adt_MF2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)std::function<void(T2c)>V2c##_;
#define _impl_adt_MM2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c) _impl_adt_MM2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)template<class T=T2c>void call_##V2c(_impl_adt_real(T2c)a)const{_call_func(V2c##_, a);}matcher& V2c(std::function<void(T2c)>f){V2c##_=f;return *this;}
#define _impl_adt_M2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c) _impl_adt_M2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)template<class T=T2c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2c(_impl_adt_real(T2c)const& t){NAME ret(kind::V2c);try{new(&ret.data_.V2c)T(t);}catch(...){std::terminate();}return ret;}template<class T=T2c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2c(_impl_adt_real(T2c)&& t){NAME ret(kind::V2c);try{new(&ret.data_.V2c)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T2c,class=std::enable_if_t<std::is_void<T>::value>>static NAME V2c(){NAME ret(kind::V2c);return ret;}
#define _impl_adt_MS2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c) _impl_adt_MS2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)case kind::V2c:m.call_##V2c(data_.V2c);break;
#define _impl_adt_Ds2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c) _impl_adt_Ds2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)case kind::V2c:data_.V2c.~decltype(data_.V2c)();break;
#define _impl_adt_Cc2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c) _impl_adt_Cc2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)case kind::V2c:new(&data_.V2c)decltype(data_.V2c)(a.data_.V2c);break;
#define _impl_adt_Mc2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c) _impl_adt_Mc2b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b)case kind::V2c:new(&data_.V2c)decltype(data_.V2c)(std::move(a.data_.V2c));break;
#define adt2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c) class NAME {public:enum class kind{_impl_adt_K2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)};private:kind kind_;union data{_impl_adt_D2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)}data_;public:class matcher{_impl_adt_MF2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)public:_impl_adt_MM2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)}}_impl_adt_M2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)void match(matcher const& m){switch(kind_){_impl_adt_MS2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)}}private:
#define _impl_adt_K2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d) _impl_adt_K2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)V2d,
#define _impl_adt_D2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)_impl_adt_D2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)_impl_adt_real(T2d)V2d;
#define _impl_adt_MF2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d) _impl_adt_MF2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)std::function<void(T2d)>V2d##_;
#define _impl_adt_MM2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d) _impl_adt_MM2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)template<class T=T2d>void call_##V2d(_impl_adt_real(T2d)a)const{_call_func(V2d##_, a);}matcher& V2d(std::function<void(T2d)>f){V2d##_=f;return *this;}
#define _impl_adt_M2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d) _impl_adt_M2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)template<class T=T2d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2d(_impl_adt_real(T2d)const& t){NAME ret(kind::V2d);try{new(&ret.data_.V2d)T(t);}catch(...){std::terminate();}return ret;}template<class T=T2d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2d(_impl_adt_real(T2d)&& t){NAME ret(kind::V2d);try{new(&ret.data_.V2d)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T2d,class=std::enable_if_t<std::is_void<T>::value>>static NAME V2d(){NAME ret(kind::V2d);return ret;}
#define _impl_adt_MS2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d) _impl_adt_MS2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)case kind::V2d:m.call_##V2d(data_.V2d);break;
#define _impl_adt_Ds2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d) _impl_adt_Ds2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)case kind::V2d:data_.V2d.~decltype(data_.V2d)();break;
#define _impl_adt_Cc2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d) _impl_adt_Cc2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)case kind::V2d:new(&data_.V2d)decltype(data_.V2d)(a.data_.V2d);break;
#define _impl_adt_Mc2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d) _impl_adt_Mc2c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c)case kind::V2d:new(&data_.V2d)decltype(data_.V2d)(std::move(a.data_.V2d));break;
#define adt2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d) class NAME {public:enum class kind{_impl_adt_K2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)};private:kind kind_;union data{_impl_adt_D2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)}data_;public:class matcher{_impl_adt_MF2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)public:_impl_adt_MM2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)}}_impl_adt_M2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)void match(matcher const& m){switch(kind_){_impl_adt_MS2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)}}private:
#define _impl_adt_K2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e) _impl_adt_K2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)V2e,
#define _impl_adt_D2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)_impl_adt_D2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)_impl_adt_real(T2e)V2e;
#define _impl_adt_MF2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e) _impl_adt_MF2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)std::function<void(T2e)>V2e##_;
#define _impl_adt_MM2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e) _impl_adt_MM2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)template<class T=T2e>void call_##V2e(_impl_adt_real(T2e)a)const{_call_func(V2e##_, a);}matcher& V2e(std::function<void(T2e)>f){V2e##_=f;return *this;}
#define _impl_adt_M2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e) _impl_adt_M2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)template<class T=T2e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2e(_impl_adt_real(T2e)const& t){NAME ret(kind::V2e);try{new(&ret.data_.V2e)T(t);}catch(...){std::terminate();}return ret;}template<class T=T2e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2e(_impl_adt_real(T2e)&& t){NAME ret(kind::V2e);try{new(&ret.data_.V2e)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T2e,class=std::enable_if_t<std::is_void<T>::value>>static NAME V2e(){NAME ret(kind::V2e);return ret;}
#define _impl_adt_MS2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e) _impl_adt_MS2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)case kind::V2e:m.call_##V2e(data_.V2e);break;
#define _impl_adt_Ds2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e) _impl_adt_Ds2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)case kind::V2e:data_.V2e.~decltype(data_.V2e)();break;
#define _impl_adt_Cc2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e) _impl_adt_Cc2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)case kind::V2e:new(&data_.V2e)decltype(data_.V2e)(a.data_.V2e);break;
#define _impl_adt_Mc2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e) _impl_adt_Mc2d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d)case kind::V2e:new(&data_.V2e)decltype(data_.V2e)(std::move(a.data_.V2e));break;
#define adt2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e) class NAME {public:enum class kind{_impl_adt_K2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)};private:kind kind_;union data{_impl_adt_D2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)}data_;public:class matcher{_impl_adt_MF2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)public:_impl_adt_MM2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)}}_impl_adt_M2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)void match(matcher const& m){switch(kind_){_impl_adt_MS2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)}}private:
#define _impl_adt_K2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f) _impl_adt_K2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)V2f,
#define _impl_adt_D2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)_impl_adt_D2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)_impl_adt_real(T2f)V2f;
#define _impl_adt_MF2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f) _impl_adt_MF2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)std::function<void(T2f)>V2f##_;
#define _impl_adt_MM2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f) _impl_adt_MM2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)template<class T=T2f>void call_##V2f(_impl_adt_real(T2f)a)const{_call_func(V2f##_, a);}matcher& V2f(std::function<void(T2f)>f){V2f##_=f;return *this;}
#define _impl_adt_M2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f) _impl_adt_M2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)template<class T=T2f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2f(_impl_adt_real(T2f)const& t){NAME ret(kind::V2f);try{new(&ret.data_.V2f)T(t);}catch(...){std::terminate();}return ret;}template<class T=T2f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V2f(_impl_adt_real(T2f)&& t){NAME ret(kind::V2f);try{new(&ret.data_.V2f)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T2f,class=std::enable_if_t<std::is_void<T>::value>>static NAME V2f(){NAME ret(kind::V2f);return ret;}
#define _impl_adt_MS2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f) _impl_adt_MS2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)case kind::V2f:m.call_##V2f(data_.V2f);break;
#define _impl_adt_Ds2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f) _impl_adt_Ds2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)case kind::V2f:data_.V2f.~decltype(data_.V2f)();break;
#define _impl_adt_Cc2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f) _impl_adt_Cc2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)case kind::V2f:new(&data_.V2f)decltype(data_.V2f)(a.data_.V2f);break;
#define _impl_adt_Mc2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f) _impl_adt_Mc2e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e)case kind::V2f:new(&data_.V2f)decltype(data_.V2f)(std::move(a.data_.V2f));break;
#define adt2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f) class NAME {public:enum class kind{_impl_adt_K2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)};private:kind kind_;union data{_impl_adt_D2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)}data_;public:class matcher{_impl_adt_MF2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)public:_impl_adt_MM2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)}}_impl_adt_M2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)void match(matcher const& m){switch(kind_){_impl_adt_MS2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)}}private:
#define _impl_adt_K30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30) _impl_adt_K2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)V30,
#define _impl_adt_D30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)_impl_adt_D2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)_impl_adt_real(T30)V30;
#define _impl_adt_MF30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30) _impl_adt_MF2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)std::function<void(T30)>V30##_;
#define _impl_adt_MM30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30) _impl_adt_MM2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)template<class T=T30>void call_##V30(_impl_adt_real(T30)a)const{_call_func(V30##_, a);}matcher& V30(std::function<void(T30)>f){V30##_=f;return *this;}
#define _impl_adt_M30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30) _impl_adt_M2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)template<class T=T30,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V30(_impl_adt_real(T30)const& t){NAME ret(kind::V30);try{new(&ret.data_.V30)T(t);}catch(...){std::terminate();}return ret;}template<class T=T30,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V30(_impl_adt_real(T30)&& t){NAME ret(kind::V30);try{new(&ret.data_.V30)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T30,class=std::enable_if_t<std::is_void<T>::value>>static NAME V30(){NAME ret(kind::V30);return ret;}
#define _impl_adt_MS30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30) _impl_adt_MS2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)case kind::V30:m.call_##V30(data_.V30);break;
#define _impl_adt_Ds30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30) _impl_adt_Ds2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)case kind::V30:data_.V30.~decltype(data_.V30)();break;
#define _impl_adt_Cc30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30) _impl_adt_Cc2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)case kind::V30:new(&data_.V30)decltype(data_.V30)(a.data_.V30);break;
#define _impl_adt_Mc30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30) _impl_adt_Mc2f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f)case kind::V30:new(&data_.V30)decltype(data_.V30)(std::move(a.data_.V30));break;
#define adt30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30) class NAME {public:enum class kind{_impl_adt_K30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)};private:kind kind_;union data{_impl_adt_D30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)}data_;public:class matcher{_impl_adt_MF30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)public:_impl_adt_MM30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)}}_impl_adt_M30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)void match(matcher const& m){switch(kind_){_impl_adt_MS30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)}}private:
#define _impl_adt_K31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31) _impl_adt_K30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)V31,
#define _impl_adt_D31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)_impl_adt_D30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)_impl_adt_real(T31)V31;
#define _impl_adt_MF31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31) _impl_adt_MF30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)std::function<void(T31)>V31##_;
#define _impl_adt_MM31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31) _impl_adt_MM30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)template<class T=T31>void call_##V31(_impl_adt_real(T31)a)const{_call_func(V31##_, a);}matcher& V31(std::function<void(T31)>f){V31##_=f;return *this;}
#define _impl_adt_M31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31) _impl_adt_M30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)template<class T=T31,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V31(_impl_adt_real(T31)const& t){NAME ret(kind::V31);try{new(&ret.data_.V31)T(t);}catch(...){std::terminate();}return ret;}template<class T=T31,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V31(_impl_adt_real(T31)&& t){NAME ret(kind::V31);try{new(&ret.data_.V31)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T31,class=std::enable_if_t<std::is_void<T>::value>>static NAME V31(){NAME ret(kind::V31);return ret;}
#define _impl_adt_MS31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31) _impl_adt_MS30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)case kind::V31:m.call_##V31(data_.V31);break;
#define _impl_adt_Ds31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31) _impl_adt_Ds30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)case kind::V31:data_.V31.~decltype(data_.V31)();break;
#define _impl_adt_Cc31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31) _impl_adt_Cc30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)case kind::V31:new(&data_.V31)decltype(data_.V31)(a.data_.V31);break;
#define _impl_adt_Mc31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31) _impl_adt_Mc30(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30)case kind::V31:new(&data_.V31)decltype(data_.V31)(std::move(a.data_.V31));break;
#define adt31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31) class NAME {public:enum class kind{_impl_adt_K31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)};private:kind kind_;union data{_impl_adt_D31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)}data_;public:class matcher{_impl_adt_MF31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)public:_impl_adt_MM31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)}}_impl_adt_M31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)void match(matcher const& m){switch(kind_){_impl_adt_MS31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)}}private:
#define _impl_adt_K32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32) _impl_adt_K31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)V32,
#define _impl_adt_D32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)_impl_adt_D31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)_impl_adt_real(T32)V32;
#define _impl_adt_MF32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32) _impl_adt_MF31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)std::function<void(T32)>V32##_;
#define _impl_adt_MM32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32) _impl_adt_MM31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)template<class T=T32>void call_##V32(_impl_adt_real(T32)a)const{_call_func(V32##_, a);}matcher& V32(std::function<void(T32)>f){V32##_=f;return *this;}
#define _impl_adt_M32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32) _impl_adt_M31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)template<class T=T32,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V32(_impl_adt_real(T32)const& t){NAME ret(kind::V32);try{new(&ret.data_.V32)T(t);}catch(...){std::terminate();}return ret;}template<class T=T32,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V32(_impl_adt_real(T32)&& t){NAME ret(kind::V32);try{new(&ret.data_.V32)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T32,class=std::enable_if_t<std::is_void<T>::value>>static NAME V32(){NAME ret(kind::V32);return ret;}
#define _impl_adt_MS32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32) _impl_adt_MS31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)case kind::V32:m.call_##V32(data_.V32);break;
#define _impl_adt_Ds32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32) _impl_adt_Ds31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)case kind::V32:data_.V32.~decltype(data_.V32)();break;
#define _impl_adt_Cc32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32) _impl_adt_Cc31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)case kind::V32:new(&data_.V32)decltype(data_.V32)(a.data_.V32);break;
#define _impl_adt_Mc32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32) _impl_adt_Mc31(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31)case kind::V32:new(&data_.V32)decltype(data_.V32)(std::move(a.data_.V32));break;
#define adt32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32) class NAME {public:enum class kind{_impl_adt_K32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)};private:kind kind_;union data{_impl_adt_D32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)}data_;public:class matcher{_impl_adt_MF32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)public:_impl_adt_MM32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)}}_impl_adt_M32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)void match(matcher const& m){switch(kind_){_impl_adt_MS32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)}}private:
#define _impl_adt_K33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33) _impl_adt_K32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)V33,
#define _impl_adt_D33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)_impl_adt_D32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)_impl_adt_real(T33)V33;
#define _impl_adt_MF33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33) _impl_adt_MF32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)std::function<void(T33)>V33##_;
#define _impl_adt_MM33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33) _impl_adt_MM32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)template<class T=T33>void call_##V33(_impl_adt_real(T33)a)const{_call_func(V33##_, a);}matcher& V33(std::function<void(T33)>f){V33##_=f;return *this;}
#define _impl_adt_M33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33) _impl_adt_M32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)template<class T=T33,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V33(_impl_adt_real(T33)const& t){NAME ret(kind::V33);try{new(&ret.data_.V33)T(t);}catch(...){std::terminate();}return ret;}template<class T=T33,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V33(_impl_adt_real(T33)&& t){NAME ret(kind::V33);try{new(&ret.data_.V33)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T33,class=std::enable_if_t<std::is_void<T>::value>>static NAME V33(){NAME ret(kind::V33);return ret;}
#define _impl_adt_MS33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33) _impl_adt_MS32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)case kind::V33:m.call_##V33(data_.V33);break;
#define _impl_adt_Ds33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33) _impl_adt_Ds32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)case kind::V33:data_.V33.~decltype(data_.V33)();break;
#define _impl_adt_Cc33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33) _impl_adt_Cc32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)case kind::V33:new(&data_.V33)decltype(data_.V33)(a.data_.V33);break;
#define _impl_adt_Mc33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33) _impl_adt_Mc32(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32)case kind::V33:new(&data_.V33)decltype(data_.V33)(std::move(a.data_.V33));break;
#define adt33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33) class NAME {public:enum class kind{_impl_adt_K33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)};private:kind kind_;union data{_impl_adt_D33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)}data_;public:class matcher{_impl_adt_MF33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)public:_impl_adt_MM33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)}}_impl_adt_M33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)void match(matcher const& m){switch(kind_){_impl_adt_MS33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)}}private:
#define _impl_adt_K34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34) _impl_adt_K33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)V34,
#define _impl_adt_D34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)_impl_adt_D33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)_impl_adt_real(T34)V34;
#define _impl_adt_MF34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34) _impl_adt_MF33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)std::function<void(T34)>V34##_;
#define _impl_adt_MM34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34) _impl_adt_MM33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)template<class T=T34>void call_##V34(_impl_adt_real(T34)a)const{_call_func(V34##_, a);}matcher& V34(std::function<void(T34)>f){V34##_=f;return *this;}
#define _impl_adt_M34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34) _impl_adt_M33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)template<class T=T34,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V34(_impl_adt_real(T34)const& t){NAME ret(kind::V34);try{new(&ret.data_.V34)T(t);}catch(...){std::terminate();}return ret;}template<class T=T34,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V34(_impl_adt_real(T34)&& t){NAME ret(kind::V34);try{new(&ret.data_.V34)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T34,class=std::enable_if_t<std::is_void<T>::value>>static NAME V34(){NAME ret(kind::V34);return ret;}
#define _impl_adt_MS34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34) _impl_adt_MS33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)case kind::V34:m.call_##V34(data_.V34);break;
#define _impl_adt_Ds34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34) _impl_adt_Ds33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)case kind::V34:data_.V34.~decltype(data_.V34)();break;
#define _impl_adt_Cc34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34) _impl_adt_Cc33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)case kind::V34:new(&data_.V34)decltype(data_.V34)(a.data_.V34);break;
#define _impl_adt_Mc34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34) _impl_adt_Mc33(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33)case kind::V34:new(&data_.V34)decltype(data_.V34)(std::move(a.data_.V34));break;
#define adt34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34) class NAME {public:enum class kind{_impl_adt_K34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)};private:kind kind_;union data{_impl_adt_D34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)}data_;public:class matcher{_impl_adt_MF34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)public:_impl_adt_MM34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)}}_impl_adt_M34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)void match(matcher const& m){switch(kind_){_impl_adt_MS34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)}}private:
#define _impl_adt_K35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35) _impl_adt_K34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)V35,
#define _impl_adt_D35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)_impl_adt_D34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)_impl_adt_real(T35)V35;
#define _impl_adt_MF35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35) _impl_adt_MF34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)std::function<void(T35)>V35##_;
#define _impl_adt_MM35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35) _impl_adt_MM34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)template<class T=T35>void call_##V35(_impl_adt_real(T35)a)const{_call_func(V35##_, a);}matcher& V35(std::function<void(T35)>f){V35##_=f;return *this;}
#define _impl_adt_M35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35) _impl_adt_M34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)template<class T=T35,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V35(_impl_adt_real(T35)const& t){NAME ret(kind::V35);try{new(&ret.data_.V35)T(t);}catch(...){std::terminate();}return ret;}template<class T=T35,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V35(_impl_adt_real(T35)&& t){NAME ret(kind::V35);try{new(&ret.data_.V35)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T35,class=std::enable_if_t<std::is_void<T>::value>>static NAME V35(){NAME ret(kind::V35);return ret;}
#define _impl_adt_MS35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35) _impl_adt_MS34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)case kind::V35:m.call_##V35(data_.V35);break;
#define _impl_adt_Ds35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35) _impl_adt_Ds34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)case kind::V35:data_.V35.~decltype(data_.V35)();break;
#define _impl_adt_Cc35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35) _impl_adt_Cc34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)case kind::V35:new(&data_.V35)decltype(data_.V35)(a.data_.V35);break;
#define _impl_adt_Mc35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35) _impl_adt_Mc34(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34)case kind::V35:new(&data_.V35)decltype(data_.V35)(std::move(a.data_.V35));break;
#define adt35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35) class NAME {public:enum class kind{_impl_adt_K35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)};private:kind kind_;union data{_impl_adt_D35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)}data_;public:class matcher{_impl_adt_MF35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)public:_impl_adt_MM35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)}}_impl_adt_M35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)void match(matcher const& m){switch(kind_){_impl_adt_MS35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)}}private:
#define _impl_adt_K36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36) _impl_adt_K35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)V36,
#define _impl_adt_D36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)_impl_adt_D35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)_impl_adt_real(T36)V36;
#define _impl_adt_MF36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36) _impl_adt_MF35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)std::function<void(T36)>V36##_;
#define _impl_adt_MM36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36) _impl_adt_MM35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)template<class T=T36>void call_##V36(_impl_adt_real(T36)a)const{_call_func(V36##_, a);}matcher& V36(std::function<void(T36)>f){V36##_=f;return *this;}
#define _impl_adt_M36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36) _impl_adt_M35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)template<class T=T36,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V36(_impl_adt_real(T36)const& t){NAME ret(kind::V36);try{new(&ret.data_.V36)T(t);}catch(...){std::terminate();}return ret;}template<class T=T36,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V36(_impl_adt_real(T36)&& t){NAME ret(kind::V36);try{new(&ret.data_.V36)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T36,class=std::enable_if_t<std::is_void<T>::value>>static NAME V36(){NAME ret(kind::V36);return ret;}
#define _impl_adt_MS36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36) _impl_adt_MS35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)case kind::V36:m.call_##V36(data_.V36);break;
#define _impl_adt_Ds36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36) _impl_adt_Ds35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)case kind::V36:data_.V36.~decltype(data_.V36)();break;
#define _impl_adt_Cc36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36) _impl_adt_Cc35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)case kind::V36:new(&data_.V36)decltype(data_.V36)(a.data_.V36);break;
#define _impl_adt_Mc36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36) _impl_adt_Mc35(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35)case kind::V36:new(&data_.V36)decltype(data_.V36)(std::move(a.data_.V36));break;
#define adt36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36) class NAME {public:enum class kind{_impl_adt_K36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)};private:kind kind_;union data{_impl_adt_D36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)}data_;public:class matcher{_impl_adt_MF36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)public:_impl_adt_MM36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)}}_impl_adt_M36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)void match(matcher const& m){switch(kind_){_impl_adt_MS36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)}}private:
#define _impl_adt_K37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37) _impl_adt_K36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)V37,
#define _impl_adt_D37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)_impl_adt_D36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)_impl_adt_real(T37)V37;
#define _impl_adt_MF37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37) _impl_adt_MF36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)std::function<void(T37)>V37##_;
#define _impl_adt_MM37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37) _impl_adt_MM36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)template<class T=T37>void call_##V37(_impl_adt_real(T37)a)const{_call_func(V37##_, a);}matcher& V37(std::function<void(T37)>f){V37##_=f;return *this;}
#define _impl_adt_M37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37) _impl_adt_M36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)template<class T=T37,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V37(_impl_adt_real(T37)const& t){NAME ret(kind::V37);try{new(&ret.data_.V37)T(t);}catch(...){std::terminate();}return ret;}template<class T=T37,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V37(_impl_adt_real(T37)&& t){NAME ret(kind::V37);try{new(&ret.data_.V37)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T37,class=std::enable_if_t<std::is_void<T>::value>>static NAME V37(){NAME ret(kind::V37);return ret;}
#define _impl_adt_MS37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37) _impl_adt_MS36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)case kind::V37:m.call_##V37(data_.V37);break;
#define _impl_adt_Ds37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37) _impl_adt_Ds36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)case kind::V37:data_.V37.~decltype(data_.V37)();break;
#define _impl_adt_Cc37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37) _impl_adt_Cc36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)case kind::V37:new(&data_.V37)decltype(data_.V37)(a.data_.V37);break;
#define _impl_adt_Mc37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37) _impl_adt_Mc36(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36)case kind::V37:new(&data_.V37)decltype(data_.V37)(std::move(a.data_.V37));break;
#define adt37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37) class NAME {public:enum class kind{_impl_adt_K37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)};private:kind kind_;union data{_impl_adt_D37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)}data_;public:class matcher{_impl_adt_MF37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)public:_impl_adt_MM37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)}}_impl_adt_M37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)void match(matcher const& m){switch(kind_){_impl_adt_MS37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)}}private:
#define _impl_adt_K38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38) _impl_adt_K37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)V38,
#define _impl_adt_D38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)_impl_adt_D37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)_impl_adt_real(T38)V38;
#define _impl_adt_MF38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38) _impl_adt_MF37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)std::function<void(T38)>V38##_;
#define _impl_adt_MM38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38) _impl_adt_MM37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)template<class T=T38>void call_##V38(_impl_adt_real(T38)a)const{_call_func(V38##_, a);}matcher& V38(std::function<void(T38)>f){V38##_=f;return *this;}
#define _impl_adt_M38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38) _impl_adt_M37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)template<class T=T38,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V38(_impl_adt_real(T38)const& t){NAME ret(kind::V38);try{new(&ret.data_.V38)T(t);}catch(...){std::terminate();}return ret;}template<class T=T38,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V38(_impl_adt_real(T38)&& t){NAME ret(kind::V38);try{new(&ret.data_.V38)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T38,class=std::enable_if_t<std::is_void<T>::value>>static NAME V38(){NAME ret(kind::V38);return ret;}
#define _impl_adt_MS38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38) _impl_adt_MS37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)case kind::V38:m.call_##V38(data_.V38);break;
#define _impl_adt_Ds38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38) _impl_adt_Ds37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)case kind::V38:data_.V38.~decltype(data_.V38)();break;
#define _impl_adt_Cc38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38) _impl_adt_Cc37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)case kind::V38:new(&data_.V38)decltype(data_.V38)(a.data_.V38);break;
#define _impl_adt_Mc38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38) _impl_adt_Mc37(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37)case kind::V38:new(&data_.V38)decltype(data_.V38)(std::move(a.data_.V38));break;
#define adt38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38) class NAME {public:enum class kind{_impl_adt_K38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)};private:kind kind_;union data{_impl_adt_D38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)}data_;public:class matcher{_impl_adt_MF38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)public:_impl_adt_MM38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)}}_impl_adt_M38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)void match(matcher const& m){switch(kind_){_impl_adt_MS38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)}}private:
#define _impl_adt_K39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39) _impl_adt_K38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)V39,
#define _impl_adt_D39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)_impl_adt_D38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)_impl_adt_real(T39)V39;
#define _impl_adt_MF39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39) _impl_adt_MF38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)std::function<void(T39)>V39##_;
#define _impl_adt_MM39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39) _impl_adt_MM38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)template<class T=T39>void call_##V39(_impl_adt_real(T39)a)const{_call_func(V39##_, a);}matcher& V39(std::function<void(T39)>f){V39##_=f;return *this;}
#define _impl_adt_M39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39) _impl_adt_M38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)template<class T=T39,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V39(_impl_adt_real(T39)const& t){NAME ret(kind::V39);try{new(&ret.data_.V39)T(t);}catch(...){std::terminate();}return ret;}template<class T=T39,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V39(_impl_adt_real(T39)&& t){NAME ret(kind::V39);try{new(&ret.data_.V39)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T39,class=std::enable_if_t<std::is_void<T>::value>>static NAME V39(){NAME ret(kind::V39);return ret;}
#define _impl_adt_MS39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39) _impl_adt_MS38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)case kind::V39:m.call_##V39(data_.V39);break;
#define _impl_adt_Ds39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39) _impl_adt_Ds38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)case kind::V39:data_.V39.~decltype(data_.V39)();break;
#define _impl_adt_Cc39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39) _impl_adt_Cc38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)case kind::V39:new(&data_.V39)decltype(data_.V39)(a.data_.V39);break;
#define _impl_adt_Mc39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39) _impl_adt_Mc38(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38)case kind::V39:new(&data_.V39)decltype(data_.V39)(std::move(a.data_.V39));break;
#define adt39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39) class NAME {public:enum class kind{_impl_adt_K39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)};private:kind kind_;union data{_impl_adt_D39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)}data_;public:class matcher{_impl_adt_MF39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)public:_impl_adt_MM39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)}}_impl_adt_M39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)void match(matcher const& m){switch(kind_){_impl_adt_MS39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)}}private:
#define _impl_adt_K3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a) _impl_adt_K39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)V3a,
#define _impl_adt_D3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)_impl_adt_D39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)_impl_adt_real(T3a)V3a;
#define _impl_adt_MF3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a) _impl_adt_MF39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)std::function<void(T3a)>V3a##_;
#define _impl_adt_MM3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a) _impl_adt_MM39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)template<class T=T3a>void call_##V3a(_impl_adt_real(T3a)a)const{_call_func(V3a##_, a);}matcher& V3a(std::function<void(T3a)>f){V3a##_=f;return *this;}
#define _impl_adt_M3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a) _impl_adt_M39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)template<class T=T3a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3a(_impl_adt_real(T3a)const& t){NAME ret(kind::V3a);try{new(&ret.data_.V3a)T(t);}catch(...){std::terminate();}return ret;}template<class T=T3a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3a(_impl_adt_real(T3a)&& t){NAME ret(kind::V3a);try{new(&ret.data_.V3a)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T3a,class=std::enable_if_t<std::is_void<T>::value>>static NAME V3a(){NAME ret(kind::V3a);return ret;}
#define _impl_adt_MS3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a) _impl_adt_MS39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)case kind::V3a:m.call_##V3a(data_.V3a);break;
#define _impl_adt_Ds3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a) _impl_adt_Ds39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)case kind::V3a:data_.V3a.~decltype(data_.V3a)();break;
#define _impl_adt_Cc3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a) _impl_adt_Cc39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)case kind::V3a:new(&data_.V3a)decltype(data_.V3a)(a.data_.V3a);break;
#define _impl_adt_Mc3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a) _impl_adt_Mc39(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39)case kind::V3a:new(&data_.V3a)decltype(data_.V3a)(std::move(a.data_.V3a));break;
#define adt3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a) class NAME {public:enum class kind{_impl_adt_K3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)};private:kind kind_;union data{_impl_adt_D3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)}data_;public:class matcher{_impl_adt_MF3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)public:_impl_adt_MM3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)}}_impl_adt_M3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)void match(matcher const& m){switch(kind_){_impl_adt_MS3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)}}private:
#define _impl_adt_K3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b) _impl_adt_K3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)V3b,
#define _impl_adt_D3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)_impl_adt_D3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)_impl_adt_real(T3b)V3b;
#define _impl_adt_MF3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b) _impl_adt_MF3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)std::function<void(T3b)>V3b##_;
#define _impl_adt_MM3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b) _impl_adt_MM3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)template<class T=T3b>void call_##V3b(_impl_adt_real(T3b)a)const{_call_func(V3b##_, a);}matcher& V3b(std::function<void(T3b)>f){V3b##_=f;return *this;}
#define _impl_adt_M3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b) _impl_adt_M3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)template<class T=T3b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3b(_impl_adt_real(T3b)const& t){NAME ret(kind::V3b);try{new(&ret.data_.V3b)T(t);}catch(...){std::terminate();}return ret;}template<class T=T3b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3b(_impl_adt_real(T3b)&& t){NAME ret(kind::V3b);try{new(&ret.data_.V3b)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T3b,class=std::enable_if_t<std::is_void<T>::value>>static NAME V3b(){NAME ret(kind::V3b);return ret;}
#define _impl_adt_MS3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b) _impl_adt_MS3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)case kind::V3b:m.call_##V3b(data_.V3b);break;
#define _impl_adt_Ds3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b) _impl_adt_Ds3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)case kind::V3b:data_.V3b.~decltype(data_.V3b)();break;
#define _impl_adt_Cc3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b) _impl_adt_Cc3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)case kind::V3b:new(&data_.V3b)decltype(data_.V3b)(a.data_.V3b);break;
#define _impl_adt_Mc3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b) _impl_adt_Mc3a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a)case kind::V3b:new(&data_.V3b)decltype(data_.V3b)(std::move(a.data_.V3b));break;
#define adt3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b) class NAME {public:enum class kind{_impl_adt_K3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)};private:kind kind_;union data{_impl_adt_D3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)}data_;public:class matcher{_impl_adt_MF3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)public:_impl_adt_MM3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)}}_impl_adt_M3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)void match(matcher const& m){switch(kind_){_impl_adt_MS3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)}}private:
#define _impl_adt_K3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c) _impl_adt_K3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)V3c,
#define _impl_adt_D3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)_impl_adt_D3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)_impl_adt_real(T3c)V3c;
#define _impl_adt_MF3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c) _impl_adt_MF3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)std::function<void(T3c)>V3c##_;
#define _impl_adt_MM3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c) _impl_adt_MM3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)template<class T=T3c>void call_##V3c(_impl_adt_real(T3c)a)const{_call_func(V3c##_, a);}matcher& V3c(std::function<void(T3c)>f){V3c##_=f;return *this;}
#define _impl_adt_M3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c) _impl_adt_M3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)template<class T=T3c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3c(_impl_adt_real(T3c)const& t){NAME ret(kind::V3c);try{new(&ret.data_.V3c)T(t);}catch(...){std::terminate();}return ret;}template<class T=T3c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3c(_impl_adt_real(T3c)&& t){NAME ret(kind::V3c);try{new(&ret.data_.V3c)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T3c,class=std::enable_if_t<std::is_void<T>::value>>static NAME V3c(){NAME ret(kind::V3c);return ret;}
#define _impl_adt_MS3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c) _impl_adt_MS3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)case kind::V3c:m.call_##V3c(data_.V3c);break;
#define _impl_adt_Ds3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c) _impl_adt_Ds3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)case kind::V3c:data_.V3c.~decltype(data_.V3c)();break;
#define _impl_adt_Cc3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c) _impl_adt_Cc3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)case kind::V3c:new(&data_.V3c)decltype(data_.V3c)(a.data_.V3c);break;
#define _impl_adt_Mc3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c) _impl_adt_Mc3b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b)case kind::V3c:new(&data_.V3c)decltype(data_.V3c)(std::move(a.data_.V3c));break;
#define adt3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c) class NAME {public:enum class kind{_impl_adt_K3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)};private:kind kind_;union data{_impl_adt_D3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)}data_;public:class matcher{_impl_adt_MF3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)public:_impl_adt_MM3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)}}_impl_adt_M3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)void match(matcher const& m){switch(kind_){_impl_adt_MS3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)}}private:
#define _impl_adt_K3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d) _impl_adt_K3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)V3d,
#define _impl_adt_D3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)_impl_adt_D3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)_impl_adt_real(T3d)V3d;
#define _impl_adt_MF3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d) _impl_adt_MF3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)std::function<void(T3d)>V3d##_;
#define _impl_adt_MM3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d) _impl_adt_MM3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)template<class T=T3d>void call_##V3d(_impl_adt_real(T3d)a)const{_call_func(V3d##_, a);}matcher& V3d(std::function<void(T3d)>f){V3d##_=f;return *this;}
#define _impl_adt_M3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d) _impl_adt_M3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)template<class T=T3d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3d(_impl_adt_real(T3d)const& t){NAME ret(kind::V3d);try{new(&ret.data_.V3d)T(t);}catch(...){std::terminate();}return ret;}template<class T=T3d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3d(_impl_adt_real(T3d)&& t){NAME ret(kind::V3d);try{new(&ret.data_.V3d)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T3d,class=std::enable_if_t<std::is_void<T>::value>>static NAME V3d(){NAME ret(kind::V3d);return ret;}
#define _impl_adt_MS3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d) _impl_adt_MS3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)case kind::V3d:m.call_##V3d(data_.V3d);break;
#define _impl_adt_Ds3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d) _impl_adt_Ds3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)case kind::V3d:data_.V3d.~decltype(data_.V3d)();break;
#define _impl_adt_Cc3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d) _impl_adt_Cc3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)case kind::V3d:new(&data_.V3d)decltype(data_.V3d)(a.data_.V3d);break;
#define _impl_adt_Mc3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d) _impl_adt_Mc3c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c)case kind::V3d:new(&data_.V3d)decltype(data_.V3d)(std::move(a.data_.V3d));break;
#define adt3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d) class NAME {public:enum class kind{_impl_adt_K3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)};private:kind kind_;union data{_impl_adt_D3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)}data_;public:class matcher{_impl_adt_MF3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)public:_impl_adt_MM3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)}}_impl_adt_M3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)void match(matcher const& m){switch(kind_){_impl_adt_MS3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)}}private:
#define _impl_adt_K3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e) _impl_adt_K3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)V3e,
#define _impl_adt_D3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)_impl_adt_D3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)_impl_adt_real(T3e)V3e;
#define _impl_adt_MF3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e) _impl_adt_MF3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)std::function<void(T3e)>V3e##_;
#define _impl_adt_MM3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e) _impl_adt_MM3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)template<class T=T3e>void call_##V3e(_impl_adt_real(T3e)a)const{_call_func(V3e##_, a);}matcher& V3e(std::function<void(T3e)>f){V3e##_=f;return *this;}
#define _impl_adt_M3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e) _impl_adt_M3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)template<class T=T3e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3e(_impl_adt_real(T3e)const& t){NAME ret(kind::V3e);try{new(&ret.data_.V3e)T(t);}catch(...){std::terminate();}return ret;}template<class T=T3e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3e(_impl_adt_real(T3e)&& t){NAME ret(kind::V3e);try{new(&ret.data_.V3e)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T3e,class=std::enable_if_t<std::is_void<T>::value>>static NAME V3e(){NAME ret(kind::V3e);return ret;}
#define _impl_adt_MS3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e) _impl_adt_MS3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)case kind::V3e:m.call_##V3e(data_.V3e);break;
#define _impl_adt_Ds3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e) _impl_adt_Ds3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)case kind::V3e:data_.V3e.~decltype(data_.V3e)();break;
#define _impl_adt_Cc3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e) _impl_adt_Cc3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)case kind::V3e:new(&data_.V3e)decltype(data_.V3e)(a.data_.V3e);break;
#define _impl_adt_Mc3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e) _impl_adt_Mc3d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d)case kind::V3e:new(&data_.V3e)decltype(data_.V3e)(std::move(a.data_.V3e));break;
#define adt3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e) class NAME {public:enum class kind{_impl_adt_K3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)};private:kind kind_;union data{_impl_adt_D3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)}data_;public:class matcher{_impl_adt_MF3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)public:_impl_adt_MM3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)}}_impl_adt_M3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)void match(matcher const& m){switch(kind_){_impl_adt_MS3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)}}private:
#define _impl_adt_K3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f) _impl_adt_K3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)V3f,
#define _impl_adt_D3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)_impl_adt_D3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)_impl_adt_real(T3f)V3f;
#define _impl_adt_MF3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f) _impl_adt_MF3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)std::function<void(T3f)>V3f##_;
#define _impl_adt_MM3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f) _impl_adt_MM3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)template<class T=T3f>void call_##V3f(_impl_adt_real(T3f)a)const{_call_func(V3f##_, a);}matcher& V3f(std::function<void(T3f)>f){V3f##_=f;return *this;}
#define _impl_adt_M3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f) _impl_adt_M3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)template<class T=T3f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3f(_impl_adt_real(T3f)const& t){NAME ret(kind::V3f);try{new(&ret.data_.V3f)T(t);}catch(...){std::terminate();}return ret;}template<class T=T3f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V3f(_impl_adt_real(T3f)&& t){NAME ret(kind::V3f);try{new(&ret.data_.V3f)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T3f,class=std::enable_if_t<std::is_void<T>::value>>static NAME V3f(){NAME ret(kind::V3f);return ret;}
#define _impl_adt_MS3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f) _impl_adt_MS3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)case kind::V3f:m.call_##V3f(data_.V3f);break;
#define _impl_adt_Ds3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f) _impl_adt_Ds3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)case kind::V3f:data_.V3f.~decltype(data_.V3f)();break;
#define _impl_adt_Cc3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f) _impl_adt_Cc3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)case kind::V3f:new(&data_.V3f)decltype(data_.V3f)(a.data_.V3f);break;
#define _impl_adt_Mc3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f) _impl_adt_Mc3e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e)case kind::V3f:new(&data_.V3f)decltype(data_.V3f)(std::move(a.data_.V3f));break;
#define adt3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f) class NAME {public:enum class kind{_impl_adt_K3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)};private:kind kind_;union data{_impl_adt_D3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)}data_;public:class matcher{_impl_adt_MF3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)public:_impl_adt_MM3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)}}_impl_adt_M3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)void match(matcher const& m){switch(kind_){_impl_adt_MS3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)}}private:
#define _impl_adt_K40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40) _impl_adt_K3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)V40,
#define _impl_adt_D40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)_impl_adt_D3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)_impl_adt_real(T40)V40;
#define _impl_adt_MF40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40) _impl_adt_MF3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)std::function<void(T40)>V40##_;
#define _impl_adt_MM40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40) _impl_adt_MM3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)template<class T=T40>void call_##V40(_impl_adt_real(T40)a)const{_call_func(V40##_, a);}matcher& V40(std::function<void(T40)>f){V40##_=f;return *this;}
#define _impl_adt_M40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40) _impl_adt_M3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)template<class T=T40,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V40(_impl_adt_real(T40)const& t){NAME ret(kind::V40);try{new(&ret.data_.V40)T(t);}catch(...){std::terminate();}return ret;}template<class T=T40,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V40(_impl_adt_real(T40)&& t){NAME ret(kind::V40);try{new(&ret.data_.V40)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T40,class=std::enable_if_t<std::is_void<T>::value>>static NAME V40(){NAME ret(kind::V40);return ret;}
#define _impl_adt_MS40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40) _impl_adt_MS3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)case kind::V40:m.call_##V40(data_.V40);break;
#define _impl_adt_Ds40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40) _impl_adt_Ds3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)case kind::V40:data_.V40.~decltype(data_.V40)();break;
#define _impl_adt_Cc40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40) _impl_adt_Cc3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)case kind::V40:new(&data_.V40)decltype(data_.V40)(a.data_.V40);break;
#define _impl_adt_Mc40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40) _impl_adt_Mc3f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f)case kind::V40:new(&data_.V40)decltype(data_.V40)(std::move(a.data_.V40));break;
#define adt40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40) class NAME {public:enum class kind{_impl_adt_K40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)};private:kind kind_;union data{_impl_adt_D40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)}data_;public:class matcher{_impl_adt_MF40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)public:_impl_adt_MM40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)}}_impl_adt_M40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)void match(matcher const& m){switch(kind_){_impl_adt_MS40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)}}private:
#define _impl_adt_K41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41) _impl_adt_K40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)V41,
#define _impl_adt_D41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)_impl_adt_D40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)_impl_adt_real(T41)V41;
#define _impl_adt_MF41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41) _impl_adt_MF40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)std::function<void(T41)>V41##_;
#define _impl_adt_MM41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41) _impl_adt_MM40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)template<class T=T41>void call_##V41(_impl_adt_real(T41)a)const{_call_func(V41##_, a);}matcher& V41(std::function<void(T41)>f){V41##_=f;return *this;}
#define _impl_adt_M41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41) _impl_adt_M40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)template<class T=T41,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V41(_impl_adt_real(T41)const& t){NAME ret(kind::V41);try{new(&ret.data_.V41)T(t);}catch(...){std::terminate();}return ret;}template<class T=T41,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V41(_impl_adt_real(T41)&& t){NAME ret(kind::V41);try{new(&ret.data_.V41)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T41,class=std::enable_if_t<std::is_void<T>::value>>static NAME V41(){NAME ret(kind::V41);return ret;}
#define _impl_adt_MS41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41) _impl_adt_MS40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)case kind::V41:m.call_##V41(data_.V41);break;
#define _impl_adt_Ds41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41) _impl_adt_Ds40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)case kind::V41:data_.V41.~decltype(data_.V41)();break;
#define _impl_adt_Cc41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41) _impl_adt_Cc40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)case kind::V41:new(&data_.V41)decltype(data_.V41)(a.data_.V41);break;
#define _impl_adt_Mc41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41) _impl_adt_Mc40(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40)case kind::V41:new(&data_.V41)decltype(data_.V41)(std::move(a.data_.V41));break;
#define adt41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41) class NAME {public:enum class kind{_impl_adt_K41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)};private:kind kind_;union data{_impl_adt_D41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)}data_;public:class matcher{_impl_adt_MF41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)public:_impl_adt_MM41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)}}_impl_adt_M41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)void match(matcher const& m){switch(kind_){_impl_adt_MS41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)}}private:
#define _impl_adt_K42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42) _impl_adt_K41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)V42,
#define _impl_adt_D42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)_impl_adt_D41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)_impl_adt_real(T42)V42;
#define _impl_adt_MF42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42) _impl_adt_MF41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)std::function<void(T42)>V42##_;
#define _impl_adt_MM42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42) _impl_adt_MM41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)template<class T=T42>void call_##V42(_impl_adt_real(T42)a)const{_call_func(V42##_, a);}matcher& V42(std::function<void(T42)>f){V42##_=f;return *this;}
#define _impl_adt_M42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42) _impl_adt_M41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)template<class T=T42,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V42(_impl_adt_real(T42)const& t){NAME ret(kind::V42);try{new(&ret.data_.V42)T(t);}catch(...){std::terminate();}return ret;}template<class T=T42,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V42(_impl_adt_real(T42)&& t){NAME ret(kind::V42);try{new(&ret.data_.V42)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T42,class=std::enable_if_t<std::is_void<T>::value>>static NAME V42(){NAME ret(kind::V42);return ret;}
#define _impl_adt_MS42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42) _impl_adt_MS41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)case kind::V42:m.call_##V42(data_.V42);break;
#define _impl_adt_Ds42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42) _impl_adt_Ds41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)case kind::V42:data_.V42.~decltype(data_.V42)();break;
#define _impl_adt_Cc42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42) _impl_adt_Cc41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)case kind::V42:new(&data_.V42)decltype(data_.V42)(a.data_.V42);break;
#define _impl_adt_Mc42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42) _impl_adt_Mc41(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41)case kind::V42:new(&data_.V42)decltype(data_.V42)(std::move(a.data_.V42));break;
#define adt42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42) class NAME {public:enum class kind{_impl_adt_K42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)};private:kind kind_;union data{_impl_adt_D42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)}data_;public:class matcher{_impl_adt_MF42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)public:_impl_adt_MM42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)}}_impl_adt_M42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)void match(matcher const& m){switch(kind_){_impl_adt_MS42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)}}private:
#define _impl_adt_K43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43) _impl_adt_K42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)V43,
#define _impl_adt_D43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)_impl_adt_D42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)_impl_adt_real(T43)V43;
#define _impl_adt_MF43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43) _impl_adt_MF42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)std::function<void(T43)>V43##_;
#define _impl_adt_MM43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43) _impl_adt_MM42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)template<class T=T43>void call_##V43(_impl_adt_real(T43)a)const{_call_func(V43##_, a);}matcher& V43(std::function<void(T43)>f){V43##_=f;return *this;}
#define _impl_adt_M43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43) _impl_adt_M42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)template<class T=T43,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V43(_impl_adt_real(T43)const& t){NAME ret(kind::V43);try{new(&ret.data_.V43)T(t);}catch(...){std::terminate();}return ret;}template<class T=T43,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V43(_impl_adt_real(T43)&& t){NAME ret(kind::V43);try{new(&ret.data_.V43)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T43,class=std::enable_if_t<std::is_void<T>::value>>static NAME V43(){NAME ret(kind::V43);return ret;}
#define _impl_adt_MS43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43) _impl_adt_MS42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)case kind::V43:m.call_##V43(data_.V43);break;
#define _impl_adt_Ds43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43) _impl_adt_Ds42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)case kind::V43:data_.V43.~decltype(data_.V43)();break;
#define _impl_adt_Cc43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43) _impl_adt_Cc42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)case kind::V43:new(&data_.V43)decltype(data_.V43)(a.data_.V43);break;
#define _impl_adt_Mc43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43) _impl_adt_Mc42(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42)case kind::V43:new(&data_.V43)decltype(data_.V43)(std::move(a.data_.V43));break;
#define adt43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43) class NAME {public:enum class kind{_impl_adt_K43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)};private:kind kind_;union data{_impl_adt_D43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)}data_;public:class matcher{_impl_adt_MF43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)public:_impl_adt_MM43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)}}_impl_adt_M43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)void match(matcher const& m){switch(kind_){_impl_adt_MS43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)}}private:
#define _impl_adt_K44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44) _impl_adt_K43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)V44,
#define _impl_adt_D44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)_impl_adt_D43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)_impl_adt_real(T44)V44;
#define _impl_adt_MF44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44) _impl_adt_MF43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)std::function<void(T44)>V44##_;
#define _impl_adt_MM44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44) _impl_adt_MM43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)template<class T=T44>void call_##V44(_impl_adt_real(T44)a)const{_call_func(V44##_, a);}matcher& V44(std::function<void(T44)>f){V44##_=f;return *this;}
#define _impl_adt_M44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44) _impl_adt_M43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)template<class T=T44,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V44(_impl_adt_real(T44)const& t){NAME ret(kind::V44);try{new(&ret.data_.V44)T(t);}catch(...){std::terminate();}return ret;}template<class T=T44,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V44(_impl_adt_real(T44)&& t){NAME ret(kind::V44);try{new(&ret.data_.V44)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T44,class=std::enable_if_t<std::is_void<T>::value>>static NAME V44(){NAME ret(kind::V44);return ret;}
#define _impl_adt_MS44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44) _impl_adt_MS43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)case kind::V44:m.call_##V44(data_.V44);break;
#define _impl_adt_Ds44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44) _impl_adt_Ds43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)case kind::V44:data_.V44.~decltype(data_.V44)();break;
#define _impl_adt_Cc44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44) _impl_adt_Cc43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)case kind::V44:new(&data_.V44)decltype(data_.V44)(a.data_.V44);break;
#define _impl_adt_Mc44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44) _impl_adt_Mc43(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43)case kind::V44:new(&data_.V44)decltype(data_.V44)(std::move(a.data_.V44));break;
#define adt44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44) class NAME {public:enum class kind{_impl_adt_K44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)};private:kind kind_;union data{_impl_adt_D44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)}data_;public:class matcher{_impl_adt_MF44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)public:_impl_adt_MM44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)}}_impl_adt_M44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)void match(matcher const& m){switch(kind_){_impl_adt_MS44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)}}private:
#define _impl_adt_K45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45) _impl_adt_K44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)V45,
#define _impl_adt_D45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)_impl_adt_D44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)_impl_adt_real(T45)V45;
#define _impl_adt_MF45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45) _impl_adt_MF44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)std::function<void(T45)>V45##_;
#define _impl_adt_MM45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45) _impl_adt_MM44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)template<class T=T45>void call_##V45(_impl_adt_real(T45)a)const{_call_func(V45##_, a);}matcher& V45(std::function<void(T45)>f){V45##_=f;return *this;}
#define _impl_adt_M45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45) _impl_adt_M44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)template<class T=T45,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V45(_impl_adt_real(T45)const& t){NAME ret(kind::V45);try{new(&ret.data_.V45)T(t);}catch(...){std::terminate();}return ret;}template<class T=T45,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V45(_impl_adt_real(T45)&& t){NAME ret(kind::V45);try{new(&ret.data_.V45)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T45,class=std::enable_if_t<std::is_void<T>::value>>static NAME V45(){NAME ret(kind::V45);return ret;}
#define _impl_adt_MS45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45) _impl_adt_MS44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)case kind::V45:m.call_##V45(data_.V45);break;
#define _impl_adt_Ds45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45) _impl_adt_Ds44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)case kind::V45:data_.V45.~decltype(data_.V45)();break;
#define _impl_adt_Cc45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45) _impl_adt_Cc44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)case kind::V45:new(&data_.V45)decltype(data_.V45)(a.data_.V45);break;
#define _impl_adt_Mc45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45) _impl_adt_Mc44(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44)case kind::V45:new(&data_.V45)decltype(data_.V45)(std::move(a.data_.V45));break;
#define adt45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45) class NAME {public:enum class kind{_impl_adt_K45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)};private:kind kind_;union data{_impl_adt_D45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)}data_;public:class matcher{_impl_adt_MF45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)public:_impl_adt_MM45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)}}_impl_adt_M45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)void match(matcher const& m){switch(kind_){_impl_adt_MS45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)}}private:
#define _impl_adt_K46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46) _impl_adt_K45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)V46,
#define _impl_adt_D46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)_impl_adt_D45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)_impl_adt_real(T46)V46;
#define _impl_adt_MF46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46) _impl_adt_MF45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)std::function<void(T46)>V46##_;
#define _impl_adt_MM46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46) _impl_adt_MM45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)template<class T=T46>void call_##V46(_impl_adt_real(T46)a)const{_call_func(V46##_, a);}matcher& V46(std::function<void(T46)>f){V46##_=f;return *this;}
#define _impl_adt_M46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46) _impl_adt_M45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)template<class T=T46,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V46(_impl_adt_real(T46)const& t){NAME ret(kind::V46);try{new(&ret.data_.V46)T(t);}catch(...){std::terminate();}return ret;}template<class T=T46,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V46(_impl_adt_real(T46)&& t){NAME ret(kind::V46);try{new(&ret.data_.V46)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T46,class=std::enable_if_t<std::is_void<T>::value>>static NAME V46(){NAME ret(kind::V46);return ret;}
#define _impl_adt_MS46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46) _impl_adt_MS45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)case kind::V46:m.call_##V46(data_.V46);break;
#define _impl_adt_Ds46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46) _impl_adt_Ds45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)case kind::V46:data_.V46.~decltype(data_.V46)();break;
#define _impl_adt_Cc46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46) _impl_adt_Cc45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)case kind::V46:new(&data_.V46)decltype(data_.V46)(a.data_.V46);break;
#define _impl_adt_Mc46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46) _impl_adt_Mc45(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45)case kind::V46:new(&data_.V46)decltype(data_.V46)(std::move(a.data_.V46));break;
#define adt46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46) class NAME {public:enum class kind{_impl_adt_K46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)};private:kind kind_;union data{_impl_adt_D46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)}data_;public:class matcher{_impl_adt_MF46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)public:_impl_adt_MM46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)}}_impl_adt_M46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)void match(matcher const& m){switch(kind_){_impl_adt_MS46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)}}private:
#define _impl_adt_K47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47) _impl_adt_K46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)V47,
#define _impl_adt_D47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)_impl_adt_D46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)_impl_adt_real(T47)V47;
#define _impl_adt_MF47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47) _impl_adt_MF46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)std::function<void(T47)>V47##_;
#define _impl_adt_MM47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47) _impl_adt_MM46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)template<class T=T47>void call_##V47(_impl_adt_real(T47)a)const{_call_func(V47##_, a);}matcher& V47(std::function<void(T47)>f){V47##_=f;return *this;}
#define _impl_adt_M47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47) _impl_adt_M46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)template<class T=T47,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V47(_impl_adt_real(T47)const& t){NAME ret(kind::V47);try{new(&ret.data_.V47)T(t);}catch(...){std::terminate();}return ret;}template<class T=T47,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V47(_impl_adt_real(T47)&& t){NAME ret(kind::V47);try{new(&ret.data_.V47)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T47,class=std::enable_if_t<std::is_void<T>::value>>static NAME V47(){NAME ret(kind::V47);return ret;}
#define _impl_adt_MS47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47) _impl_adt_MS46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)case kind::V47:m.call_##V47(data_.V47);break;
#define _impl_adt_Ds47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47) _impl_adt_Ds46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)case kind::V47:data_.V47.~decltype(data_.V47)();break;
#define _impl_adt_Cc47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47) _impl_adt_Cc46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)case kind::V47:new(&data_.V47)decltype(data_.V47)(a.data_.V47);break;
#define _impl_adt_Mc47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47) _impl_adt_Mc46(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46)case kind::V47:new(&data_.V47)decltype(data_.V47)(std::move(a.data_.V47));break;
#define adt47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47) class NAME {public:enum class kind{_impl_adt_K47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)};private:kind kind_;union data{_impl_adt_D47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)}data_;public:class matcher{_impl_adt_MF47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)public:_impl_adt_MM47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)}}_impl_adt_M47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)void match(matcher const& m){switch(kind_){_impl_adt_MS47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)}}private:
#define _impl_adt_K48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48) _impl_adt_K47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)V48,
#define _impl_adt_D48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)_impl_adt_D47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)_impl_adt_real(T48)V48;
#define _impl_adt_MF48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48) _impl_adt_MF47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)std::function<void(T48)>V48##_;
#define _impl_adt_MM48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48) _impl_adt_MM47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)template<class T=T48>void call_##V48(_impl_adt_real(T48)a)const{_call_func(V48##_, a);}matcher& V48(std::function<void(T48)>f){V48##_=f;return *this;}
#define _impl_adt_M48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48) _impl_adt_M47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)template<class T=T48,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V48(_impl_adt_real(T48)const& t){NAME ret(kind::V48);try{new(&ret.data_.V48)T(t);}catch(...){std::terminate();}return ret;}template<class T=T48,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V48(_impl_adt_real(T48)&& t){NAME ret(kind::V48);try{new(&ret.data_.V48)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T48,class=std::enable_if_t<std::is_void<T>::value>>static NAME V48(){NAME ret(kind::V48);return ret;}
#define _impl_adt_MS48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48) _impl_adt_MS47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)case kind::V48:m.call_##V48(data_.V48);break;
#define _impl_adt_Ds48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48) _impl_adt_Ds47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)case kind::V48:data_.V48.~decltype(data_.V48)();break;
#define _impl_adt_Cc48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48) _impl_adt_Cc47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)case kind::V48:new(&data_.V48)decltype(data_.V48)(a.data_.V48);break;
#define _impl_adt_Mc48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48) _impl_adt_Mc47(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47)case kind::V48:new(&data_.V48)decltype(data_.V48)(std::move(a.data_.V48));break;
#define adt48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48) class NAME {public:enum class kind{_impl_adt_K48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)};private:kind kind_;union data{_impl_adt_D48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)}data_;public:class matcher{_impl_adt_MF48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)public:_impl_adt_MM48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)}}_impl_adt_M48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)void match(matcher const& m){switch(kind_){_impl_adt_MS48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)}}private:
#define _impl_adt_K49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49) _impl_adt_K48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)V49,
#define _impl_adt_D49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)_impl_adt_D48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)_impl_adt_real(T49)V49;
#define _impl_adt_MF49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49) _impl_adt_MF48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)std::function<void(T49)>V49##_;
#define _impl_adt_MM49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49) _impl_adt_MM48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)template<class T=T49>void call_##V49(_impl_adt_real(T49)a)const{_call_func(V49##_, a);}matcher& V49(std::function<void(T49)>f){V49##_=f;return *this;}
#define _impl_adt_M49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49) _impl_adt_M48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)template<class T=T49,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V49(_impl_adt_real(T49)const& t){NAME ret(kind::V49);try{new(&ret.data_.V49)T(t);}catch(...){std::terminate();}return ret;}template<class T=T49,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V49(_impl_adt_real(T49)&& t){NAME ret(kind::V49);try{new(&ret.data_.V49)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T49,class=std::enable_if_t<std::is_void<T>::value>>static NAME V49(){NAME ret(kind::V49);return ret;}
#define _impl_adt_MS49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49) _impl_adt_MS48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)case kind::V49:m.call_##V49(data_.V49);break;
#define _impl_adt_Ds49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49) _impl_adt_Ds48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)case kind::V49:data_.V49.~decltype(data_.V49)();break;
#define _impl_adt_Cc49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49) _impl_adt_Cc48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)case kind::V49:new(&data_.V49)decltype(data_.V49)(a.data_.V49);break;
#define _impl_adt_Mc49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49) _impl_adt_Mc48(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48)case kind::V49:new(&data_.V49)decltype(data_.V49)(std::move(a.data_.V49));break;
#define adt49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49) class NAME {public:enum class kind{_impl_adt_K49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)};private:kind kind_;union data{_impl_adt_D49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)}data_;public:class matcher{_impl_adt_MF49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)public:_impl_adt_MM49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)}}_impl_adt_M49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)void match(matcher const& m){switch(kind_){_impl_adt_MS49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)}}private:
#define _impl_adt_K4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a) _impl_adt_K49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)V4a,
#define _impl_adt_D4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)_impl_adt_D49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)_impl_adt_real(T4a)V4a;
#define _impl_adt_MF4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a) _impl_adt_MF49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)std::function<void(T4a)>V4a##_;
#define _impl_adt_MM4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a) _impl_adt_MM49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)template<class T=T4a>void call_##V4a(_impl_adt_real(T4a)a)const{_call_func(V4a##_, a);}matcher& V4a(std::function<void(T4a)>f){V4a##_=f;return *this;}
#define _impl_adt_M4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a) _impl_adt_M49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)template<class T=T4a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4a(_impl_adt_real(T4a)const& t){NAME ret(kind::V4a);try{new(&ret.data_.V4a)T(t);}catch(...){std::terminate();}return ret;}template<class T=T4a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4a(_impl_adt_real(T4a)&& t){NAME ret(kind::V4a);try{new(&ret.data_.V4a)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T4a,class=std::enable_if_t<std::is_void<T>::value>>static NAME V4a(){NAME ret(kind::V4a);return ret;}
#define _impl_adt_MS4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a) _impl_adt_MS49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)case kind::V4a:m.call_##V4a(data_.V4a);break;
#define _impl_adt_Ds4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a) _impl_adt_Ds49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)case kind::V4a:data_.V4a.~decltype(data_.V4a)();break;
#define _impl_adt_Cc4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a) _impl_adt_Cc49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)case kind::V4a:new(&data_.V4a)decltype(data_.V4a)(a.data_.V4a);break;
#define _impl_adt_Mc4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a) _impl_adt_Mc49(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49)case kind::V4a:new(&data_.V4a)decltype(data_.V4a)(std::move(a.data_.V4a));break;
#define adt4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a) class NAME {public:enum class kind{_impl_adt_K4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)};private:kind kind_;union data{_impl_adt_D4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)}data_;public:class matcher{_impl_adt_MF4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)public:_impl_adt_MM4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)}}_impl_adt_M4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)void match(matcher const& m){switch(kind_){_impl_adt_MS4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)}}private:
#define _impl_adt_K4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b) _impl_adt_K4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)V4b,
#define _impl_adt_D4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)_impl_adt_D4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)_impl_adt_real(T4b)V4b;
#define _impl_adt_MF4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b) _impl_adt_MF4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)std::function<void(T4b)>V4b##_;
#define _impl_adt_MM4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b) _impl_adt_MM4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)template<class T=T4b>void call_##V4b(_impl_adt_real(T4b)a)const{_call_func(V4b##_, a);}matcher& V4b(std::function<void(T4b)>f){V4b##_=f;return *this;}
#define _impl_adt_M4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b) _impl_adt_M4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)template<class T=T4b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4b(_impl_adt_real(T4b)const& t){NAME ret(kind::V4b);try{new(&ret.data_.V4b)T(t);}catch(...){std::terminate();}return ret;}template<class T=T4b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4b(_impl_adt_real(T4b)&& t){NAME ret(kind::V4b);try{new(&ret.data_.V4b)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T4b,class=std::enable_if_t<std::is_void<T>::value>>static NAME V4b(){NAME ret(kind::V4b);return ret;}
#define _impl_adt_MS4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b) _impl_adt_MS4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)case kind::V4b:m.call_##V4b(data_.V4b);break;
#define _impl_adt_Ds4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b) _impl_adt_Ds4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)case kind::V4b:data_.V4b.~decltype(data_.V4b)();break;
#define _impl_adt_Cc4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b) _impl_adt_Cc4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)case kind::V4b:new(&data_.V4b)decltype(data_.V4b)(a.data_.V4b);break;
#define _impl_adt_Mc4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b) _impl_adt_Mc4a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a)case kind::V4b:new(&data_.V4b)decltype(data_.V4b)(std::move(a.data_.V4b));break;
#define adt4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b) class NAME {public:enum class kind{_impl_adt_K4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)};private:kind kind_;union data{_impl_adt_D4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)}data_;public:class matcher{_impl_adt_MF4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)public:_impl_adt_MM4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)}}_impl_adt_M4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)void match(matcher const& m){switch(kind_){_impl_adt_MS4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)}}private:
#define _impl_adt_K4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c) _impl_adt_K4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)V4c,
#define _impl_adt_D4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)_impl_adt_D4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)_impl_adt_real(T4c)V4c;
#define _impl_adt_MF4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c) _impl_adt_MF4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)std::function<void(T4c)>V4c##_;
#define _impl_adt_MM4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c) _impl_adt_MM4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)template<class T=T4c>void call_##V4c(_impl_adt_real(T4c)a)const{_call_func(V4c##_, a);}matcher& V4c(std::function<void(T4c)>f){V4c##_=f;return *this;}
#define _impl_adt_M4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c) _impl_adt_M4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)template<class T=T4c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4c(_impl_adt_real(T4c)const& t){NAME ret(kind::V4c);try{new(&ret.data_.V4c)T(t);}catch(...){std::terminate();}return ret;}template<class T=T4c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4c(_impl_adt_real(T4c)&& t){NAME ret(kind::V4c);try{new(&ret.data_.V4c)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T4c,class=std::enable_if_t<std::is_void<T>::value>>static NAME V4c(){NAME ret(kind::V4c);return ret;}
#define _impl_adt_MS4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c) _impl_adt_MS4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)case kind::V4c:m.call_##V4c(data_.V4c);break;
#define _impl_adt_Ds4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c) _impl_adt_Ds4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)case kind::V4c:data_.V4c.~decltype(data_.V4c)();break;
#define _impl_adt_Cc4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c) _impl_adt_Cc4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)case kind::V4c:new(&data_.V4c)decltype(data_.V4c)(a.data_.V4c);break;
#define _impl_adt_Mc4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c) _impl_adt_Mc4b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b)case kind::V4c:new(&data_.V4c)decltype(data_.V4c)(std::move(a.data_.V4c));break;
#define adt4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c) class NAME {public:enum class kind{_impl_adt_K4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)};private:kind kind_;union data{_impl_adt_D4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)}data_;public:class matcher{_impl_adt_MF4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)public:_impl_adt_MM4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)}}_impl_adt_M4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)void match(matcher const& m){switch(kind_){_impl_adt_MS4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)}}private:
#define _impl_adt_K4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d) _impl_adt_K4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)V4d,
#define _impl_adt_D4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)_impl_adt_D4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)_impl_adt_real(T4d)V4d;
#define _impl_adt_MF4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d) _impl_adt_MF4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)std::function<void(T4d)>V4d##_;
#define _impl_adt_MM4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d) _impl_adt_MM4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)template<class T=T4d>void call_##V4d(_impl_adt_real(T4d)a)const{_call_func(V4d##_, a);}matcher& V4d(std::function<void(T4d)>f){V4d##_=f;return *this;}
#define _impl_adt_M4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d) _impl_adt_M4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)template<class T=T4d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4d(_impl_adt_real(T4d)const& t){NAME ret(kind::V4d);try{new(&ret.data_.V4d)T(t);}catch(...){std::terminate();}return ret;}template<class T=T4d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4d(_impl_adt_real(T4d)&& t){NAME ret(kind::V4d);try{new(&ret.data_.V4d)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T4d,class=std::enable_if_t<std::is_void<T>::value>>static NAME V4d(){NAME ret(kind::V4d);return ret;}
#define _impl_adt_MS4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d) _impl_adt_MS4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)case kind::V4d:m.call_##V4d(data_.V4d);break;
#define _impl_adt_Ds4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d) _impl_adt_Ds4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)case kind::V4d:data_.V4d.~decltype(data_.V4d)();break;
#define _impl_adt_Cc4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d) _impl_adt_Cc4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)case kind::V4d:new(&data_.V4d)decltype(data_.V4d)(a.data_.V4d);break;
#define _impl_adt_Mc4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d) _impl_adt_Mc4c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c)case kind::V4d:new(&data_.V4d)decltype(data_.V4d)(std::move(a.data_.V4d));break;
#define adt4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d) class NAME {public:enum class kind{_impl_adt_K4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)};private:kind kind_;union data{_impl_adt_D4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)}data_;public:class matcher{_impl_adt_MF4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)public:_impl_adt_MM4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)}}_impl_adt_M4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)void match(matcher const& m){switch(kind_){_impl_adt_MS4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)}}private:
#define _impl_adt_K4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e) _impl_adt_K4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)V4e,
#define _impl_adt_D4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)_impl_adt_D4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)_impl_adt_real(T4e)V4e;
#define _impl_adt_MF4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e) _impl_adt_MF4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)std::function<void(T4e)>V4e##_;
#define _impl_adt_MM4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e) _impl_adt_MM4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)template<class T=T4e>void call_##V4e(_impl_adt_real(T4e)a)const{_call_func(V4e##_, a);}matcher& V4e(std::function<void(T4e)>f){V4e##_=f;return *this;}
#define _impl_adt_M4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e) _impl_adt_M4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)template<class T=T4e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4e(_impl_adt_real(T4e)const& t){NAME ret(kind::V4e);try{new(&ret.data_.V4e)T(t);}catch(...){std::terminate();}return ret;}template<class T=T4e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4e(_impl_adt_real(T4e)&& t){NAME ret(kind::V4e);try{new(&ret.data_.V4e)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T4e,class=std::enable_if_t<std::is_void<T>::value>>static NAME V4e(){NAME ret(kind::V4e);return ret;}
#define _impl_adt_MS4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e) _impl_adt_MS4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)case kind::V4e:m.call_##V4e(data_.V4e);break;
#define _impl_adt_Ds4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e) _impl_adt_Ds4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)case kind::V4e:data_.V4e.~decltype(data_.V4e)();break;
#define _impl_adt_Cc4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e) _impl_adt_Cc4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)case kind::V4e:new(&data_.V4e)decltype(data_.V4e)(a.data_.V4e);break;
#define _impl_adt_Mc4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e) _impl_adt_Mc4d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d)case kind::V4e:new(&data_.V4e)decltype(data_.V4e)(std::move(a.data_.V4e));break;
#define adt4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e) class NAME {public:enum class kind{_impl_adt_K4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)};private:kind kind_;union data{_impl_adt_D4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)}data_;public:class matcher{_impl_adt_MF4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)public:_impl_adt_MM4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)}}_impl_adt_M4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)void match(matcher const& m){switch(kind_){_impl_adt_MS4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)}}private:
#define _impl_adt_K4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f) _impl_adt_K4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)V4f,
#define _impl_adt_D4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)_impl_adt_D4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)_impl_adt_real(T4f)V4f;
#define _impl_adt_MF4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f) _impl_adt_MF4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)std::function<void(T4f)>V4f##_;
#define _impl_adt_MM4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f) _impl_adt_MM4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)template<class T=T4f>void call_##V4f(_impl_adt_real(T4f)a)const{_call_func(V4f##_, a);}matcher& V4f(std::function<void(T4f)>f){V4f##_=f;return *this;}
#define _impl_adt_M4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f) _impl_adt_M4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)template<class T=T4f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4f(_impl_adt_real(T4f)const& t){NAME ret(kind::V4f);try{new(&ret.data_.V4f)T(t);}catch(...){std::terminate();}return ret;}template<class T=T4f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V4f(_impl_adt_real(T4f)&& t){NAME ret(kind::V4f);try{new(&ret.data_.V4f)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T4f,class=std::enable_if_t<std::is_void<T>::value>>static NAME V4f(){NAME ret(kind::V4f);return ret;}
#define _impl_adt_MS4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f) _impl_adt_MS4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)case kind::V4f:m.call_##V4f(data_.V4f);break;
#define _impl_adt_Ds4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f) _impl_adt_Ds4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)case kind::V4f:data_.V4f.~decltype(data_.V4f)();break;
#define _impl_adt_Cc4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f) _impl_adt_Cc4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)case kind::V4f:new(&data_.V4f)decltype(data_.V4f)(a.data_.V4f);break;
#define _impl_adt_Mc4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f) _impl_adt_Mc4e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e)case kind::V4f:new(&data_.V4f)decltype(data_.V4f)(std::move(a.data_.V4f));break;
#define adt4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f) class NAME {public:enum class kind{_impl_adt_K4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)};private:kind kind_;union data{_impl_adt_D4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)}data_;public:class matcher{_impl_adt_MF4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)public:_impl_adt_MM4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)}}_impl_adt_M4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)void match(matcher const& m){switch(kind_){_impl_adt_MS4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)}}private:
#define _impl_adt_K50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50) _impl_adt_K4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)V50,
#define _impl_adt_D50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)_impl_adt_D4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)_impl_adt_real(T50)V50;
#define _impl_adt_MF50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50) _impl_adt_MF4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)std::function<void(T50)>V50##_;
#define _impl_adt_MM50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50) _impl_adt_MM4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)template<class T=T50>void call_##V50(_impl_adt_real(T50)a)const{_call_func(V50##_, a);}matcher& V50(std::function<void(T50)>f){V50##_=f;return *this;}
#define _impl_adt_M50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50) _impl_adt_M4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)template<class T=T50,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V50(_impl_adt_real(T50)const& t){NAME ret(kind::V50);try{new(&ret.data_.V50)T(t);}catch(...){std::terminate();}return ret;}template<class T=T50,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V50(_impl_adt_real(T50)&& t){NAME ret(kind::V50);try{new(&ret.data_.V50)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T50,class=std::enable_if_t<std::is_void<T>::value>>static NAME V50(){NAME ret(kind::V50);return ret;}
#define _impl_adt_MS50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50) _impl_adt_MS4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)case kind::V50:m.call_##V50(data_.V50);break;
#define _impl_adt_Ds50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50) _impl_adt_Ds4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)case kind::V50:data_.V50.~decltype(data_.V50)();break;
#define _impl_adt_Cc50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50) _impl_adt_Cc4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)case kind::V50:new(&data_.V50)decltype(data_.V50)(a.data_.V50);break;
#define _impl_adt_Mc50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50) _impl_adt_Mc4f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f)case kind::V50:new(&data_.V50)decltype(data_.V50)(std::move(a.data_.V50));break;
#define adt50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50) class NAME {public:enum class kind{_impl_adt_K50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)};private:kind kind_;union data{_impl_adt_D50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)}data_;public:class matcher{_impl_adt_MF50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)public:_impl_adt_MM50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)}}_impl_adt_M50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)void match(matcher const& m){switch(kind_){_impl_adt_MS50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)}}private:
#define _impl_adt_K51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51) _impl_adt_K50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)V51,
#define _impl_adt_D51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)_impl_adt_D50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)_impl_adt_real(T51)V51;
#define _impl_adt_MF51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51) _impl_adt_MF50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)std::function<void(T51)>V51##_;
#define _impl_adt_MM51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51) _impl_adt_MM50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)template<class T=T51>void call_##V51(_impl_adt_real(T51)a)const{_call_func(V51##_, a);}matcher& V51(std::function<void(T51)>f){V51##_=f;return *this;}
#define _impl_adt_M51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51) _impl_adt_M50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)template<class T=T51,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V51(_impl_adt_real(T51)const& t){NAME ret(kind::V51);try{new(&ret.data_.V51)T(t);}catch(...){std::terminate();}return ret;}template<class T=T51,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V51(_impl_adt_real(T51)&& t){NAME ret(kind::V51);try{new(&ret.data_.V51)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T51,class=std::enable_if_t<std::is_void<T>::value>>static NAME V51(){NAME ret(kind::V51);return ret;}
#define _impl_adt_MS51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51) _impl_adt_MS50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)case kind::V51:m.call_##V51(data_.V51);break;
#define _impl_adt_Ds51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51) _impl_adt_Ds50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)case kind::V51:data_.V51.~decltype(data_.V51)();break;
#define _impl_adt_Cc51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51) _impl_adt_Cc50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)case kind::V51:new(&data_.V51)decltype(data_.V51)(a.data_.V51);break;
#define _impl_adt_Mc51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51) _impl_adt_Mc50(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50)case kind::V51:new(&data_.V51)decltype(data_.V51)(std::move(a.data_.V51));break;
#define adt51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51) class NAME {public:enum class kind{_impl_adt_K51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)};private:kind kind_;union data{_impl_adt_D51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)}data_;public:class matcher{_impl_adt_MF51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)public:_impl_adt_MM51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)}}_impl_adt_M51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)void match(matcher const& m){switch(kind_){_impl_adt_MS51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)}}private:
#define _impl_adt_K52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52) _impl_adt_K51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)V52,
#define _impl_adt_D52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)_impl_adt_D51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)_impl_adt_real(T52)V52;
#define _impl_adt_MF52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52) _impl_adt_MF51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)std::function<void(T52)>V52##_;
#define _impl_adt_MM52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52) _impl_adt_MM51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)template<class T=T52>void call_##V52(_impl_adt_real(T52)a)const{_call_func(V52##_, a);}matcher& V52(std::function<void(T52)>f){V52##_=f;return *this;}
#define _impl_adt_M52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52) _impl_adt_M51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)template<class T=T52,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V52(_impl_adt_real(T52)const& t){NAME ret(kind::V52);try{new(&ret.data_.V52)T(t);}catch(...){std::terminate();}return ret;}template<class T=T52,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V52(_impl_adt_real(T52)&& t){NAME ret(kind::V52);try{new(&ret.data_.V52)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T52,class=std::enable_if_t<std::is_void<T>::value>>static NAME V52(){NAME ret(kind::V52);return ret;}
#define _impl_adt_MS52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52) _impl_adt_MS51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)case kind::V52:m.call_##V52(data_.V52);break;
#define _impl_adt_Ds52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52) _impl_adt_Ds51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)case kind::V52:data_.V52.~decltype(data_.V52)();break;
#define _impl_adt_Cc52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52) _impl_adt_Cc51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)case kind::V52:new(&data_.V52)decltype(data_.V52)(a.data_.V52);break;
#define _impl_adt_Mc52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52) _impl_adt_Mc51(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51)case kind::V52:new(&data_.V52)decltype(data_.V52)(std::move(a.data_.V52));break;
#define adt52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52) class NAME {public:enum class kind{_impl_adt_K52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)};private:kind kind_;union data{_impl_adt_D52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)}data_;public:class matcher{_impl_adt_MF52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)public:_impl_adt_MM52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)}}_impl_adt_M52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)void match(matcher const& m){switch(kind_){_impl_adt_MS52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)}}private:
#define _impl_adt_K53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53) _impl_adt_K52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)V53,
#define _impl_adt_D53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)_impl_adt_D52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)_impl_adt_real(T53)V53;
#define _impl_adt_MF53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53) _impl_adt_MF52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)std::function<void(T53)>V53##_;
#define _impl_adt_MM53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53) _impl_adt_MM52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)template<class T=T53>void call_##V53(_impl_adt_real(T53)a)const{_call_func(V53##_, a);}matcher& V53(std::function<void(T53)>f){V53##_=f;return *this;}
#define _impl_adt_M53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53) _impl_adt_M52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)template<class T=T53,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V53(_impl_adt_real(T53)const& t){NAME ret(kind::V53);try{new(&ret.data_.V53)T(t);}catch(...){std::terminate();}return ret;}template<class T=T53,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V53(_impl_adt_real(T53)&& t){NAME ret(kind::V53);try{new(&ret.data_.V53)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T53,class=std::enable_if_t<std::is_void<T>::value>>static NAME V53(){NAME ret(kind::V53);return ret;}
#define _impl_adt_MS53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53) _impl_adt_MS52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)case kind::V53:m.call_##V53(data_.V53);break;
#define _impl_adt_Ds53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53) _impl_adt_Ds52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)case kind::V53:data_.V53.~decltype(data_.V53)();break;
#define _impl_adt_Cc53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53) _impl_adt_Cc52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)case kind::V53:new(&data_.V53)decltype(data_.V53)(a.data_.V53);break;
#define _impl_adt_Mc53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53) _impl_adt_Mc52(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52)case kind::V53:new(&data_.V53)decltype(data_.V53)(std::move(a.data_.V53));break;
#define adt53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53) class NAME {public:enum class kind{_impl_adt_K53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)};private:kind kind_;union data{_impl_adt_D53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)}data_;public:class matcher{_impl_adt_MF53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)public:_impl_adt_MM53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)}}_impl_adt_M53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)void match(matcher const& m){switch(kind_){_impl_adt_MS53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)}}private:
#define _impl_adt_K54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54) _impl_adt_K53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)V54,
#define _impl_adt_D54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)_impl_adt_D53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)_impl_adt_real(T54)V54;
#define _impl_adt_MF54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54) _impl_adt_MF53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)std::function<void(T54)>V54##_;
#define _impl_adt_MM54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54) _impl_adt_MM53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)template<class T=T54>void call_##V54(_impl_adt_real(T54)a)const{_call_func(V54##_, a);}matcher& V54(std::function<void(T54)>f){V54##_=f;return *this;}
#define _impl_adt_M54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54) _impl_adt_M53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)template<class T=T54,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V54(_impl_adt_real(T54)const& t){NAME ret(kind::V54);try{new(&ret.data_.V54)T(t);}catch(...){std::terminate();}return ret;}template<class T=T54,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V54(_impl_adt_real(T54)&& t){NAME ret(kind::V54);try{new(&ret.data_.V54)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T54,class=std::enable_if_t<std::is_void<T>::value>>static NAME V54(){NAME ret(kind::V54);return ret;}
#define _impl_adt_MS54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54) _impl_adt_MS53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)case kind::V54:m.call_##V54(data_.V54);break;
#define _impl_adt_Ds54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54) _impl_adt_Ds53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)case kind::V54:data_.V54.~decltype(data_.V54)();break;
#define _impl_adt_Cc54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54) _impl_adt_Cc53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)case kind::V54:new(&data_.V54)decltype(data_.V54)(a.data_.V54);break;
#define _impl_adt_Mc54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54) _impl_adt_Mc53(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53)case kind::V54:new(&data_.V54)decltype(data_.V54)(std::move(a.data_.V54));break;
#define adt54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54) class NAME {public:enum class kind{_impl_adt_K54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)};private:kind kind_;union data{_impl_adt_D54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)}data_;public:class matcher{_impl_adt_MF54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)public:_impl_adt_MM54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)}}_impl_adt_M54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)void match(matcher const& m){switch(kind_){_impl_adt_MS54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)}}private:
#define _impl_adt_K55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55) _impl_adt_K54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)V55,
#define _impl_adt_D55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)_impl_adt_D54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)_impl_adt_real(T55)V55;
#define _impl_adt_MF55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55) _impl_adt_MF54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)std::function<void(T55)>V55##_;
#define _impl_adt_MM55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55) _impl_adt_MM54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)template<class T=T55>void call_##V55(_impl_adt_real(T55)a)const{_call_func(V55##_, a);}matcher& V55(std::function<void(T55)>f){V55##_=f;return *this;}
#define _impl_adt_M55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55) _impl_adt_M54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)template<class T=T55,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V55(_impl_adt_real(T55)const& t){NAME ret(kind::V55);try{new(&ret.data_.V55)T(t);}catch(...){std::terminate();}return ret;}template<class T=T55,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V55(_impl_adt_real(T55)&& t){NAME ret(kind::V55);try{new(&ret.data_.V55)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T55,class=std::enable_if_t<std::is_void<T>::value>>static NAME V55(){NAME ret(kind::V55);return ret;}
#define _impl_adt_MS55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55) _impl_adt_MS54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)case kind::V55:m.call_##V55(data_.V55);break;
#define _impl_adt_Ds55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55) _impl_adt_Ds54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)case kind::V55:data_.V55.~decltype(data_.V55)();break;
#define _impl_adt_Cc55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55) _impl_adt_Cc54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)case kind::V55:new(&data_.V55)decltype(data_.V55)(a.data_.V55);break;
#define _impl_adt_Mc55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55) _impl_adt_Mc54(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54)case kind::V55:new(&data_.V55)decltype(data_.V55)(std::move(a.data_.V55));break;
#define adt55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55) class NAME {public:enum class kind{_impl_adt_K55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)};private:kind kind_;union data{_impl_adt_D55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)}data_;public:class matcher{_impl_adt_MF55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)public:_impl_adt_MM55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)}}_impl_adt_M55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)void match(matcher const& m){switch(kind_){_impl_adt_MS55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)}}private:
#define _impl_adt_K56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56) _impl_adt_K55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)V56,
#define _impl_adt_D56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)_impl_adt_D55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)_impl_adt_real(T56)V56;
#define _impl_adt_MF56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56) _impl_adt_MF55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)std::function<void(T56)>V56##_;
#define _impl_adt_MM56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56) _impl_adt_MM55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)template<class T=T56>void call_##V56(_impl_adt_real(T56)a)const{_call_func(V56##_, a);}matcher& V56(std::function<void(T56)>f){V56##_=f;return *this;}
#define _impl_adt_M56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56) _impl_adt_M55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)template<class T=T56,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V56(_impl_adt_real(T56)const& t){NAME ret(kind::V56);try{new(&ret.data_.V56)T(t);}catch(...){std::terminate();}return ret;}template<class T=T56,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V56(_impl_adt_real(T56)&& t){NAME ret(kind::V56);try{new(&ret.data_.V56)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T56,class=std::enable_if_t<std::is_void<T>::value>>static NAME V56(){NAME ret(kind::V56);return ret;}
#define _impl_adt_MS56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56) _impl_adt_MS55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)case kind::V56:m.call_##V56(data_.V56);break;
#define _impl_adt_Ds56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56) _impl_adt_Ds55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)case kind::V56:data_.V56.~decltype(data_.V56)();break;
#define _impl_adt_Cc56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56) _impl_adt_Cc55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)case kind::V56:new(&data_.V56)decltype(data_.V56)(a.data_.V56);break;
#define _impl_adt_Mc56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56) _impl_adt_Mc55(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55)case kind::V56:new(&data_.V56)decltype(data_.V56)(std::move(a.data_.V56));break;
#define adt56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56) class NAME {public:enum class kind{_impl_adt_K56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)};private:kind kind_;union data{_impl_adt_D56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)}data_;public:class matcher{_impl_adt_MF56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)public:_impl_adt_MM56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)}}_impl_adt_M56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)void match(matcher const& m){switch(kind_){_impl_adt_MS56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)}}private:
#define _impl_adt_K57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57) _impl_adt_K56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)V57,
#define _impl_adt_D57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)_impl_adt_D56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)_impl_adt_real(T57)V57;
#define _impl_adt_MF57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57) _impl_adt_MF56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)std::function<void(T57)>V57##_;
#define _impl_adt_MM57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57) _impl_adt_MM56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)template<class T=T57>void call_##V57(_impl_adt_real(T57)a)const{_call_func(V57##_, a);}matcher& V57(std::function<void(T57)>f){V57##_=f;return *this;}
#define _impl_adt_M57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57) _impl_adt_M56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)template<class T=T57,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V57(_impl_adt_real(T57)const& t){NAME ret(kind::V57);try{new(&ret.data_.V57)T(t);}catch(...){std::terminate();}return ret;}template<class T=T57,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V57(_impl_adt_real(T57)&& t){NAME ret(kind::V57);try{new(&ret.data_.V57)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T57,class=std::enable_if_t<std::is_void<T>::value>>static NAME V57(){NAME ret(kind::V57);return ret;}
#define _impl_adt_MS57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57) _impl_adt_MS56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)case kind::V57:m.call_##V57(data_.V57);break;
#define _impl_adt_Ds57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57) _impl_adt_Ds56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)case kind::V57:data_.V57.~decltype(data_.V57)();break;
#define _impl_adt_Cc57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57) _impl_adt_Cc56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)case kind::V57:new(&data_.V57)decltype(data_.V57)(a.data_.V57);break;
#define _impl_adt_Mc57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57) _impl_adt_Mc56(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56)case kind::V57:new(&data_.V57)decltype(data_.V57)(std::move(a.data_.V57));break;
#define adt57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57) class NAME {public:enum class kind{_impl_adt_K57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)};private:kind kind_;union data{_impl_adt_D57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)}data_;public:class matcher{_impl_adt_MF57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)public:_impl_adt_MM57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)}}_impl_adt_M57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)void match(matcher const& m){switch(kind_){_impl_adt_MS57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)}}private:
#define _impl_adt_K58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58) _impl_adt_K57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)V58,
#define _impl_adt_D58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)_impl_adt_D57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)_impl_adt_real(T58)V58;
#define _impl_adt_MF58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58) _impl_adt_MF57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)std::function<void(T58)>V58##_;
#define _impl_adt_MM58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58) _impl_adt_MM57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)template<class T=T58>void call_##V58(_impl_adt_real(T58)a)const{_call_func(V58##_, a);}matcher& V58(std::function<void(T58)>f){V58##_=f;return *this;}
#define _impl_adt_M58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58) _impl_adt_M57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)template<class T=T58,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V58(_impl_adt_real(T58)const& t){NAME ret(kind::V58);try{new(&ret.data_.V58)T(t);}catch(...){std::terminate();}return ret;}template<class T=T58,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V58(_impl_adt_real(T58)&& t){NAME ret(kind::V58);try{new(&ret.data_.V58)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T58,class=std::enable_if_t<std::is_void<T>::value>>static NAME V58(){NAME ret(kind::V58);return ret;}
#define _impl_adt_MS58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58) _impl_adt_MS57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)case kind::V58:m.call_##V58(data_.V58);break;
#define _impl_adt_Ds58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58) _impl_adt_Ds57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)case kind::V58:data_.V58.~decltype(data_.V58)();break;
#define _impl_adt_Cc58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58) _impl_adt_Cc57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)case kind::V58:new(&data_.V58)decltype(data_.V58)(a.data_.V58);break;
#define _impl_adt_Mc58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58) _impl_adt_Mc57(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57)case kind::V58:new(&data_.V58)decltype(data_.V58)(std::move(a.data_.V58));break;
#define adt58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58) class NAME {public:enum class kind{_impl_adt_K58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)};private:kind kind_;union data{_impl_adt_D58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)}data_;public:class matcher{_impl_adt_MF58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)public:_impl_adt_MM58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)}}_impl_adt_M58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)void match(matcher const& m){switch(kind_){_impl_adt_MS58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)}}private:
#define _impl_adt_K59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59) _impl_adt_K58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)V59,
#define _impl_adt_D59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)_impl_adt_D58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)_impl_adt_real(T59)V59;
#define _impl_adt_MF59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59) _impl_adt_MF58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)std::function<void(T59)>V59##_;
#define _impl_adt_MM59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59) _impl_adt_MM58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)template<class T=T59>void call_##V59(_impl_adt_real(T59)a)const{_call_func(V59##_, a);}matcher& V59(std::function<void(T59)>f){V59##_=f;return *this;}
#define _impl_adt_M59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59) _impl_adt_M58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)template<class T=T59,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V59(_impl_adt_real(T59)const& t){NAME ret(kind::V59);try{new(&ret.data_.V59)T(t);}catch(...){std::terminate();}return ret;}template<class T=T59,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V59(_impl_adt_real(T59)&& t){NAME ret(kind::V59);try{new(&ret.data_.V59)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T59,class=std::enable_if_t<std::is_void<T>::value>>static NAME V59(){NAME ret(kind::V59);return ret;}
#define _impl_adt_MS59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59) _impl_adt_MS58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)case kind::V59:m.call_##V59(data_.V59);break;
#define _impl_adt_Ds59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59) _impl_adt_Ds58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)case kind::V59:data_.V59.~decltype(data_.V59)();break;
#define _impl_adt_Cc59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59) _impl_adt_Cc58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)case kind::V59:new(&data_.V59)decltype(data_.V59)(a.data_.V59);break;
#define _impl_adt_Mc59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59) _impl_adt_Mc58(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58)case kind::V59:new(&data_.V59)decltype(data_.V59)(std::move(a.data_.V59));break;
#define adt59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59) class NAME {public:enum class kind{_impl_adt_K59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)};private:kind kind_;union data{_impl_adt_D59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)}data_;public:class matcher{_impl_adt_MF59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)public:_impl_adt_MM59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)}}_impl_adt_M59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)void match(matcher const& m){switch(kind_){_impl_adt_MS59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)}}private:
#define _impl_adt_K5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a) _impl_adt_K59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)V5a,
#define _impl_adt_D5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)_impl_adt_D59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)_impl_adt_real(T5a)V5a;
#define _impl_adt_MF5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a) _impl_adt_MF59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)std::function<void(T5a)>V5a##_;
#define _impl_adt_MM5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a) _impl_adt_MM59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)template<class T=T5a>void call_##V5a(_impl_adt_real(T5a)a)const{_call_func(V5a##_, a);}matcher& V5a(std::function<void(T5a)>f){V5a##_=f;return *this;}
#define _impl_adt_M5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a) _impl_adt_M59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)template<class T=T5a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5a(_impl_adt_real(T5a)const& t){NAME ret(kind::V5a);try{new(&ret.data_.V5a)T(t);}catch(...){std::terminate();}return ret;}template<class T=T5a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5a(_impl_adt_real(T5a)&& t){NAME ret(kind::V5a);try{new(&ret.data_.V5a)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T5a,class=std::enable_if_t<std::is_void<T>::value>>static NAME V5a(){NAME ret(kind::V5a);return ret;}
#define _impl_adt_MS5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a) _impl_adt_MS59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)case kind::V5a:m.call_##V5a(data_.V5a);break;
#define _impl_adt_Ds5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a) _impl_adt_Ds59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)case kind::V5a:data_.V5a.~decltype(data_.V5a)();break;
#define _impl_adt_Cc5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a) _impl_adt_Cc59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)case kind::V5a:new(&data_.V5a)decltype(data_.V5a)(a.data_.V5a);break;
#define _impl_adt_Mc5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a) _impl_adt_Mc59(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59)case kind::V5a:new(&data_.V5a)decltype(data_.V5a)(std::move(a.data_.V5a));break;
#define adt5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a) class NAME {public:enum class kind{_impl_adt_K5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)};private:kind kind_;union data{_impl_adt_D5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)}data_;public:class matcher{_impl_adt_MF5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)public:_impl_adt_MM5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)}}_impl_adt_M5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)void match(matcher const& m){switch(kind_){_impl_adt_MS5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)}}private:
#define _impl_adt_K5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b) _impl_adt_K5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)V5b,
#define _impl_adt_D5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)_impl_adt_D5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)_impl_adt_real(T5b)V5b;
#define _impl_adt_MF5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b) _impl_adt_MF5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)std::function<void(T5b)>V5b##_;
#define _impl_adt_MM5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b) _impl_adt_MM5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)template<class T=T5b>void call_##V5b(_impl_adt_real(T5b)a)const{_call_func(V5b##_, a);}matcher& V5b(std::function<void(T5b)>f){V5b##_=f;return *this;}
#define _impl_adt_M5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b) _impl_adt_M5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)template<class T=T5b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5b(_impl_adt_real(T5b)const& t){NAME ret(kind::V5b);try{new(&ret.data_.V5b)T(t);}catch(...){std::terminate();}return ret;}template<class T=T5b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5b(_impl_adt_real(T5b)&& t){NAME ret(kind::V5b);try{new(&ret.data_.V5b)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T5b,class=std::enable_if_t<std::is_void<T>::value>>static NAME V5b(){NAME ret(kind::V5b);return ret;}
#define _impl_adt_MS5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b) _impl_adt_MS5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)case kind::V5b:m.call_##V5b(data_.V5b);break;
#define _impl_adt_Ds5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b) _impl_adt_Ds5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)case kind::V5b:data_.V5b.~decltype(data_.V5b)();break;
#define _impl_adt_Cc5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b) _impl_adt_Cc5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)case kind::V5b:new(&data_.V5b)decltype(data_.V5b)(a.data_.V5b);break;
#define _impl_adt_Mc5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b) _impl_adt_Mc5a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a)case kind::V5b:new(&data_.V5b)decltype(data_.V5b)(std::move(a.data_.V5b));break;
#define adt5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b) class NAME {public:enum class kind{_impl_adt_K5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)};private:kind kind_;union data{_impl_adt_D5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)}data_;public:class matcher{_impl_adt_MF5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)public:_impl_adt_MM5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)}}_impl_adt_M5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)void match(matcher const& m){switch(kind_){_impl_adt_MS5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)}}private:
#define _impl_adt_K5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c) _impl_adt_K5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)V5c,
#define _impl_adt_D5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)_impl_adt_D5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)_impl_adt_real(T5c)V5c;
#define _impl_adt_MF5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c) _impl_adt_MF5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)std::function<void(T5c)>V5c##_;
#define _impl_adt_MM5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c) _impl_adt_MM5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)template<class T=T5c>void call_##V5c(_impl_adt_real(T5c)a)const{_call_func(V5c##_, a);}matcher& V5c(std::function<void(T5c)>f){V5c##_=f;return *this;}
#define _impl_adt_M5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c) _impl_adt_M5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)template<class T=T5c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5c(_impl_adt_real(T5c)const& t){NAME ret(kind::V5c);try{new(&ret.data_.V5c)T(t);}catch(...){std::terminate();}return ret;}template<class T=T5c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5c(_impl_adt_real(T5c)&& t){NAME ret(kind::V5c);try{new(&ret.data_.V5c)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T5c,class=std::enable_if_t<std::is_void<T>::value>>static NAME V5c(){NAME ret(kind::V5c);return ret;}
#define _impl_adt_MS5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c) _impl_adt_MS5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)case kind::V5c:m.call_##V5c(data_.V5c);break;
#define _impl_adt_Ds5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c) _impl_adt_Ds5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)case kind::V5c:data_.V5c.~decltype(data_.V5c)();break;
#define _impl_adt_Cc5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c) _impl_adt_Cc5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)case kind::V5c:new(&data_.V5c)decltype(data_.V5c)(a.data_.V5c);break;
#define _impl_adt_Mc5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c) _impl_adt_Mc5b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b)case kind::V5c:new(&data_.V5c)decltype(data_.V5c)(std::move(a.data_.V5c));break;
#define adt5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c) class NAME {public:enum class kind{_impl_adt_K5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)};private:kind kind_;union data{_impl_adt_D5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)}data_;public:class matcher{_impl_adt_MF5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)public:_impl_adt_MM5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)}}_impl_adt_M5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)void match(matcher const& m){switch(kind_){_impl_adt_MS5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)}}private:
#define _impl_adt_K5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d) _impl_adt_K5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)V5d,
#define _impl_adt_D5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)_impl_adt_D5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)_impl_adt_real(T5d)V5d;
#define _impl_adt_MF5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d) _impl_adt_MF5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)std::function<void(T5d)>V5d##_;
#define _impl_adt_MM5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d) _impl_adt_MM5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)template<class T=T5d>void call_##V5d(_impl_adt_real(T5d)a)const{_call_func(V5d##_, a);}matcher& V5d(std::function<void(T5d)>f){V5d##_=f;return *this;}
#define _impl_adt_M5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d) _impl_adt_M5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)template<class T=T5d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5d(_impl_adt_real(T5d)const& t){NAME ret(kind::V5d);try{new(&ret.data_.V5d)T(t);}catch(...){std::terminate();}return ret;}template<class T=T5d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5d(_impl_adt_real(T5d)&& t){NAME ret(kind::V5d);try{new(&ret.data_.V5d)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T5d,class=std::enable_if_t<std::is_void<T>::value>>static NAME V5d(){NAME ret(kind::V5d);return ret;}
#define _impl_adt_MS5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d) _impl_adt_MS5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)case kind::V5d:m.call_##V5d(data_.V5d);break;
#define _impl_adt_Ds5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d) _impl_adt_Ds5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)case kind::V5d:data_.V5d.~decltype(data_.V5d)();break;
#define _impl_adt_Cc5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d) _impl_adt_Cc5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)case kind::V5d:new(&data_.V5d)decltype(data_.V5d)(a.data_.V5d);break;
#define _impl_adt_Mc5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d) _impl_adt_Mc5c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c)case kind::V5d:new(&data_.V5d)decltype(data_.V5d)(std::move(a.data_.V5d));break;
#define adt5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d) class NAME {public:enum class kind{_impl_adt_K5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)};private:kind kind_;union data{_impl_adt_D5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)}data_;public:class matcher{_impl_adt_MF5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)public:_impl_adt_MM5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)}}_impl_adt_M5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)void match(matcher const& m){switch(kind_){_impl_adt_MS5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)}}private:
#define _impl_adt_K5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e) _impl_adt_K5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)V5e,
#define _impl_adt_D5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)_impl_adt_D5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)_impl_adt_real(T5e)V5e;
#define _impl_adt_MF5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e) _impl_adt_MF5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)std::function<void(T5e)>V5e##_;
#define _impl_adt_MM5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e) _impl_adt_MM5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)template<class T=T5e>void call_##V5e(_impl_adt_real(T5e)a)const{_call_func(V5e##_, a);}matcher& V5e(std::function<void(T5e)>f){V5e##_=f;return *this;}
#define _impl_adt_M5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e) _impl_adt_M5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)template<class T=T5e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5e(_impl_adt_real(T5e)const& t){NAME ret(kind::V5e);try{new(&ret.data_.V5e)T(t);}catch(...){std::terminate();}return ret;}template<class T=T5e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5e(_impl_adt_real(T5e)&& t){NAME ret(kind::V5e);try{new(&ret.data_.V5e)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T5e,class=std::enable_if_t<std::is_void<T>::value>>static NAME V5e(){NAME ret(kind::V5e);return ret;}
#define _impl_adt_MS5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e) _impl_adt_MS5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)case kind::V5e:m.call_##V5e(data_.V5e);break;
#define _impl_adt_Ds5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e) _impl_adt_Ds5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)case kind::V5e:data_.V5e.~decltype(data_.V5e)();break;
#define _impl_adt_Cc5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e) _impl_adt_Cc5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)case kind::V5e:new(&data_.V5e)decltype(data_.V5e)(a.data_.V5e);break;
#define _impl_adt_Mc5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e) _impl_adt_Mc5d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d)case kind::V5e:new(&data_.V5e)decltype(data_.V5e)(std::move(a.data_.V5e));break;
#define adt5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e) class NAME {public:enum class kind{_impl_adt_K5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)};private:kind kind_;union data{_impl_adt_D5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)}data_;public:class matcher{_impl_adt_MF5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)public:_impl_adt_MM5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)}}_impl_adt_M5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)void match(matcher const& m){switch(kind_){_impl_adt_MS5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)}}private:
#define _impl_adt_K5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f) _impl_adt_K5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)V5f,
#define _impl_adt_D5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)_impl_adt_D5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)_impl_adt_real(T5f)V5f;
#define _impl_adt_MF5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f) _impl_adt_MF5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)std::function<void(T5f)>V5f##_;
#define _impl_adt_MM5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f) _impl_adt_MM5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)template<class T=T5f>void call_##V5f(_impl_adt_real(T5f)a)const{_call_func(V5f##_, a);}matcher& V5f(std::function<void(T5f)>f){V5f##_=f;return *this;}
#define _impl_adt_M5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f) _impl_adt_M5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)template<class T=T5f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5f(_impl_adt_real(T5f)const& t){NAME ret(kind::V5f);try{new(&ret.data_.V5f)T(t);}catch(...){std::terminate();}return ret;}template<class T=T5f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V5f(_impl_adt_real(T5f)&& t){NAME ret(kind::V5f);try{new(&ret.data_.V5f)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T5f,class=std::enable_if_t<std::is_void<T>::value>>static NAME V5f(){NAME ret(kind::V5f);return ret;}
#define _impl_adt_MS5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f) _impl_adt_MS5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)case kind::V5f:m.call_##V5f(data_.V5f);break;
#define _impl_adt_Ds5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f) _impl_adt_Ds5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)case kind::V5f:data_.V5f.~decltype(data_.V5f)();break;
#define _impl_adt_Cc5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f) _impl_adt_Cc5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)case kind::V5f:new(&data_.V5f)decltype(data_.V5f)(a.data_.V5f);break;
#define _impl_adt_Mc5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f) _impl_adt_Mc5e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e)case kind::V5f:new(&data_.V5f)decltype(data_.V5f)(std::move(a.data_.V5f));break;
#define adt5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f) class NAME {public:enum class kind{_impl_adt_K5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)};private:kind kind_;union data{_impl_adt_D5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)}data_;public:class matcher{_impl_adt_MF5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)public:_impl_adt_MM5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)}}_impl_adt_M5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)void match(matcher const& m){switch(kind_){_impl_adt_MS5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)}}private:
#define _impl_adt_K60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60) _impl_adt_K5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)V60,
#define _impl_adt_D60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)_impl_adt_D5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)_impl_adt_real(T60)V60;
#define _impl_adt_MF60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60) _impl_adt_MF5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)std::function<void(T60)>V60##_;
#define _impl_adt_MM60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60) _impl_adt_MM5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)template<class T=T60>void call_##V60(_impl_adt_real(T60)a)const{_call_func(V60##_, a);}matcher& V60(std::function<void(T60)>f){V60##_=f;return *this;}
#define _impl_adt_M60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60) _impl_adt_M5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)template<class T=T60,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V60(_impl_adt_real(T60)const& t){NAME ret(kind::V60);try{new(&ret.data_.V60)T(t);}catch(...){std::terminate();}return ret;}template<class T=T60,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V60(_impl_adt_real(T60)&& t){NAME ret(kind::V60);try{new(&ret.data_.V60)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T60,class=std::enable_if_t<std::is_void<T>::value>>static NAME V60(){NAME ret(kind::V60);return ret;}
#define _impl_adt_MS60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60) _impl_adt_MS5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)case kind::V60:m.call_##V60(data_.V60);break;
#define _impl_adt_Ds60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60) _impl_adt_Ds5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)case kind::V60:data_.V60.~decltype(data_.V60)();break;
#define _impl_adt_Cc60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60) _impl_adt_Cc5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)case kind::V60:new(&data_.V60)decltype(data_.V60)(a.data_.V60);break;
#define _impl_adt_Mc60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60) _impl_adt_Mc5f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f)case kind::V60:new(&data_.V60)decltype(data_.V60)(std::move(a.data_.V60));break;
#define adt60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60) class NAME {public:enum class kind{_impl_adt_K60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)};private:kind kind_;union data{_impl_adt_D60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)}data_;public:class matcher{_impl_adt_MF60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)public:_impl_adt_MM60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)}}_impl_adt_M60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)void match(matcher const& m){switch(kind_){_impl_adt_MS60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)}}private:
#define _impl_adt_K61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61) _impl_adt_K60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)V61,
#define _impl_adt_D61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)_impl_adt_D60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)_impl_adt_real(T61)V61;
#define _impl_adt_MF61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61) _impl_adt_MF60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)std::function<void(T61)>V61##_;
#define _impl_adt_MM61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61) _impl_adt_MM60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)template<class T=T61>void call_##V61(_impl_adt_real(T61)a)const{_call_func(V61##_, a);}matcher& V61(std::function<void(T61)>f){V61##_=f;return *this;}
#define _impl_adt_M61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61) _impl_adt_M60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)template<class T=T61,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V61(_impl_adt_real(T61)const& t){NAME ret(kind::V61);try{new(&ret.data_.V61)T(t);}catch(...){std::terminate();}return ret;}template<class T=T61,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V61(_impl_adt_real(T61)&& t){NAME ret(kind::V61);try{new(&ret.data_.V61)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T61,class=std::enable_if_t<std::is_void<T>::value>>static NAME V61(){NAME ret(kind::V61);return ret;}
#define _impl_adt_MS61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61) _impl_adt_MS60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)case kind::V61:m.call_##V61(data_.V61);break;
#define _impl_adt_Ds61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61) _impl_adt_Ds60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)case kind::V61:data_.V61.~decltype(data_.V61)();break;
#define _impl_adt_Cc61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61) _impl_adt_Cc60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)case kind::V61:new(&data_.V61)decltype(data_.V61)(a.data_.V61);break;
#define _impl_adt_Mc61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61) _impl_adt_Mc60(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60)case kind::V61:new(&data_.V61)decltype(data_.V61)(std::move(a.data_.V61));break;
#define adt61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61) class NAME {public:enum class kind{_impl_adt_K61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)};private:kind kind_;union data{_impl_adt_D61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)}data_;public:class matcher{_impl_adt_MF61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)public:_impl_adt_MM61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)}}_impl_adt_M61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)void match(matcher const& m){switch(kind_){_impl_adt_MS61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)}}private:
#define _impl_adt_K62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62) _impl_adt_K61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)V62,
#define _impl_adt_D62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)_impl_adt_D61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)_impl_adt_real(T62)V62;
#define _impl_adt_MF62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62) _impl_adt_MF61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)std::function<void(T62)>V62##_;
#define _impl_adt_MM62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62) _impl_adt_MM61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)template<class T=T62>void call_##V62(_impl_adt_real(T62)a)const{_call_func(V62##_, a);}matcher& V62(std::function<void(T62)>f){V62##_=f;return *this;}
#define _impl_adt_M62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62) _impl_adt_M61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)template<class T=T62,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V62(_impl_adt_real(T62)const& t){NAME ret(kind::V62);try{new(&ret.data_.V62)T(t);}catch(...){std::terminate();}return ret;}template<class T=T62,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V62(_impl_adt_real(T62)&& t){NAME ret(kind::V62);try{new(&ret.data_.V62)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T62,class=std::enable_if_t<std::is_void<T>::value>>static NAME V62(){NAME ret(kind::V62);return ret;}
#define _impl_adt_MS62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62) _impl_adt_MS61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)case kind::V62:m.call_##V62(data_.V62);break;
#define _impl_adt_Ds62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62) _impl_adt_Ds61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)case kind::V62:data_.V62.~decltype(data_.V62)();break;
#define _impl_adt_Cc62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62) _impl_adt_Cc61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)case kind::V62:new(&data_.V62)decltype(data_.V62)(a.data_.V62);break;
#define _impl_adt_Mc62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62) _impl_adt_Mc61(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61)case kind::V62:new(&data_.V62)decltype(data_.V62)(std::move(a.data_.V62));break;
#define adt62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62) class NAME {public:enum class kind{_impl_adt_K62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)};private:kind kind_;union data{_impl_adt_D62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)}data_;public:class matcher{_impl_adt_MF62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)public:_impl_adt_MM62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)}}_impl_adt_M62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)void match(matcher const& m){switch(kind_){_impl_adt_MS62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)}}private:
#define _impl_adt_K63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63) _impl_adt_K62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)V63,
#define _impl_adt_D63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)_impl_adt_D62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)_impl_adt_real(T63)V63;
#define _impl_adt_MF63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63) _impl_adt_MF62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)std::function<void(T63)>V63##_;
#define _impl_adt_MM63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63) _impl_adt_MM62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)template<class T=T63>void call_##V63(_impl_adt_real(T63)a)const{_call_func(V63##_, a);}matcher& V63(std::function<void(T63)>f){V63##_=f;return *this;}
#define _impl_adt_M63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63) _impl_adt_M62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)template<class T=T63,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V63(_impl_adt_real(T63)const& t){NAME ret(kind::V63);try{new(&ret.data_.V63)T(t);}catch(...){std::terminate();}return ret;}template<class T=T63,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V63(_impl_adt_real(T63)&& t){NAME ret(kind::V63);try{new(&ret.data_.V63)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T63,class=std::enable_if_t<std::is_void<T>::value>>static NAME V63(){NAME ret(kind::V63);return ret;}
#define _impl_adt_MS63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63) _impl_adt_MS62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)case kind::V63:m.call_##V63(data_.V63);break;
#define _impl_adt_Ds63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63) _impl_adt_Ds62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)case kind::V63:data_.V63.~decltype(data_.V63)();break;
#define _impl_adt_Cc63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63) _impl_adt_Cc62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)case kind::V63:new(&data_.V63)decltype(data_.V63)(a.data_.V63);break;
#define _impl_adt_Mc63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63) _impl_adt_Mc62(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62)case kind::V63:new(&data_.V63)decltype(data_.V63)(std::move(a.data_.V63));break;
#define adt63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63) class NAME {public:enum class kind{_impl_adt_K63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)};private:kind kind_;union data{_impl_adt_D63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)}data_;public:class matcher{_impl_adt_MF63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)public:_impl_adt_MM63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)}}_impl_adt_M63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)void match(matcher const& m){switch(kind_){_impl_adt_MS63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)}}private:
#define _impl_adt_K64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64) _impl_adt_K63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)V64,
#define _impl_adt_D64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)_impl_adt_D63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)_impl_adt_real(T64)V64;
#define _impl_adt_MF64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64) _impl_adt_MF63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)std::function<void(T64)>V64##_;
#define _impl_adt_MM64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64) _impl_adt_MM63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)template<class T=T64>void call_##V64(_impl_adt_real(T64)a)const{_call_func(V64##_, a);}matcher& V64(std::function<void(T64)>f){V64##_=f;return *this;}
#define _impl_adt_M64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64) _impl_adt_M63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)template<class T=T64,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V64(_impl_adt_real(T64)const& t){NAME ret(kind::V64);try{new(&ret.data_.V64)T(t);}catch(...){std::terminate();}return ret;}template<class T=T64,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V64(_impl_adt_real(T64)&& t){NAME ret(kind::V64);try{new(&ret.data_.V64)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T64,class=std::enable_if_t<std::is_void<T>::value>>static NAME V64(){NAME ret(kind::V64);return ret;}
#define _impl_adt_MS64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64) _impl_adt_MS63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)case kind::V64:m.call_##V64(data_.V64);break;
#define _impl_adt_Ds64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64) _impl_adt_Ds63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)case kind::V64:data_.V64.~decltype(data_.V64)();break;
#define _impl_adt_Cc64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64) _impl_adt_Cc63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)case kind::V64:new(&data_.V64)decltype(data_.V64)(a.data_.V64);break;
#define _impl_adt_Mc64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64) _impl_adt_Mc63(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63)case kind::V64:new(&data_.V64)decltype(data_.V64)(std::move(a.data_.V64));break;
#define adt64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64) class NAME {public:enum class kind{_impl_adt_K64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)};private:kind kind_;union data{_impl_adt_D64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)}data_;public:class matcher{_impl_adt_MF64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)public:_impl_adt_MM64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)}}_impl_adt_M64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)void match(matcher const& m){switch(kind_){_impl_adt_MS64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)}}private:
#define _impl_adt_K65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65) _impl_adt_K64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)V65,
#define _impl_adt_D65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)_impl_adt_D64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)_impl_adt_real(T65)V65;
#define _impl_adt_MF65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65) _impl_adt_MF64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)std::function<void(T65)>V65##_;
#define _impl_adt_MM65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65) _impl_adt_MM64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)template<class T=T65>void call_##V65(_impl_adt_real(T65)a)const{_call_func(V65##_, a);}matcher& V65(std::function<void(T65)>f){V65##_=f;return *this;}
#define _impl_adt_M65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65) _impl_adt_M64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)template<class T=T65,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V65(_impl_adt_real(T65)const& t){NAME ret(kind::V65);try{new(&ret.data_.V65)T(t);}catch(...){std::terminate();}return ret;}template<class T=T65,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V65(_impl_adt_real(T65)&& t){NAME ret(kind::V65);try{new(&ret.data_.V65)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T65,class=std::enable_if_t<std::is_void<T>::value>>static NAME V65(){NAME ret(kind::V65);return ret;}
#define _impl_adt_MS65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65) _impl_adt_MS64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)case kind::V65:m.call_##V65(data_.V65);break;
#define _impl_adt_Ds65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65) _impl_adt_Ds64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)case kind::V65:data_.V65.~decltype(data_.V65)();break;
#define _impl_adt_Cc65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65) _impl_adt_Cc64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)case kind::V65:new(&data_.V65)decltype(data_.V65)(a.data_.V65);break;
#define _impl_adt_Mc65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65) _impl_adt_Mc64(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64)case kind::V65:new(&data_.V65)decltype(data_.V65)(std::move(a.data_.V65));break;
#define adt65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65) class NAME {public:enum class kind{_impl_adt_K65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)};private:kind kind_;union data{_impl_adt_D65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)}data_;public:class matcher{_impl_adt_MF65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)public:_impl_adt_MM65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)}}_impl_adt_M65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)void match(matcher const& m){switch(kind_){_impl_adt_MS65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)}}private:
#define _impl_adt_K66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66) _impl_adt_K65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)V66,
#define _impl_adt_D66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)_impl_adt_D65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)_impl_adt_real(T66)V66;
#define _impl_adt_MF66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66) _impl_adt_MF65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)std::function<void(T66)>V66##_;
#define _impl_adt_MM66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66) _impl_adt_MM65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)template<class T=T66>void call_##V66(_impl_adt_real(T66)a)const{_call_func(V66##_, a);}matcher& V66(std::function<void(T66)>f){V66##_=f;return *this;}
#define _impl_adt_M66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66) _impl_adt_M65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)template<class T=T66,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V66(_impl_adt_real(T66)const& t){NAME ret(kind::V66);try{new(&ret.data_.V66)T(t);}catch(...){std::terminate();}return ret;}template<class T=T66,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V66(_impl_adt_real(T66)&& t){NAME ret(kind::V66);try{new(&ret.data_.V66)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T66,class=std::enable_if_t<std::is_void<T>::value>>static NAME V66(){NAME ret(kind::V66);return ret;}
#define _impl_adt_MS66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66) _impl_adt_MS65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)case kind::V66:m.call_##V66(data_.V66);break;
#define _impl_adt_Ds66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66) _impl_adt_Ds65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)case kind::V66:data_.V66.~decltype(data_.V66)();break;
#define _impl_adt_Cc66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66) _impl_adt_Cc65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)case kind::V66:new(&data_.V66)decltype(data_.V66)(a.data_.V66);break;
#define _impl_adt_Mc66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66) _impl_adt_Mc65(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65)case kind::V66:new(&data_.V66)decltype(data_.V66)(std::move(a.data_.V66));break;
#define adt66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66) class NAME {public:enum class kind{_impl_adt_K66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)};private:kind kind_;union data{_impl_adt_D66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)}data_;public:class matcher{_impl_adt_MF66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)public:_impl_adt_MM66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)}}_impl_adt_M66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)void match(matcher const& m){switch(kind_){_impl_adt_MS66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)}}private:
#define _impl_adt_K67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67) _impl_adt_K66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)V67,
#define _impl_adt_D67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)_impl_adt_D66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)_impl_adt_real(T67)V67;
#define _impl_adt_MF67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67) _impl_adt_MF66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)std::function<void(T67)>V67##_;
#define _impl_adt_MM67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67) _impl_adt_MM66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)template<class T=T67>void call_##V67(_impl_adt_real(T67)a)const{_call_func(V67##_, a);}matcher& V67(std::function<void(T67)>f){V67##_=f;return *this;}
#define _impl_adt_M67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67) _impl_adt_M66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)template<class T=T67,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V67(_impl_adt_real(T67)const& t){NAME ret(kind::V67);try{new(&ret.data_.V67)T(t);}catch(...){std::terminate();}return ret;}template<class T=T67,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V67(_impl_adt_real(T67)&& t){NAME ret(kind::V67);try{new(&ret.data_.V67)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T67,class=std::enable_if_t<std::is_void<T>::value>>static NAME V67(){NAME ret(kind::V67);return ret;}
#define _impl_adt_MS67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67) _impl_adt_MS66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)case kind::V67:m.call_##V67(data_.V67);break;
#define _impl_adt_Ds67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67) _impl_adt_Ds66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)case kind::V67:data_.V67.~decltype(data_.V67)();break;
#define _impl_adt_Cc67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67) _impl_adt_Cc66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)case kind::V67:new(&data_.V67)decltype(data_.V67)(a.data_.V67);break;
#define _impl_adt_Mc67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67) _impl_adt_Mc66(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66)case kind::V67:new(&data_.V67)decltype(data_.V67)(std::move(a.data_.V67));break;
#define adt67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67) class NAME {public:enum class kind{_impl_adt_K67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)};private:kind kind_;union data{_impl_adt_D67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)}data_;public:class matcher{_impl_adt_MF67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)public:_impl_adt_MM67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)}}_impl_adt_M67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)void match(matcher const& m){switch(kind_){_impl_adt_MS67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)}}private:
#define _impl_adt_K68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68) _impl_adt_K67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)V68,
#define _impl_adt_D68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)_impl_adt_D67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)_impl_adt_real(T68)V68;
#define _impl_adt_MF68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68) _impl_adt_MF67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)std::function<void(T68)>V68##_;
#define _impl_adt_MM68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68) _impl_adt_MM67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)template<class T=T68>void call_##V68(_impl_adt_real(T68)a)const{_call_func(V68##_, a);}matcher& V68(std::function<void(T68)>f){V68##_=f;return *this;}
#define _impl_adt_M68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68) _impl_adt_M67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)template<class T=T68,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V68(_impl_adt_real(T68)const& t){NAME ret(kind::V68);try{new(&ret.data_.V68)T(t);}catch(...){std::terminate();}return ret;}template<class T=T68,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V68(_impl_adt_real(T68)&& t){NAME ret(kind::V68);try{new(&ret.data_.V68)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T68,class=std::enable_if_t<std::is_void<T>::value>>static NAME V68(){NAME ret(kind::V68);return ret;}
#define _impl_adt_MS68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68) _impl_adt_MS67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)case kind::V68:m.call_##V68(data_.V68);break;
#define _impl_adt_Ds68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68) _impl_adt_Ds67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)case kind::V68:data_.V68.~decltype(data_.V68)();break;
#define _impl_adt_Cc68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68) _impl_adt_Cc67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)case kind::V68:new(&data_.V68)decltype(data_.V68)(a.data_.V68);break;
#define _impl_adt_Mc68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68) _impl_adt_Mc67(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67)case kind::V68:new(&data_.V68)decltype(data_.V68)(std::move(a.data_.V68));break;
#define adt68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68) class NAME {public:enum class kind{_impl_adt_K68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)};private:kind kind_;union data{_impl_adt_D68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)}data_;public:class matcher{_impl_adt_MF68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)public:_impl_adt_MM68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)}}_impl_adt_M68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)void match(matcher const& m){switch(kind_){_impl_adt_MS68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)}}private:
#define _impl_adt_K69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69) _impl_adt_K68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)V69,
#define _impl_adt_D69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)_impl_adt_D68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)_impl_adt_real(T69)V69;
#define _impl_adt_MF69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69) _impl_adt_MF68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)std::function<void(T69)>V69##_;
#define _impl_adt_MM69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69) _impl_adt_MM68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)template<class T=T69>void call_##V69(_impl_adt_real(T69)a)const{_call_func(V69##_, a);}matcher& V69(std::function<void(T69)>f){V69##_=f;return *this;}
#define _impl_adt_M69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69) _impl_adt_M68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)template<class T=T69,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V69(_impl_adt_real(T69)const& t){NAME ret(kind::V69);try{new(&ret.data_.V69)T(t);}catch(...){std::terminate();}return ret;}template<class T=T69,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V69(_impl_adt_real(T69)&& t){NAME ret(kind::V69);try{new(&ret.data_.V69)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T69,class=std::enable_if_t<std::is_void<T>::value>>static NAME V69(){NAME ret(kind::V69);return ret;}
#define _impl_adt_MS69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69) _impl_adt_MS68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)case kind::V69:m.call_##V69(data_.V69);break;
#define _impl_adt_Ds69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69) _impl_adt_Ds68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)case kind::V69:data_.V69.~decltype(data_.V69)();break;
#define _impl_adt_Cc69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69) _impl_adt_Cc68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)case kind::V69:new(&data_.V69)decltype(data_.V69)(a.data_.V69);break;
#define _impl_adt_Mc69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69) _impl_adt_Mc68(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68)case kind::V69:new(&data_.V69)decltype(data_.V69)(std::move(a.data_.V69));break;
#define adt69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69) class NAME {public:enum class kind{_impl_adt_K69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)};private:kind kind_;union data{_impl_adt_D69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)}data_;public:class matcher{_impl_adt_MF69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)public:_impl_adt_MM69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)}}_impl_adt_M69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)void match(matcher const& m){switch(kind_){_impl_adt_MS69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)}}private:
#define _impl_adt_K6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a) _impl_adt_K69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)V6a,
#define _impl_adt_D6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)_impl_adt_D69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)_impl_adt_real(T6a)V6a;
#define _impl_adt_MF6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a) _impl_adt_MF69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)std::function<void(T6a)>V6a##_;
#define _impl_adt_MM6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a) _impl_adt_MM69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)template<class T=T6a>void call_##V6a(_impl_adt_real(T6a)a)const{_call_func(V6a##_, a);}matcher& V6a(std::function<void(T6a)>f){V6a##_=f;return *this;}
#define _impl_adt_M6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a) _impl_adt_M69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)template<class T=T6a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6a(_impl_adt_real(T6a)const& t){NAME ret(kind::V6a);try{new(&ret.data_.V6a)T(t);}catch(...){std::terminate();}return ret;}template<class T=T6a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6a(_impl_adt_real(T6a)&& t){NAME ret(kind::V6a);try{new(&ret.data_.V6a)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T6a,class=std::enable_if_t<std::is_void<T>::value>>static NAME V6a(){NAME ret(kind::V6a);return ret;}
#define _impl_adt_MS6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a) _impl_adt_MS69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)case kind::V6a:m.call_##V6a(data_.V6a);break;
#define _impl_adt_Ds6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a) _impl_adt_Ds69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)case kind::V6a:data_.V6a.~decltype(data_.V6a)();break;
#define _impl_adt_Cc6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a) _impl_adt_Cc69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)case kind::V6a:new(&data_.V6a)decltype(data_.V6a)(a.data_.V6a);break;
#define _impl_adt_Mc6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a) _impl_adt_Mc69(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69)case kind::V6a:new(&data_.V6a)decltype(data_.V6a)(std::move(a.data_.V6a));break;
#define adt6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a) class NAME {public:enum class kind{_impl_adt_K6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)};private:kind kind_;union data{_impl_adt_D6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)}data_;public:class matcher{_impl_adt_MF6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)public:_impl_adt_MM6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)}}_impl_adt_M6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)void match(matcher const& m){switch(kind_){_impl_adt_MS6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)}}private:
#define _impl_adt_K6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b) _impl_adt_K6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)V6b,
#define _impl_adt_D6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)_impl_adt_D6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)_impl_adt_real(T6b)V6b;
#define _impl_adt_MF6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b) _impl_adt_MF6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)std::function<void(T6b)>V6b##_;
#define _impl_adt_MM6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b) _impl_adt_MM6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)template<class T=T6b>void call_##V6b(_impl_adt_real(T6b)a)const{_call_func(V6b##_, a);}matcher& V6b(std::function<void(T6b)>f){V6b##_=f;return *this;}
#define _impl_adt_M6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b) _impl_adt_M6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)template<class T=T6b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6b(_impl_adt_real(T6b)const& t){NAME ret(kind::V6b);try{new(&ret.data_.V6b)T(t);}catch(...){std::terminate();}return ret;}template<class T=T6b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6b(_impl_adt_real(T6b)&& t){NAME ret(kind::V6b);try{new(&ret.data_.V6b)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T6b,class=std::enable_if_t<std::is_void<T>::value>>static NAME V6b(){NAME ret(kind::V6b);return ret;}
#define _impl_adt_MS6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b) _impl_adt_MS6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)case kind::V6b:m.call_##V6b(data_.V6b);break;
#define _impl_adt_Ds6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b) _impl_adt_Ds6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)case kind::V6b:data_.V6b.~decltype(data_.V6b)();break;
#define _impl_adt_Cc6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b) _impl_adt_Cc6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)case kind::V6b:new(&data_.V6b)decltype(data_.V6b)(a.data_.V6b);break;
#define _impl_adt_Mc6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b) _impl_adt_Mc6a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a)case kind::V6b:new(&data_.V6b)decltype(data_.V6b)(std::move(a.data_.V6b));break;
#define adt6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b) class NAME {public:enum class kind{_impl_adt_K6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)};private:kind kind_;union data{_impl_adt_D6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)}data_;public:class matcher{_impl_adt_MF6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)public:_impl_adt_MM6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)}}_impl_adt_M6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)void match(matcher const& m){switch(kind_){_impl_adt_MS6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)}}private:
#define _impl_adt_K6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c) _impl_adt_K6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)V6c,
#define _impl_adt_D6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)_impl_adt_D6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)_impl_adt_real(T6c)V6c;
#define _impl_adt_MF6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c) _impl_adt_MF6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)std::function<void(T6c)>V6c##_;
#define _impl_adt_MM6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c) _impl_adt_MM6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)template<class T=T6c>void call_##V6c(_impl_adt_real(T6c)a)const{_call_func(V6c##_, a);}matcher& V6c(std::function<void(T6c)>f){V6c##_=f;return *this;}
#define _impl_adt_M6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c) _impl_adt_M6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)template<class T=T6c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6c(_impl_adt_real(T6c)const& t){NAME ret(kind::V6c);try{new(&ret.data_.V6c)T(t);}catch(...){std::terminate();}return ret;}template<class T=T6c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6c(_impl_adt_real(T6c)&& t){NAME ret(kind::V6c);try{new(&ret.data_.V6c)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T6c,class=std::enable_if_t<std::is_void<T>::value>>static NAME V6c(){NAME ret(kind::V6c);return ret;}
#define _impl_adt_MS6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c) _impl_adt_MS6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)case kind::V6c:m.call_##V6c(data_.V6c);break;
#define _impl_adt_Ds6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c) _impl_adt_Ds6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)case kind::V6c:data_.V6c.~decltype(data_.V6c)();break;
#define _impl_adt_Cc6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c) _impl_adt_Cc6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)case kind::V6c:new(&data_.V6c)decltype(data_.V6c)(a.data_.V6c);break;
#define _impl_adt_Mc6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c) _impl_adt_Mc6b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b)case kind::V6c:new(&data_.V6c)decltype(data_.V6c)(std::move(a.data_.V6c));break;
#define adt6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c) class NAME {public:enum class kind{_impl_adt_K6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)};private:kind kind_;union data{_impl_adt_D6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)}data_;public:class matcher{_impl_adt_MF6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)public:_impl_adt_MM6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)}}_impl_adt_M6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)void match(matcher const& m){switch(kind_){_impl_adt_MS6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)}}private:
#define _impl_adt_K6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d) _impl_adt_K6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)V6d,
#define _impl_adt_D6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)_impl_adt_D6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)_impl_adt_real(T6d)V6d;
#define _impl_adt_MF6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d) _impl_adt_MF6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)std::function<void(T6d)>V6d##_;
#define _impl_adt_MM6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d) _impl_adt_MM6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)template<class T=T6d>void call_##V6d(_impl_adt_real(T6d)a)const{_call_func(V6d##_, a);}matcher& V6d(std::function<void(T6d)>f){V6d##_=f;return *this;}
#define _impl_adt_M6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d) _impl_adt_M6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)template<class T=T6d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6d(_impl_adt_real(T6d)const& t){NAME ret(kind::V6d);try{new(&ret.data_.V6d)T(t);}catch(...){std::terminate();}return ret;}template<class T=T6d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6d(_impl_adt_real(T6d)&& t){NAME ret(kind::V6d);try{new(&ret.data_.V6d)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T6d,class=std::enable_if_t<std::is_void<T>::value>>static NAME V6d(){NAME ret(kind::V6d);return ret;}
#define _impl_adt_MS6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d) _impl_adt_MS6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)case kind::V6d:m.call_##V6d(data_.V6d);break;
#define _impl_adt_Ds6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d) _impl_adt_Ds6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)case kind::V6d:data_.V6d.~decltype(data_.V6d)();break;
#define _impl_adt_Cc6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d) _impl_adt_Cc6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)case kind::V6d:new(&data_.V6d)decltype(data_.V6d)(a.data_.V6d);break;
#define _impl_adt_Mc6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d) _impl_adt_Mc6c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c)case kind::V6d:new(&data_.V6d)decltype(data_.V6d)(std::move(a.data_.V6d));break;
#define adt6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d) class NAME {public:enum class kind{_impl_adt_K6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)};private:kind kind_;union data{_impl_adt_D6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)}data_;public:class matcher{_impl_adt_MF6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)public:_impl_adt_MM6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)}}_impl_adt_M6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)void match(matcher const& m){switch(kind_){_impl_adt_MS6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)}}private:
#define _impl_adt_K6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e) _impl_adt_K6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)V6e,
#define _impl_adt_D6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)_impl_adt_D6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)_impl_adt_real(T6e)V6e;
#define _impl_adt_MF6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e) _impl_adt_MF6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)std::function<void(T6e)>V6e##_;
#define _impl_adt_MM6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e) _impl_adt_MM6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)template<class T=T6e>void call_##V6e(_impl_adt_real(T6e)a)const{_call_func(V6e##_, a);}matcher& V6e(std::function<void(T6e)>f){V6e##_=f;return *this;}
#define _impl_adt_M6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e) _impl_adt_M6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)template<class T=T6e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6e(_impl_adt_real(T6e)const& t){NAME ret(kind::V6e);try{new(&ret.data_.V6e)T(t);}catch(...){std::terminate();}return ret;}template<class T=T6e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6e(_impl_adt_real(T6e)&& t){NAME ret(kind::V6e);try{new(&ret.data_.V6e)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T6e,class=std::enable_if_t<std::is_void<T>::value>>static NAME V6e(){NAME ret(kind::V6e);return ret;}
#define _impl_adt_MS6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e) _impl_adt_MS6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)case kind::V6e:m.call_##V6e(data_.V6e);break;
#define _impl_adt_Ds6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e) _impl_adt_Ds6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)case kind::V6e:data_.V6e.~decltype(data_.V6e)();break;
#define _impl_adt_Cc6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e) _impl_adt_Cc6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)case kind::V6e:new(&data_.V6e)decltype(data_.V6e)(a.data_.V6e);break;
#define _impl_adt_Mc6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e) _impl_adt_Mc6d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d)case kind::V6e:new(&data_.V6e)decltype(data_.V6e)(std::move(a.data_.V6e));break;
#define adt6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e) class NAME {public:enum class kind{_impl_adt_K6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)};private:kind kind_;union data{_impl_adt_D6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)}data_;public:class matcher{_impl_adt_MF6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)public:_impl_adt_MM6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)}}_impl_adt_M6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)void match(matcher const& m){switch(kind_){_impl_adt_MS6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)}}private:
#define _impl_adt_K6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f) _impl_adt_K6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)V6f,
#define _impl_adt_D6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)_impl_adt_D6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)_impl_adt_real(T6f)V6f;
#define _impl_adt_MF6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f) _impl_adt_MF6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)std::function<void(T6f)>V6f##_;
#define _impl_adt_MM6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f) _impl_adt_MM6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)template<class T=T6f>void call_##V6f(_impl_adt_real(T6f)a)const{_call_func(V6f##_, a);}matcher& V6f(std::function<void(T6f)>f){V6f##_=f;return *this;}
#define _impl_adt_M6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f) _impl_adt_M6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)template<class T=T6f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6f(_impl_adt_real(T6f)const& t){NAME ret(kind::V6f);try{new(&ret.data_.V6f)T(t);}catch(...){std::terminate();}return ret;}template<class T=T6f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V6f(_impl_adt_real(T6f)&& t){NAME ret(kind::V6f);try{new(&ret.data_.V6f)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T6f,class=std::enable_if_t<std::is_void<T>::value>>static NAME V6f(){NAME ret(kind::V6f);return ret;}
#define _impl_adt_MS6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f) _impl_adt_MS6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)case kind::V6f:m.call_##V6f(data_.V6f);break;
#define _impl_adt_Ds6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f) _impl_adt_Ds6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)case kind::V6f:data_.V6f.~decltype(data_.V6f)();break;
#define _impl_adt_Cc6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f) _impl_adt_Cc6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)case kind::V6f:new(&data_.V6f)decltype(data_.V6f)(a.data_.V6f);break;
#define _impl_adt_Mc6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f) _impl_adt_Mc6e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e)case kind::V6f:new(&data_.V6f)decltype(data_.V6f)(std::move(a.data_.V6f));break;
#define adt6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f) class NAME {public:enum class kind{_impl_adt_K6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)};private:kind kind_;union data{_impl_adt_D6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)}data_;public:class matcher{_impl_adt_MF6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)public:_impl_adt_MM6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)}}_impl_adt_M6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)void match(matcher const& m){switch(kind_){_impl_adt_MS6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)}}private:
#define _impl_adt_K70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70) _impl_adt_K6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)V70,
#define _impl_adt_D70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)_impl_adt_D6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)_impl_adt_real(T70)V70;
#define _impl_adt_MF70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70) _impl_adt_MF6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)std::function<void(T70)>V70##_;
#define _impl_adt_MM70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70) _impl_adt_MM6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)template<class T=T70>void call_##V70(_impl_adt_real(T70)a)const{_call_func(V70##_, a);}matcher& V70(std::function<void(T70)>f){V70##_=f;return *this;}
#define _impl_adt_M70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70) _impl_adt_M6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)template<class T=T70,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V70(_impl_adt_real(T70)const& t){NAME ret(kind::V70);try{new(&ret.data_.V70)T(t);}catch(...){std::terminate();}return ret;}template<class T=T70,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V70(_impl_adt_real(T70)&& t){NAME ret(kind::V70);try{new(&ret.data_.V70)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T70,class=std::enable_if_t<std::is_void<T>::value>>static NAME V70(){NAME ret(kind::V70);return ret;}
#define _impl_adt_MS70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70) _impl_adt_MS6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)case kind::V70:m.call_##V70(data_.V70);break;
#define _impl_adt_Ds70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70) _impl_adt_Ds6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)case kind::V70:data_.V70.~decltype(data_.V70)();break;
#define _impl_adt_Cc70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70) _impl_adt_Cc6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)case kind::V70:new(&data_.V70)decltype(data_.V70)(a.data_.V70);break;
#define _impl_adt_Mc70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70) _impl_adt_Mc6f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f)case kind::V70:new(&data_.V70)decltype(data_.V70)(std::move(a.data_.V70));break;
#define adt70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70) class NAME {public:enum class kind{_impl_adt_K70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)};private:kind kind_;union data{_impl_adt_D70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)}data_;public:class matcher{_impl_adt_MF70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)public:_impl_adt_MM70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)}}_impl_adt_M70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)void match(matcher const& m){switch(kind_){_impl_adt_MS70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)}}private:
#define _impl_adt_K71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71) _impl_adt_K70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)V71,
#define _impl_adt_D71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)_impl_adt_D70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)_impl_adt_real(T71)V71;
#define _impl_adt_MF71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71) _impl_adt_MF70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)std::function<void(T71)>V71##_;
#define _impl_adt_MM71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71) _impl_adt_MM70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)template<class T=T71>void call_##V71(_impl_adt_real(T71)a)const{_call_func(V71##_, a);}matcher& V71(std::function<void(T71)>f){V71##_=f;return *this;}
#define _impl_adt_M71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71) _impl_adt_M70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)template<class T=T71,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V71(_impl_adt_real(T71)const& t){NAME ret(kind::V71);try{new(&ret.data_.V71)T(t);}catch(...){std::terminate();}return ret;}template<class T=T71,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V71(_impl_adt_real(T71)&& t){NAME ret(kind::V71);try{new(&ret.data_.V71)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T71,class=std::enable_if_t<std::is_void<T>::value>>static NAME V71(){NAME ret(kind::V71);return ret;}
#define _impl_adt_MS71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71) _impl_adt_MS70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)case kind::V71:m.call_##V71(data_.V71);break;
#define _impl_adt_Ds71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71) _impl_adt_Ds70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)case kind::V71:data_.V71.~decltype(data_.V71)();break;
#define _impl_adt_Cc71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71) _impl_adt_Cc70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)case kind::V71:new(&data_.V71)decltype(data_.V71)(a.data_.V71);break;
#define _impl_adt_Mc71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71) _impl_adt_Mc70(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70)case kind::V71:new(&data_.V71)decltype(data_.V71)(std::move(a.data_.V71));break;
#define adt71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71) class NAME {public:enum class kind{_impl_adt_K71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)};private:kind kind_;union data{_impl_adt_D71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)}data_;public:class matcher{_impl_adt_MF71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)public:_impl_adt_MM71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)}}_impl_adt_M71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)void match(matcher const& m){switch(kind_){_impl_adt_MS71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)}}private:
#define _impl_adt_K72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72) _impl_adt_K71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)V72,
#define _impl_adt_D72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)_impl_adt_D71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)_impl_adt_real(T72)V72;
#define _impl_adt_MF72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72) _impl_adt_MF71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)std::function<void(T72)>V72##_;
#define _impl_adt_MM72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72) _impl_adt_MM71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)template<class T=T72>void call_##V72(_impl_adt_real(T72)a)const{_call_func(V72##_, a);}matcher& V72(std::function<void(T72)>f){V72##_=f;return *this;}
#define _impl_adt_M72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72) _impl_adt_M71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)template<class T=T72,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V72(_impl_adt_real(T72)const& t){NAME ret(kind::V72);try{new(&ret.data_.V72)T(t);}catch(...){std::terminate();}return ret;}template<class T=T72,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V72(_impl_adt_real(T72)&& t){NAME ret(kind::V72);try{new(&ret.data_.V72)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T72,class=std::enable_if_t<std::is_void<T>::value>>static NAME V72(){NAME ret(kind::V72);return ret;}
#define _impl_adt_MS72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72) _impl_adt_MS71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)case kind::V72:m.call_##V72(data_.V72);break;
#define _impl_adt_Ds72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72) _impl_adt_Ds71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)case kind::V72:data_.V72.~decltype(data_.V72)();break;
#define _impl_adt_Cc72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72) _impl_adt_Cc71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)case kind::V72:new(&data_.V72)decltype(data_.V72)(a.data_.V72);break;
#define _impl_adt_Mc72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72) _impl_adt_Mc71(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71)case kind::V72:new(&data_.V72)decltype(data_.V72)(std::move(a.data_.V72));break;
#define adt72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72) class NAME {public:enum class kind{_impl_adt_K72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)};private:kind kind_;union data{_impl_adt_D72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)}data_;public:class matcher{_impl_adt_MF72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)public:_impl_adt_MM72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)}}_impl_adt_M72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)void match(matcher const& m){switch(kind_){_impl_adt_MS72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)}}private:
#define _impl_adt_K73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73) _impl_adt_K72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)V73,
#define _impl_adt_D73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)_impl_adt_D72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)_impl_adt_real(T73)V73;
#define _impl_adt_MF73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73) _impl_adt_MF72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)std::function<void(T73)>V73##_;
#define _impl_adt_MM73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73) _impl_adt_MM72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)template<class T=T73>void call_##V73(_impl_adt_real(T73)a)const{_call_func(V73##_, a);}matcher& V73(std::function<void(T73)>f){V73##_=f;return *this;}
#define _impl_adt_M73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73) _impl_adt_M72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)template<class T=T73,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V73(_impl_adt_real(T73)const& t){NAME ret(kind::V73);try{new(&ret.data_.V73)T(t);}catch(...){std::terminate();}return ret;}template<class T=T73,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V73(_impl_adt_real(T73)&& t){NAME ret(kind::V73);try{new(&ret.data_.V73)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T73,class=std::enable_if_t<std::is_void<T>::value>>static NAME V73(){NAME ret(kind::V73);return ret;}
#define _impl_adt_MS73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73) _impl_adt_MS72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)case kind::V73:m.call_##V73(data_.V73);break;
#define _impl_adt_Ds73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73) _impl_adt_Ds72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)case kind::V73:data_.V73.~decltype(data_.V73)();break;
#define _impl_adt_Cc73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73) _impl_adt_Cc72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)case kind::V73:new(&data_.V73)decltype(data_.V73)(a.data_.V73);break;
#define _impl_adt_Mc73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73) _impl_adt_Mc72(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72)case kind::V73:new(&data_.V73)decltype(data_.V73)(std::move(a.data_.V73));break;
#define adt73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73) class NAME {public:enum class kind{_impl_adt_K73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)};private:kind kind_;union data{_impl_adt_D73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)}data_;public:class matcher{_impl_adt_MF73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)public:_impl_adt_MM73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)}}_impl_adt_M73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)void match(matcher const& m){switch(kind_){_impl_adt_MS73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)}}private:
#define _impl_adt_K74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74) _impl_adt_K73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)V74,
#define _impl_adt_D74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)_impl_adt_D73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)_impl_adt_real(T74)V74;
#define _impl_adt_MF74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74) _impl_adt_MF73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)std::function<void(T74)>V74##_;
#define _impl_adt_MM74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74) _impl_adt_MM73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)template<class T=T74>void call_##V74(_impl_adt_real(T74)a)const{_call_func(V74##_, a);}matcher& V74(std::function<void(T74)>f){V74##_=f;return *this;}
#define _impl_adt_M74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74) _impl_adt_M73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)template<class T=T74,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V74(_impl_adt_real(T74)const& t){NAME ret(kind::V74);try{new(&ret.data_.V74)T(t);}catch(...){std::terminate();}return ret;}template<class T=T74,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V74(_impl_adt_real(T74)&& t){NAME ret(kind::V74);try{new(&ret.data_.V74)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T74,class=std::enable_if_t<std::is_void<T>::value>>static NAME V74(){NAME ret(kind::V74);return ret;}
#define _impl_adt_MS74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74) _impl_adt_MS73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)case kind::V74:m.call_##V74(data_.V74);break;
#define _impl_adt_Ds74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74) _impl_adt_Ds73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)case kind::V74:data_.V74.~decltype(data_.V74)();break;
#define _impl_adt_Cc74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74) _impl_adt_Cc73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)case kind::V74:new(&data_.V74)decltype(data_.V74)(a.data_.V74);break;
#define _impl_adt_Mc74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74) _impl_adt_Mc73(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73)case kind::V74:new(&data_.V74)decltype(data_.V74)(std::move(a.data_.V74));break;
#define adt74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74) class NAME {public:enum class kind{_impl_adt_K74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)};private:kind kind_;union data{_impl_adt_D74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)}data_;public:class matcher{_impl_adt_MF74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)public:_impl_adt_MM74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)}}_impl_adt_M74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)void match(matcher const& m){switch(kind_){_impl_adt_MS74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)}}private:
#define _impl_adt_K75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75) _impl_adt_K74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)V75,
#define _impl_adt_D75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)_impl_adt_D74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)_impl_adt_real(T75)V75;
#define _impl_adt_MF75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75) _impl_adt_MF74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)std::function<void(T75)>V75##_;
#define _impl_adt_MM75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75) _impl_adt_MM74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)template<class T=T75>void call_##V75(_impl_adt_real(T75)a)const{_call_func(V75##_, a);}matcher& V75(std::function<void(T75)>f){V75##_=f;return *this;}
#define _impl_adt_M75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75) _impl_adt_M74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)template<class T=T75,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V75(_impl_adt_real(T75)const& t){NAME ret(kind::V75);try{new(&ret.data_.V75)T(t);}catch(...){std::terminate();}return ret;}template<class T=T75,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V75(_impl_adt_real(T75)&& t){NAME ret(kind::V75);try{new(&ret.data_.V75)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T75,class=std::enable_if_t<std::is_void<T>::value>>static NAME V75(){NAME ret(kind::V75);return ret;}
#define _impl_adt_MS75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75) _impl_adt_MS74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)case kind::V75:m.call_##V75(data_.V75);break;
#define _impl_adt_Ds75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75) _impl_adt_Ds74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)case kind::V75:data_.V75.~decltype(data_.V75)();break;
#define _impl_adt_Cc75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75) _impl_adt_Cc74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)case kind::V75:new(&data_.V75)decltype(data_.V75)(a.data_.V75);break;
#define _impl_adt_Mc75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75) _impl_adt_Mc74(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74)case kind::V75:new(&data_.V75)decltype(data_.V75)(std::move(a.data_.V75));break;
#define adt75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75) class NAME {public:enum class kind{_impl_adt_K75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)};private:kind kind_;union data{_impl_adt_D75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)}data_;public:class matcher{_impl_adt_MF75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)public:_impl_adt_MM75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)}}_impl_adt_M75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)void match(matcher const& m){switch(kind_){_impl_adt_MS75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)}}private:
#define _impl_adt_K76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76) _impl_adt_K75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)V76,
#define _impl_adt_D76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)_impl_adt_D75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)_impl_adt_real(T76)V76;
#define _impl_adt_MF76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76) _impl_adt_MF75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)std::function<void(T76)>V76##_;
#define _impl_adt_MM76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76) _impl_adt_MM75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)template<class T=T76>void call_##V76(_impl_adt_real(T76)a)const{_call_func(V76##_, a);}matcher& V76(std::function<void(T76)>f){V76##_=f;return *this;}
#define _impl_adt_M76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76) _impl_adt_M75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)template<class T=T76,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V76(_impl_adt_real(T76)const& t){NAME ret(kind::V76);try{new(&ret.data_.V76)T(t);}catch(...){std::terminate();}return ret;}template<class T=T76,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V76(_impl_adt_real(T76)&& t){NAME ret(kind::V76);try{new(&ret.data_.V76)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T76,class=std::enable_if_t<std::is_void<T>::value>>static NAME V76(){NAME ret(kind::V76);return ret;}
#define _impl_adt_MS76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76) _impl_adt_MS75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)case kind::V76:m.call_##V76(data_.V76);break;
#define _impl_adt_Ds76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76) _impl_adt_Ds75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)case kind::V76:data_.V76.~decltype(data_.V76)();break;
#define _impl_adt_Cc76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76) _impl_adt_Cc75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)case kind::V76:new(&data_.V76)decltype(data_.V76)(a.data_.V76);break;
#define _impl_adt_Mc76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76) _impl_adt_Mc75(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75)case kind::V76:new(&data_.V76)decltype(data_.V76)(std::move(a.data_.V76));break;
#define adt76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76) class NAME {public:enum class kind{_impl_adt_K76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)};private:kind kind_;union data{_impl_adt_D76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)}data_;public:class matcher{_impl_adt_MF76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)public:_impl_adt_MM76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)}}_impl_adt_M76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)void match(matcher const& m){switch(kind_){_impl_adt_MS76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)}}private:
#define _impl_adt_K77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77) _impl_adt_K76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)V77,
#define _impl_adt_D77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)_impl_adt_D76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)_impl_adt_real(T77)V77;
#define _impl_adt_MF77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77) _impl_adt_MF76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)std::function<void(T77)>V77##_;
#define _impl_adt_MM77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77) _impl_adt_MM76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)template<class T=T77>void call_##V77(_impl_adt_real(T77)a)const{_call_func(V77##_, a);}matcher& V77(std::function<void(T77)>f){V77##_=f;return *this;}
#define _impl_adt_M77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77) _impl_adt_M76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)template<class T=T77,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V77(_impl_adt_real(T77)const& t){NAME ret(kind::V77);try{new(&ret.data_.V77)T(t);}catch(...){std::terminate();}return ret;}template<class T=T77,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V77(_impl_adt_real(T77)&& t){NAME ret(kind::V77);try{new(&ret.data_.V77)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T77,class=std::enable_if_t<std::is_void<T>::value>>static NAME V77(){NAME ret(kind::V77);return ret;}
#define _impl_adt_MS77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77) _impl_adt_MS76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)case kind::V77:m.call_##V77(data_.V77);break;
#define _impl_adt_Ds77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77) _impl_adt_Ds76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)case kind::V77:data_.V77.~decltype(data_.V77)();break;
#define _impl_adt_Cc77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77) _impl_adt_Cc76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)case kind::V77:new(&data_.V77)decltype(data_.V77)(a.data_.V77);break;
#define _impl_adt_Mc77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77) _impl_adt_Mc76(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76)case kind::V77:new(&data_.V77)decltype(data_.V77)(std::move(a.data_.V77));break;
#define adt77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77) class NAME {public:enum class kind{_impl_adt_K77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)};private:kind kind_;union data{_impl_adt_D77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)}data_;public:class matcher{_impl_adt_MF77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)public:_impl_adt_MM77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)}}_impl_adt_M77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)void match(matcher const& m){switch(kind_){_impl_adt_MS77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)}}private:
#define _impl_adt_K78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78) _impl_adt_K77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)V78,
#define _impl_adt_D78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)_impl_adt_D77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)_impl_adt_real(T78)V78;
#define _impl_adt_MF78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78) _impl_adt_MF77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)std::function<void(T78)>V78##_;
#define _impl_adt_MM78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78) _impl_adt_MM77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)template<class T=T78>void call_##V78(_impl_adt_real(T78)a)const{_call_func(V78##_, a);}matcher& V78(std::function<void(T78)>f){V78##_=f;return *this;}
#define _impl_adt_M78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78) _impl_adt_M77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)template<class T=T78,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V78(_impl_adt_real(T78)const& t){NAME ret(kind::V78);try{new(&ret.data_.V78)T(t);}catch(...){std::terminate();}return ret;}template<class T=T78,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V78(_impl_adt_real(T78)&& t){NAME ret(kind::V78);try{new(&ret.data_.V78)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T78,class=std::enable_if_t<std::is_void<T>::value>>static NAME V78(){NAME ret(kind::V78);return ret;}
#define _impl_adt_MS78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78) _impl_adt_MS77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)case kind::V78:m.call_##V78(data_.V78);break;
#define _impl_adt_Ds78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78) _impl_adt_Ds77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)case kind::V78:data_.V78.~decltype(data_.V78)();break;
#define _impl_adt_Cc78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78) _impl_adt_Cc77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)case kind::V78:new(&data_.V78)decltype(data_.V78)(a.data_.V78);break;
#define _impl_adt_Mc78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78) _impl_adt_Mc77(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77)case kind::V78:new(&data_.V78)decltype(data_.V78)(std::move(a.data_.V78));break;
#define adt78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78) class NAME {public:enum class kind{_impl_adt_K78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)};private:kind kind_;union data{_impl_adt_D78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)}data_;public:class matcher{_impl_adt_MF78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)public:_impl_adt_MM78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)}}_impl_adt_M78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)void match(matcher const& m){switch(kind_){_impl_adt_MS78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)}}private:
#define _impl_adt_K79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79) _impl_adt_K78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)V79,
#define _impl_adt_D79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)_impl_adt_D78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)_impl_adt_real(T79)V79;
#define _impl_adt_MF79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79) _impl_adt_MF78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)std::function<void(T79)>V79##_;
#define _impl_adt_MM79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79) _impl_adt_MM78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)template<class T=T79>void call_##V79(_impl_adt_real(T79)a)const{_call_func(V79##_, a);}matcher& V79(std::function<void(T79)>f){V79##_=f;return *this;}
#define _impl_adt_M79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79) _impl_adt_M78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)template<class T=T79,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V79(_impl_adt_real(T79)const& t){NAME ret(kind::V79);try{new(&ret.data_.V79)T(t);}catch(...){std::terminate();}return ret;}template<class T=T79,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V79(_impl_adt_real(T79)&& t){NAME ret(kind::V79);try{new(&ret.data_.V79)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T79,class=std::enable_if_t<std::is_void<T>::value>>static NAME V79(){NAME ret(kind::V79);return ret;}
#define _impl_adt_MS79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79) _impl_adt_MS78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)case kind::V79:m.call_##V79(data_.V79);break;
#define _impl_adt_Ds79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79) _impl_adt_Ds78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)case kind::V79:data_.V79.~decltype(data_.V79)();break;
#define _impl_adt_Cc79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79) _impl_adt_Cc78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)case kind::V79:new(&data_.V79)decltype(data_.V79)(a.data_.V79);break;
#define _impl_adt_Mc79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79) _impl_adt_Mc78(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78)case kind::V79:new(&data_.V79)decltype(data_.V79)(std::move(a.data_.V79));break;
#define adt79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79) class NAME {public:enum class kind{_impl_adt_K79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)};private:kind kind_;union data{_impl_adt_D79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)}data_;public:class matcher{_impl_adt_MF79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)public:_impl_adt_MM79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)}}_impl_adt_M79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)void match(matcher const& m){switch(kind_){_impl_adt_MS79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)}}private:
#define _impl_adt_K7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a) _impl_adt_K79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)V7a,
#define _impl_adt_D7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)_impl_adt_D79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)_impl_adt_real(T7a)V7a;
#define _impl_adt_MF7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a) _impl_adt_MF79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)std::function<void(T7a)>V7a##_;
#define _impl_adt_MM7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a) _impl_adt_MM79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)template<class T=T7a>void call_##V7a(_impl_adt_real(T7a)a)const{_call_func(V7a##_, a);}matcher& V7a(std::function<void(T7a)>f){V7a##_=f;return *this;}
#define _impl_adt_M7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a) _impl_adt_M79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)template<class T=T7a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7a(_impl_adt_real(T7a)const& t){NAME ret(kind::V7a);try{new(&ret.data_.V7a)T(t);}catch(...){std::terminate();}return ret;}template<class T=T7a,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7a(_impl_adt_real(T7a)&& t){NAME ret(kind::V7a);try{new(&ret.data_.V7a)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T7a,class=std::enable_if_t<std::is_void<T>::value>>static NAME V7a(){NAME ret(kind::V7a);return ret;}
#define _impl_adt_MS7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a) _impl_adt_MS79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)case kind::V7a:m.call_##V7a(data_.V7a);break;
#define _impl_adt_Ds7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a) _impl_adt_Ds79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)case kind::V7a:data_.V7a.~decltype(data_.V7a)();break;
#define _impl_adt_Cc7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a) _impl_adt_Cc79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)case kind::V7a:new(&data_.V7a)decltype(data_.V7a)(a.data_.V7a);break;
#define _impl_adt_Mc7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a) _impl_adt_Mc79(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79)case kind::V7a:new(&data_.V7a)decltype(data_.V7a)(std::move(a.data_.V7a));break;
#define adt7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a) class NAME {public:enum class kind{_impl_adt_K7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)};private:kind kind_;union data{_impl_adt_D7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)}data_;public:class matcher{_impl_adt_MF7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)public:_impl_adt_MM7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)}}_impl_adt_M7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)void match(matcher const& m){switch(kind_){_impl_adt_MS7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)}}private:
#define _impl_adt_K7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b) _impl_adt_K7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)V7b,
#define _impl_adt_D7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)_impl_adt_D7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)_impl_adt_real(T7b)V7b;
#define _impl_adt_MF7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b) _impl_adt_MF7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)std::function<void(T7b)>V7b##_;
#define _impl_adt_MM7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b) _impl_adt_MM7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)template<class T=T7b>void call_##V7b(_impl_adt_real(T7b)a)const{_call_func(V7b##_, a);}matcher& V7b(std::function<void(T7b)>f){V7b##_=f;return *this;}
#define _impl_adt_M7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b) _impl_adt_M7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)template<class T=T7b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7b(_impl_adt_real(T7b)const& t){NAME ret(kind::V7b);try{new(&ret.data_.V7b)T(t);}catch(...){std::terminate();}return ret;}template<class T=T7b,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7b(_impl_adt_real(T7b)&& t){NAME ret(kind::V7b);try{new(&ret.data_.V7b)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T7b,class=std::enable_if_t<std::is_void<T>::value>>static NAME V7b(){NAME ret(kind::V7b);return ret;}
#define _impl_adt_MS7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b) _impl_adt_MS7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)case kind::V7b:m.call_##V7b(data_.V7b);break;
#define _impl_adt_Ds7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b) _impl_adt_Ds7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)case kind::V7b:data_.V7b.~decltype(data_.V7b)();break;
#define _impl_adt_Cc7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b) _impl_adt_Cc7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)case kind::V7b:new(&data_.V7b)decltype(data_.V7b)(a.data_.V7b);break;
#define _impl_adt_Mc7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b) _impl_adt_Mc7a(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a)case kind::V7b:new(&data_.V7b)decltype(data_.V7b)(std::move(a.data_.V7b));break;
#define adt7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b) class NAME {public:enum class kind{_impl_adt_K7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)};private:kind kind_;union data{_impl_adt_D7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)}data_;public:class matcher{_impl_adt_MF7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)public:_impl_adt_MM7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)}}_impl_adt_M7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)void match(matcher const& m){switch(kind_){_impl_adt_MS7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)}}private:
#define _impl_adt_K7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c) _impl_adt_K7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)V7c,
#define _impl_adt_D7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)_impl_adt_D7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)_impl_adt_real(T7c)V7c;
#define _impl_adt_MF7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c) _impl_adt_MF7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)std::function<void(T7c)>V7c##_;
#define _impl_adt_MM7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c) _impl_adt_MM7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)template<class T=T7c>void call_##V7c(_impl_adt_real(T7c)a)const{_call_func(V7c##_, a);}matcher& V7c(std::function<void(T7c)>f){V7c##_=f;return *this;}
#define _impl_adt_M7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c) _impl_adt_M7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)template<class T=T7c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7c(_impl_adt_real(T7c)const& t){NAME ret(kind::V7c);try{new(&ret.data_.V7c)T(t);}catch(...){std::terminate();}return ret;}template<class T=T7c,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7c(_impl_adt_real(T7c)&& t){NAME ret(kind::V7c);try{new(&ret.data_.V7c)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T7c,class=std::enable_if_t<std::is_void<T>::value>>static NAME V7c(){NAME ret(kind::V7c);return ret;}
#define _impl_adt_MS7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c) _impl_adt_MS7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)case kind::V7c:m.call_##V7c(data_.V7c);break;
#define _impl_adt_Ds7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c) _impl_adt_Ds7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)case kind::V7c:data_.V7c.~decltype(data_.V7c)();break;
#define _impl_adt_Cc7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c) _impl_adt_Cc7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)case kind::V7c:new(&data_.V7c)decltype(data_.V7c)(a.data_.V7c);break;
#define _impl_adt_Mc7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c) _impl_adt_Mc7b(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b)case kind::V7c:new(&data_.V7c)decltype(data_.V7c)(std::move(a.data_.V7c));break;
#define adt7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c) class NAME {public:enum class kind{_impl_adt_K7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)};private:kind kind_;union data{_impl_adt_D7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)}data_;public:class matcher{_impl_adt_MF7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)public:_impl_adt_MM7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)}}_impl_adt_M7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)void match(matcher const& m){switch(kind_){_impl_adt_MS7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)}}private:
#define _impl_adt_K7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d) _impl_adt_K7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)V7d,
#define _impl_adt_D7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)_impl_adt_D7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)_impl_adt_real(T7d)V7d;
#define _impl_adt_MF7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d) _impl_adt_MF7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)std::function<void(T7d)>V7d##_;
#define _impl_adt_MM7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d) _impl_adt_MM7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)template<class T=T7d>void call_##V7d(_impl_adt_real(T7d)a)const{_call_func(V7d##_, a);}matcher& V7d(std::function<void(T7d)>f){V7d##_=f;return *this;}
#define _impl_adt_M7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d) _impl_adt_M7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)template<class T=T7d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7d(_impl_adt_real(T7d)const& t){NAME ret(kind::V7d);try{new(&ret.data_.V7d)T(t);}catch(...){std::terminate();}return ret;}template<class T=T7d,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7d(_impl_adt_real(T7d)&& t){NAME ret(kind::V7d);try{new(&ret.data_.V7d)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T7d,class=std::enable_if_t<std::is_void<T>::value>>static NAME V7d(){NAME ret(kind::V7d);return ret;}
#define _impl_adt_MS7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d) _impl_adt_MS7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)case kind::V7d:m.call_##V7d(data_.V7d);break;
#define _impl_adt_Ds7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d) _impl_adt_Ds7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)case kind::V7d:data_.V7d.~decltype(data_.V7d)();break;
#define _impl_adt_Cc7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d) _impl_adt_Cc7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)case kind::V7d:new(&data_.V7d)decltype(data_.V7d)(a.data_.V7d);break;
#define _impl_adt_Mc7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d) _impl_adt_Mc7c(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c)case kind::V7d:new(&data_.V7d)decltype(data_.V7d)(std::move(a.data_.V7d));break;
#define adt7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d) class NAME {public:enum class kind{_impl_adt_K7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)};private:kind kind_;union data{_impl_adt_D7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)}data_;public:class matcher{_impl_adt_MF7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)public:_impl_adt_MM7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)}}_impl_adt_M7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)void match(matcher const& m){switch(kind_){_impl_adt_MS7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)}}private:
#define _impl_adt_K7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e) _impl_adt_K7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)V7e,
#define _impl_adt_D7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)_impl_adt_D7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)_impl_adt_real(T7e)V7e;
#define _impl_adt_MF7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e) _impl_adt_MF7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)std::function<void(T7e)>V7e##_;
#define _impl_adt_MM7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e) _impl_adt_MM7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)template<class T=T7e>void call_##V7e(_impl_adt_real(T7e)a)const{_call_func(V7e##_, a);}matcher& V7e(std::function<void(T7e)>f){V7e##_=f;return *this;}
#define _impl_adt_M7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e) _impl_adt_M7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)template<class T=T7e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7e(_impl_adt_real(T7e)const& t){NAME ret(kind::V7e);try{new(&ret.data_.V7e)T(t);}catch(...){std::terminate();}return ret;}template<class T=T7e,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7e(_impl_adt_real(T7e)&& t){NAME ret(kind::V7e);try{new(&ret.data_.V7e)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T7e,class=std::enable_if_t<std::is_void<T>::value>>static NAME V7e(){NAME ret(kind::V7e);return ret;}
#define _impl_adt_MS7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e) _impl_adt_MS7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)case kind::V7e:m.call_##V7e(data_.V7e);break;
#define _impl_adt_Ds7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e) _impl_adt_Ds7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)case kind::V7e:data_.V7e.~decltype(data_.V7e)();break;
#define _impl_adt_Cc7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e) _impl_adt_Cc7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)case kind::V7e:new(&data_.V7e)decltype(data_.V7e)(a.data_.V7e);break;
#define _impl_adt_Mc7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e) _impl_adt_Mc7d(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d)case kind::V7e:new(&data_.V7e)decltype(data_.V7e)(std::move(a.data_.V7e));break;
#define adt7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e) class NAME {public:enum class kind{_impl_adt_K7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)};private:kind kind_;union data{_impl_adt_D7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)}data_;public:class matcher{_impl_adt_MF7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)public:_impl_adt_MM7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)}}_impl_adt_M7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)void match(matcher const& m){switch(kind_){_impl_adt_MS7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)}}private:
#define _impl_adt_K7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f) _impl_adt_K7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)V7f,
#define _impl_adt_D7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)_impl_adt_D7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)_impl_adt_real(T7f)V7f;
#define _impl_adt_MF7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f) _impl_adt_MF7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)std::function<void(T7f)>V7f##_;
#define _impl_adt_MM7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f) _impl_adt_MM7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)template<class T=T7f>void call_##V7f(_impl_adt_real(T7f)a)const{_call_func(V7f##_, a);}matcher& V7f(std::function<void(T7f)>f){V7f##_=f;return *this;}
#define _impl_adt_M7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f) _impl_adt_M7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)template<class T=T7f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7f(_impl_adt_real(T7f)const& t){NAME ret(kind::V7f);try{new(&ret.data_.V7f)T(t);}catch(...){std::terminate();}return ret;}template<class T=T7f,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V7f(_impl_adt_real(T7f)&& t){NAME ret(kind::V7f);try{new(&ret.data_.V7f)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T7f,class=std::enable_if_t<std::is_void<T>::value>>static NAME V7f(){NAME ret(kind::V7f);return ret;}
#define _impl_adt_MS7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f) _impl_adt_MS7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)case kind::V7f:m.call_##V7f(data_.V7f);break;
#define _impl_adt_Ds7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f) _impl_adt_Ds7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)case kind::V7f:data_.V7f.~decltype(data_.V7f)();break;
#define _impl_adt_Cc7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f) _impl_adt_Cc7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)case kind::V7f:new(&data_.V7f)decltype(data_.V7f)(a.data_.V7f);break;
#define _impl_adt_Mc7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f) _impl_adt_Mc7e(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e)case kind::V7f:new(&data_.V7f)decltype(data_.V7f)(std::move(a.data_.V7f));break;
#define adt7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f) class NAME {public:enum class kind{_impl_adt_K7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)};private:kind kind_;union data{_impl_adt_D7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)}data_;public:class matcher{_impl_adt_MF7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)public:_impl_adt_MM7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)}}_impl_adt_M7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)void match(matcher const& m){switch(kind_){_impl_adt_MS7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)}}private:
#define _impl_adt_K80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80) _impl_adt_K7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)V80,
#define _impl_adt_D80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80)_impl_adt_D7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)_impl_adt_real(T80)V80;
#define _impl_adt_MF80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80) _impl_adt_MF7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)std::function<void(T80)>V80##_;
#define _impl_adt_MM80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80) _impl_adt_MM7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)template<class T=T80>void call_##V80(_impl_adt_real(T80)a)const{_call_func(V80##_, a);}matcher& V80(std::function<void(T80)>f){V80##_=f;return *this;}
#define _impl_adt_M80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80) _impl_adt_M7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)template<class T=T80,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V80(_impl_adt_real(T80)const& t){NAME ret(kind::V80);try{new(&ret.data_.V80)T(t);}catch(...){std::terminate();}return ret;}template<class T=T80,class=std::enable_if_t<!std::is_void<T>::value>>static NAME V80(_impl_adt_real(T80)&& t){NAME ret(kind::V80);try{new(&ret.data_.V80)T(std::move(t));}catch(...){std::terminate();}return ret;}template<class T=T80,class=std::enable_if_t<std::is_void<T>::value>>static NAME V80(){NAME ret(kind::V80);return ret;}
#define _impl_adt_MS80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80) _impl_adt_MS7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)case kind::V80:m.call_##V80(data_.V80);break;
#define _impl_adt_Ds80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80) _impl_adt_Ds7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)case kind::V80:data_.V80.~decltype(data_.V80)();break;
#define _impl_adt_Cc80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80) _impl_adt_Cc7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)case kind::V80:new(&data_.V80)decltype(data_.V80)(a.data_.V80);break;
#define _impl_adt_Mc80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80) _impl_adt_Mc7f(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f)case kind::V80:new(&data_.V80)decltype(data_.V80)(std::move(a.data_.V80));break;
#define adt80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80) class NAME {public:enum class kind{_impl_adt_K80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80)};private:kind kind_;union data{_impl_adt_D80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80)}data_;public:class matcher{_impl_adt_MF80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80)public:_impl_adt_MM80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80)};friend void swap(NAME& l, NAME& r){std::swap(l.kind_,r.kind_);std::swap(l.data_,r.data_);}NAME(NAME const& a):NAME(a.kind_){switch(kind_){_impl_adt_Cc80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80)}}NAME(NAME&& a):NAME(a.kind_){switch(kind_){_impl_adt_Mc80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80)}}NAME& operator=(NAME o){swap(*this,o);return *this;}~NAME(){switch(kind_){_impl_adt_Ds80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80)}}_impl_adt_M80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80)void match(matcher const& m){switch(kind_){_impl_adt_MS80(NAME,V1,T1,V2,T2,V3,T3,V4,T4,V5,T5,V6,T6,V7,T7,V8,T8,V9,T9,Va,Ta,Vb,Tb,Vc,Tc,Vd,Td,Ve,Te,Vf,Tf,V10,T10,V11,T11,V12,T12,V13,T13,V14,T14,V15,T15,V16,T16,V17,T17,V18,T18,V19,T19,V1a,T1a,V1b,T1b,V1c,T1c,V1d,T1d,V1e,T1e,V1f,T1f,V20,T20,V21,T21,V22,T22,V23,T23,V24,T24,V25,T25,V26,T26,V27,T27,V28,T28,V29,T29,V2a,T2a,V2b,T2b,V2c,T2c,V2d,T2d,V2e,T2e,V2f,T2f,V30,T30,V31,T31,V32,T32,V33,T33,V34,T34,V35,T35,V36,T36,V37,T37,V38,T38,V39,T39,V3a,T3a,V3b,T3b,V3c,T3c,V3d,T3d,V3e,T3e,V3f,T3f,V40,T40,V41,T41,V42,T42,V43,T43,V44,T44,V45,T45,V46,T46,V47,T47,V48,T48,V49,T49,V4a,T4a,V4b,T4b,V4c,T4c,V4d,T4d,V4e,T4e,V4f,T4f,V50,T50,V51,T51,V52,T52,V53,T53,V54,T54,V55,T55,V56,T56,V57,T57,V58,T58,V59,T59,V5a,T5a,V5b,T5b,V5c,T5c,V5d,T5d,V5e,T5e,V5f,T5f,V60,T60,V61,T61,V62,T62,V63,T63,V64,T64,V65,T65,V66,T66,V67,T67,V68,T68,V69,T69,V6a,T6a,V6b,T6b,V6c,T6c,V6d,T6d,V6e,T6e,V6f,T6f,V70,T70,V71,T71,V72,T72,V73,T73,V74,T74,V75,T75,V76,T76,V77,T77,V78,T78,V79,T79,V7a,T7a,V7b,T7b,V7c,T7c,V7d,T7d,V7e,T7e,V7f,T7f,V80,T80)}}private:
